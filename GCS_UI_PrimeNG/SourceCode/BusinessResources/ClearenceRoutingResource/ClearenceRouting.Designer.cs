//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UMGI.GRCS.Resx.Resource.ClearenceRoutingResource {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ClearenceRouting {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ClearenceRouting() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UMGI.GRCS.Resx.Resource.ClearenceRoutingResource.ClearenceRouting", typeof(ClearenceRouting).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country match with more than one contract.
        /// </summary>
        public static string CountryMatchWithMultiContracts {
            get {
                return ResourceManager.GetString("CountryMatchWithMultiContracts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country(ies) do not match with contract.
        /// </summary>
        public static string CountryMatchWithNoContract {
            get {
                return ResourceManager.GetString("CountryMatchWithNoContract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Globally cleared.
        /// </summary>
        public static string GloballyClearedFlag {
            get {
                return ResourceManager.GetString("GloballyClearedFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No rights for this resource.
        /// </summary>
        public static string LossOfRights {
            get {
                return ResourceManager.GetString("LossOfRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No consent. Marketing will be notified by email; Permission subject to 10-days withholding period for Marketing appeal.
        /// </summary>
        public static string MAAutoApprovedFlag_WithNotification {
            get {
                return ResourceManager.GetString("MAAutoApprovedFlag_WithNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No consent.
        /// </summary>
        public static string MAAutoApprovedFlag_WithoutNotification {
            get {
                return ResourceManager.GetString("MAAutoApprovedFlag_WithoutNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No contract found.
        /// </summary>
        public static string NoContractAvailable {
            get {
                return ResourceManager.GetString("NoContractAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No digital rights.
        /// </summary>
        public static string NoDigitalRights {
            get {
                return ResourceManager.GetString("NoDigitalRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No International Legal workgroup identified.
        /// </summary>
        public static string NoLegalInternationalWorkgroupAvailable {
            get {
                return ResourceManager.GetString("NoLegalInternationalWorkgroupAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to no synchronization rights.
        /// </summary>
        public static string NoMasterContract {
            get {
                return ResourceManager.GetString("NoMasterContract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to no rights for all or part of requested country(ies).
        /// </summary>
        public static string NoMatchRequestedAndContractCountry {
            get {
                return ResourceManager.GetString("NoMatchRequestedAndContractCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to no multi-artist compilation rights.
        /// </summary>
        public static string NoMultiArtistCompilationRights {
            get {
                return ResourceManager.GetString("NoMultiArtistCompilationRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No physical rights.
        /// </summary>
        public static string NoPhysicalRights {
            get {
                return ResourceManager.GetString("NoPhysicalRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource is on pre-cleared list. No contractual territories have been defined. Please review territorial rights.
        /// </summary>
        public static string NoTerritoryAndPreclearedMasterOrMultiArtist {
            get {
                return ResourceManager.GetString("NoTerritoryAndPreclearedMasterOrMultiArtist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contracts have no countries specified.
        /// </summary>
        public static string NoTerritoryOnContracts {
            get {
                return ResourceManager.GetString("NoTerritoryOnContracts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One Stop Request.
        /// </summary>
        public static string OneStopFlag {
            get {
                return ResourceManager.GetString("OneStopFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pre-Cleared.
        /// </summary>
        public static string PreClearedFlag {
            get {
                return ResourceManager.GetString("PreClearedFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an exception occured in project level routing.
        /// </summary>
        public static string ProjectRoutingExceptionMsg {
            get {
                return ResourceManager.GetString("ProjectRoutingExceptionMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regular request for existing release at mid/budget price.
        /// </summary>
        public static string RegularTypeExistingReleaseWithMidOrBudget {
            get {
                return ResourceManager.GetString("RegularTypeExistingReleaseWithMidOrBudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regular request for new release at budget price.
        /// </summary>
        public static string RegularTypeNewReleaseWithBudget {
            get {
                return ResourceManager.GetString("RegularTypeNewReleaseWithBudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regular request for new release at mid price.
        /// </summary>
        public static string RegularTypeNewReleaseWithMid {
            get {
                return ResourceManager.GetString("RegularTypeNewReleaseWithMid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an exception occured in resource level routing.
        /// </summary>
        public static string ResourceRoutingExceptionMsg {
            get {
                return ResourceManager.GetString("ResourceRoutingExceptionMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensitive Exploitation.
        /// </summary>
        public static string SensitiveExploitationAtProject {
            get {
                return ResourceManager.GetString("SensitiveExploitationAtProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensitive Exploitation.
        /// </summary>
        public static string SensitiveExploitationAtResource {
            get {
                return ResourceManager.GetString("SensitiveExploitationAtResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped International marketing for Regular compilation; Marketing will be notified by email; Permission subject to 10-days holding period for Marketing appeal.
        /// </summary>
        public static string SkipMarketingRuleFourPointOne {
            get {
                return ResourceManager.GetString("SkipMarketingRuleFourPointOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped International marketing for Regular price reduction request; Marketing will be notified by email; Permission subject to 10-days holding period for Marketing appeal.
        /// </summary>
        public static string SkipMarketingRuleFourPointTwo {
            get {
                return ResourceManager.GetString("SkipMarketingRuleFourPointTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested countries do not match with contractual countries.
        /// </summary>
        public static string SplitTerritory {
            get {
                return ResourceManager.GetString("SplitTerritory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3rd party company is Reader&apos;s Digest.
        /// </summary>
        public static string ThirdPartyCompany {
            get {
                return ResourceManager.GetString("ThirdPartyCompany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross Border Request.
        /// </summary>
        public static string XBorder {
            get {
                return ResourceManager.GetString("XBorder", resourceCulture);
            }
        }
    }
}
