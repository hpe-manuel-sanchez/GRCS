<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssignedTo" xml:space="preserve">
    <value>Assigned To</value>
    <comment>For use in Request Detail + Project Detail grids</comment>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
    <comment>For use in Request Detail grids</comment>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
    <comment>For use in Request Detail grids</comment>
  </data>
  <data name="Contracts" xml:space="preserve">
    <value>Contracts</value>
    <comment>For use in Request Detail grids</comment>
  </data>
  <data name="EstimatedSales" xml:space="preserve">
    <value>Estimated Sales</value>
    <comment>For use in Project Detail grid</comment>
  </data>
  <data name="Isrc" xml:space="preserve">
    <value>ISRC</value>
    <comment>For use in Request Detail grids</comment>
  </data>
  <data name="NotificationRecievedDate" xml:space="preserve">
    <value>Notification Recieved Date</value>
    <comment>For use in Project Detail grid</comment>
  </data>
  <data name="ProjectReferenceNumber" xml:space="preserve">
    <value>Project Reference No.</value>
    <comment>For use in Project Detail grid</comment>
  </data>
  <data name="ProjectTitle" xml:space="preserve">
    <value>Project Title</value>
    <comment>For use in Project Detail grid</comment>
  </data>
  <data name="ReleaseDate" xml:space="preserve">
    <value>Release Date</value>
    <comment>For use in Project Detail grid</comment>
  </data>
  <data name="RequestorName" xml:space="preserve">
    <value>Requestor Name</value>
    <comment>For use in Project Detail grid</comment>
  </data>
  <data name="Resource" xml:space="preserve">
    <value>Resource</value>
    <comment>For use in Request Detail grids</comment>
  </data>
  <data name="ResourceType" xml:space="preserve">
    <value>Resource Type</value>
    <comment>For use in Request Detail grids</comment>
  </data>
  <data name="ReviewComments" xml:space="preserve">
    <value>Review Comments</value>
    <comment>For use in Request Detail grids</comment>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
    <comment>For use in Project Detail grid</comment>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
    <comment>For use in Request Detail grids</comment>
  </data>
  <data name="SubmissionDate" xml:space="preserve">
    <value>Submission Date</value>
    <comment>For use in Request Detail grids</comment>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
    <comment>For use in Project Detail grid</comment>
  </data>
  <data name="Upc" xml:space="preserve">
    <value>UPC</value>
    <comment>For use in Request Detail grids</comment>
  </data>
  <data name="Workgroup" xml:space="preserve">
    <value>Workgroup</value>
    <comment>For use in Project Detail grid</comment>
  </data>
  <data name="ApplyFilters" xml:space="preserve">
    <value>Apply Filters</value>
    <comment>For use in Filter Panel</comment>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
    <comment>For use in Center Panel</comment>
  </data>
  <data name="Filters" xml:space="preserve">
    <value>Filters</value>
    <comment>For use in Filter Panel</comment>
  </data>
  <data name="Inbox" xml:space="preserve">
    <value>Inbox</value>
    <comment>For use in Center Panel</comment>
  </data>
  <data name="NewFolder" xml:space="preserve">
    <value>New Folder</value>
    <comment>For use in Center Panel</comment>
  </data>
  <data name="RCCHandler" xml:space="preserve">
    <value>RCC Handler:</value>
    <comment>For use in Right Panel</comment>
  </data>
  <data name="RequestType" xml:space="preserve">
    <value>Request Type</value>
    <comment>For use in Filter Panel</comment>
  </data>
  <data name="ResourcesOfExistingReleases" xml:space="preserve">
    <value>Resources Of Existing Releases</value>
    <comment>For use in Right Panel</comment>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
    <comment>For use in Filter Panel</comment>
  </data>
  <data name="Scope" xml:space="preserve">
    <value>Scope:</value>
    <comment>For use in Filter Panel</comment>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
    <comment>For use in Center Panel</comment>
  </data>
  <data name="Submitted" xml:space="preserve">
    <value>Submitted</value>
    <comment>For use in Right Panel</comment>
  </data>
  <data name="Colon" xml:space="preserve">
    <value>:</value>
    <comment>For general use</comment>
  </data>
  <data name="ProjectActionErrorMsg" xml:space="preserve">
    <value>Project is locked by </value>
    <comment>To show error msg , in case another user has updated the project.</comment>
  </data>
  <data name="ProjectLockingMsg" xml:space="preserve">
    <value>The project is being viewed by User. Do you want to open it in read only mode?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="MassReminders" xml:space="preserve">
    <value>Mass Reminders</value>
  </data>
  <data name="SendReminders" xml:space="preserve">
    <value>Send Reminders</value>
  </data>
  <data name="UpcAllocationEmailMsg" xml:space="preserve">
    <value>The email cannot be sent because the project does not meet the criteria for this email.</value>
  </data>
  <data name="ProjectActionErrorMsg1" xml:space="preserve">
    <value>Your action cannot be completed.</value>
  </data>
</root>