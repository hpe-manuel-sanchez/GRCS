//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets3539E23B163BECFED6E76E0733C11F54BE1EACCD0D6D23851F60D7A612F64037))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets3539E23B163BECFED6E76E0733C11F54BE1EACCD0D6D23851F60D7A612F64037 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets3539E23B163BECFED6E76E0733C11F54BE1EACCD0D6D23851F60D7A612F64037()
        {
            this.EdmEntityContainerName = "RepertoireDataEntities";
            this.StoreEntityContainerName = "RepertoiretDataModelStoreContainer";
            this.HashOverMappingClosure = "88d1d412c04f4db845a1fe611c2e1b4f7bc568afcaf1dc854ef26bd3ea5ad2e7";
            this.HashOverAllExtentViews = "c07d847aa506c0694cf17058f9bc3f2cee9723d7770648e0a2f949d1820c0a8f";
            this.ViewCount = 56;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Artist
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Artist", @"
    SELECT VALUE -- Constructing Artist
        [RepertoiretDataModel.Store.Artist](T1.[Artist.Artist_Id], T1.[Artist.Talent_Id], T1.[Artist.Account_Id], T1.[Artist.Artist_Name], T1.[Artist.Contributor_Type], T1.[Artist.Created_User], T1.[Artist.Created_Dttm], T1.[Artist.Modified_User], T1.[Artist.Modified_Dttm], T1.[Artist.Archive_Flag])
    FROM (
        SELECT 
            T.Artist_Id AS [Artist.Artist_Id], 
            T.Talent_Id AS [Artist.Talent_Id], 
            T.Account_Id AS [Artist.Account_Id], 
            T.Artist_Name AS [Artist.Artist_Name], 
            T.Contributor_Type AS [Artist.Contributor_Type], 
            T.Created_User AS [Artist.Created_User], 
            T.Created_Dttm AS [Artist.Created_Dttm], 
            T.Modified_User AS [Artist.Modified_User], 
            T.Modified_Dttm AS [Artist.Modified_Dttm], 
            T.Archive_Flag AS [Artist.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Artist AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Clr_Project_Release
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3471);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Clr_Project_Release\r\n        [RepertoiretData");
            viewString.Append("Model.Store.Clr_Project_Release](T1.[Clr_Project_Release.Clr_Project_Release_Id]");
            viewString.Append(", T1.[Clr_Project_Release.Release_Id], T1.[Clr_Project_Release.Sales_Channel_Id]");
            viewString.Append(", T1.[Clr_Project_Release.Clr_Project_Id], T1.[Clr_Project_Release.Is_Multi_Arti");
            viewString.Append("st], T1.[Clr_Project_Release.Is_Compilation], T1.[Clr_Project_Release.Is_Existin");
            viewString.Append("g], T1.[Clr_Project_Release.Release_Dt], T1.[Clr_Project_Release.Price_Level_Typ");
            viewString.Append("e], T1.[Clr_Project_Release.Icla_Level_Type], T1.[Clr_Project_Release.Icla_Level");
            viewString.Append("_Deviated_Type], T1.[Clr_Project_Release.Icla_Level_Deviated_Comment], T1.[Clr_P");
            viewString.Append("roject_Release.Comment], T1.[Clr_Project_Release.Deemed_Ppd_Price], T1.[Clr_Proj");
            viewString.Append("ect_Release.Invoice_Price], T1.[Clr_Project_Release.Selling_Price], T1.[Clr_Proj");
            viewString.Append("ect_Release.Icla_Base_Price], T1.[Clr_Project_Release.Estimated_Retail_Price], T");
            viewString.Append("1.[Clr_Project_Release.Exact_Ppd_Price], T1.[Clr_Project_Release.Resource_Fee], ");
            viewString.Append("T1.[Clr_Project_Release.Is_Icla_Level_Deviated], T1.[Clr_Project_Release.Is_Icla");
            viewString.Append("], T1.[Clr_Project_Release.Is_Suggestedfee], T1.[Clr_Project_Release.Created_Use");
            viewString.Append("r], T1.[Clr_Project_Release.Created_Dttm], T1.[Clr_Project_Release.Modified_User");
            viewString.Append("], T1.[Clr_Project_Release.Modified_Dttm], T1.[Clr_Project_Release.Archive_Flag]");
            viewString.Append(")\r\n    FROM (\r\n        SELECT \r\n            T.Clr_Project_Release_Id AS [Clr_Pro");
            viewString.Append("ject_Release.Clr_Project_Release_Id], \r\n            T.Release_Id AS [Clr_Project");
            viewString.Append("_Release.Release_Id], \r\n            T.Sales_Channel_Id AS [Clr_Project_Release.S");
            viewString.Append("ales_Channel_Id], \r\n            T.Clr_Project_Id AS [Clr_Project_Release.Clr_Pro");
            viewString.Append("ject_Id], \r\n            T.Is_Multi_Artist AS [Clr_Project_Release.Is_Multi_Artis");
            viewString.Append("t], \r\n            T.Is_Compilation AS [Clr_Project_Release.Is_Compilation], \r\n  ");
            viewString.Append("          T.Is_Existing AS [Clr_Project_Release.Is_Existing], \r\n            T.Re");
            viewString.Append("lease_Dt AS [Clr_Project_Release.Release_Dt], \r\n            T.Price_Level_Type A");
            viewString.Append("S [Clr_Project_Release.Price_Level_Type], \r\n            T.Icla_Level_Type AS [Cl");
            viewString.Append("r_Project_Release.Icla_Level_Type], \r\n            T.Icla_Level_Deviated_Type AS ");
            viewString.Append("[Clr_Project_Release.Icla_Level_Deviated_Type], \r\n            T.Icla_Level_Devia");
            viewString.Append("ted_Comment AS [Clr_Project_Release.Icla_Level_Deviated_Comment], \r\n            ");
            viewString.Append("T.Comment AS [Clr_Project_Release.Comment], \r\n            T.Deemed_Ppd_Price AS ");
            viewString.Append("[Clr_Project_Release.Deemed_Ppd_Price], \r\n            T.Invoice_Price AS [Clr_Pr");
            viewString.Append("oject_Release.Invoice_Price], \r\n            T.Selling_Price AS [Clr_Project_Rele");
            viewString.Append("ase.Selling_Price], \r\n            T.Icla_Base_Price AS [Clr_Project_Release.Icla");
            viewString.Append("_Base_Price], \r\n            T.Estimated_Retail_Price AS [Clr_Project_Release.Est");
            viewString.Append("imated_Retail_Price], \r\n            T.Exact_Ppd_Price AS [Clr_Project_Release.Ex");
            viewString.Append("act_Ppd_Price], \r\n            T.Resource_Fee AS [Clr_Project_Release.Resource_Fe");
            viewString.Append("e], \r\n            T.Is_Icla_Level_Deviated AS [Clr_Project_Release.Is_Icla_Level");
            viewString.Append("_Deviated], \r\n            T.Is_Icla AS [Clr_Project_Release.Is_Icla], \r\n        ");
            viewString.Append("    T.Is_Suggestedfee AS [Clr_Project_Release.Is_Suggestedfee], \r\n            T.");
            viewString.Append("Created_User AS [Clr_Project_Release.Created_User], \r\n            T.Created_Dttm");
            viewString.Append(" AS [Clr_Project_Release.Created_Dttm], \r\n            T.Modified_User AS [Clr_Pr");
            viewString.Append("oject_Release.Modified_User], \r\n            T.Modified_Dttm AS [Clr_Project_Rele");
            viewString.Append("ase.Modified_Dttm], \r\n            T.Archive_Flag AS [Clr_Project_Release.Archive");
            viewString.Append("_Flag], \r\n            True AS _from0\r\n        FROM RepertoireDataEntities.Clr_Pr");
            viewString.Append("oject_Release AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Clr_Project_Release", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Label
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Label", @"
    SELECT VALUE -- Constructing Label
        [RepertoiretDataModel.Store.Label](T1.[Label.Label_Id], T1.[Label.Label_Name], T1.[Label.Gta_Status], T1.[Label.Created_User], T1.[Label.Created_Dttm], T1.[Label.Modified_User], T1.[Label.Modified_Dttm], T1.[Label.Archive_Flag])
    FROM (
        SELECT 
            T.Label_Id AS [Label.Label_Id], 
            T.Label_Name AS [Label.Label_Name], 
            T.Gta_Status AS [Label.Gta_Status], 
            T.Created_User AS [Label.Created_User], 
            T.Created_Dttm AS [Label.Created_Dttm], 
            T.Modified_User AS [Label.Modified_User], 
            T.Modified_Dttm AS [Label.Modified_Dttm], 
            T.Archive_Flag AS [Label.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Label AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Package
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Package", @"
    SELECT VALUE -- Constructing Package
        [RepertoiretDataModel.Store.Package](T1.[Package.Package_Id], T1.[Package.Parent_Id], T1.Package_Sequence, T1.[Package.Release_Id], T1.[Package.Source_System_Name], T1.[Package.Source_Id], T1.[Package.Stg_Source_Id], T1.[Package.Created_User], T1.[Package.Created_Dttm], T1.[Package.Modified_User], T1.[Package.Modified_Dttm], T1.[Package.Archive_Flag])
    FROM (
        SELECT 
            T.Package_Id AS [Package.Package_Id], 
            T.Parent_Id AS [Package.Parent_Id], 
            T.Sequence AS Package_Sequence, 
            T.Release_Id AS [Package.Release_Id], 
            T.Source_System_Name AS [Package.Source_System_Name], 
            T.Source_Id AS [Package.Source_Id], 
            T.Stg_Source_Id AS [Package.Stg_Source_Id], 
            T.Created_User AS [Package.Created_User], 
            T.Created_Dttm AS [Package.Created_Dttm], 
            T.Modified_User AS [Package.Modified_User], 
            T.Modified_Dttm AS [Package.Modified_Dttm], 
            T.Archive_Flag AS [Package.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Package AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Project
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Project", @"
    SELECT VALUE -- Constructing Project
        [RepertoiretDataModel.Store.Project](T1.[Project.Project_Id], T1.[Project.Account_Id], T1.Project_Code, T1.[Project.Admin_Company_Id], T1.Project_Description, T1.[Project.Is_Contract_Required], T1.[Project.Label_Id], T1.[Project.Created_User], T1.[Project.Created_Dttm], T1.[Project.Modified_User], T1.[Project.Modified_Dttm], T1.[Project.Archive_Flag])
    FROM (
        SELECT 
            T.Project_Id AS [Project.Project_Id], 
            T.Account_Id AS [Project.Account_Id], 
            T.Code AS Project_Code, 
            T.Admin_Company_Id AS [Project.Admin_Company_Id], 
            T.Description AS Project_Description, 
            T.Is_Contract_Required AS [Project.Is_Contract_Required], 
            T.Label_Id AS [Project.Label_Id], 
            T.Created_User AS [Project.Created_User], 
            T.Created_Dttm AS [Project.Created_Dttm], 
            T.Modified_User AS [Project.Modified_User], 
            T.Modified_Dttm AS [Project.Modified_Dttm], 
            T.Archive_Flag AS [Project.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Project AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Project_Artist
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Project_Artist", @"
    SELECT VALUE -- Constructing Project_Artist
        [RepertoiretDataModel.Store.Project_Artist](T1.[Project_Artist.Project_Artist_Id], T1.[Project_Artist.Project_Id], T1.[Project_Artist.Artist_Id], T1.[Project_Artist.Created_User], T1.[Project_Artist.Created_Dttm], T1.[Project_Artist.Modified_User], T1.[Project_Artist.Modified_Dttm], T1.[Project_Artist.Archive_Flag])
    FROM (
        SELECT 
            T.Project_Artist_Id AS [Project_Artist.Project_Artist_Id], 
            T.Project_Id AS [Project_Artist.Project_Id], 
            T.Artist_Id AS [Project_Artist.Artist_Id], 
            T.Created_User AS [Project_Artist.Created_User], 
            T.Created_Dttm AS [Project_Artist.Created_Dttm], 
            T.Modified_User AS [Project_Artist.Modified_User], 
            T.Modified_Dttm AS [Project_Artist.Modified_Dttm], 
            T.Archive_Flag AS [Project_Artist.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Project_Artist AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Project_Contract
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Project_Contract", @"
    SELECT VALUE -- Constructing Project_Contract
        [RepertoiretDataModel.Store.Project_Contract](T1.[Project_Contract.Project_Contract_Id], T1.[Project_Contract.Project_Id], T1.[Project_Contract.Contract_Id], T1.[Project_Contract.Created_User], T1.[Project_Contract.Created_Dttm], T1.[Project_Contract.Modified_User], T1.[Project_Contract.Modified_Dttm], T1.[Project_Contract.Archive_Flag])
    FROM (
        SELECT 
            T.Project_Contract_Id AS [Project_Contract.Project_Contract_Id], 
            T.Project_Id AS [Project_Contract.Project_Id], 
            T.Contract_Id AS [Project_Contract.Contract_Id], 
            T.Created_User AS [Project_Contract.Created_User], 
            T.Created_Dttm AS [Project_Contract.Created_Dttm], 
            T.Modified_User AS [Project_Contract.Modified_User], 
            T.Modified_Dttm AS [Project_Contract.Modified_Dttm], 
            T.Archive_Flag AS [Project_Contract.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Project_Contract AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Project_Release
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Project_Release", @"
    SELECT VALUE -- Constructing Project_Release
        [RepertoiretDataModel.Store.Project_Release](T1.[Project_Release.Project_Release_Id], T1.[Project_Release.Project_Id], T1.[Project_Release.Release_Id], T1.[Project_Release.Created_User], T1.[Project_Release.Created_Dttm], T1.[Project_Release.Modified_User], T1.[Project_Release.Modified_Dttm], T1.[Project_Release.Archive_Flag])
    FROM (
        SELECT 
            T.Project_Release_Id AS [Project_Release.Project_Release_Id], 
            T.Project_Id AS [Project_Release.Project_Id], 
            T.Release_Id AS [Project_Release.Release_Id], 
            T.Created_User AS [Project_Release.Created_User], 
            T.Created_Dttm AS [Project_Release.Created_Dttm], 
            T.Modified_User AS [Project_Release.Modified_User], 
            T.Modified_Dttm AS [Project_Release.Modified_Dttm], 
            T.Archive_Flag AS [Project_Release.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Project_Release AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Project_Resource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Project_Resource", @"
    SELECT VALUE -- Constructing Project_Resource
        [RepertoiretDataModel.Store.Project_Resource](T1.[Project_Resource.Project_Resource_Id], T1.[Project_Resource.Project_Id], T1.[Project_Resource.Resource_Id], T1.[Project_Resource.Created_User], T1.[Project_Resource.Created_Dttm], T1.[Project_Resource.Modified_User], T1.[Project_Resource.Modified_Dttm], T1.[Project_Resource.Archive_Flag])
    FROM (
        SELECT 
            T.Project_Resource_Id AS [Project_Resource.Project_Resource_Id], 
            T.Project_Id AS [Project_Resource.Project_Id], 
            T.Resource_Id AS [Project_Resource.Resource_Id], 
            T.Created_User AS [Project_Resource.Created_User], 
            T.Created_Dttm AS [Project_Resource.Created_Dttm], 
            T.Modified_User AS [Project_Resource.Modified_User], 
            T.Modified_Dttm AS [Project_Resource.Modified_Dttm], 
            T.Archive_Flag AS [Project_Resource.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Project_Resource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Release
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2799);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Release\r\n        [RepertoiretDataModel.Store.");
            viewString.Append("Release](T1.[Release.Release_Id], T1.[Release.R2_Release_Id], T1.[Release.Accoun");
            viewString.Append("t_Id], T1.Release_Upc, T1.Release_Grid, T1.Release_Title, T1.[Release.Version_Ti");
            viewString.Append("tle], T1.[Release.Configuration_Id], T1.[Release.Catalogue_Number], T1.[Release.");
            viewString.Append("P_Company_Id], T1.[Release.P_Year], T1.[Release.P_Notice_Extension], T1.[Release");
            viewString.Append(".Earliest_Release_Dt], T1.[Release.Admin_Company_Id], T1.[Release.Is_Mac], T1.[R");
            viewString.Append("elease.Is_Ost], T1.[Release.Music_Class_Type], T1.[Release.Label_Id], T1.[Releas");
            viewString.Append("e.No_Components], T1.[Release.No_Tracks], T1.[Release.Scope_Type], T1.[Release.R");
            viewString.Append("2_Workflow_Status_Type], T1.[Release.Is_Upc_Manual], T1.[Release.Configuration_G");
            viewString.Append("roup_Code], T1.[Release.Source_System_Name], T1.[Release.Stg_Source_Id], T1.[Rel");
            viewString.Append("ease.Created_User], T1.[Release.Created_Dttm], T1.[Release.Modified_User], T1.[R");
            viewString.Append("elease.Modified_Dttm], T1.[Release.Archive_Flag])\r\n    FROM (\r\n        SELECT \r\n");
            viewString.Append("            T.Release_Id AS [Release.Release_Id], \r\n            T.R2_Release_Id ");
            viewString.Append("AS [Release.R2_Release_Id], \r\n            T.Account_Id AS [Release.Account_Id], ");
            viewString.Append("\r\n            T.Upc AS Release_Upc, \r\n            T.Grid AS Release_Grid, \r\n    ");
            viewString.Append("        T.Title AS Release_Title, \r\n            T.Version_Title AS [Release.Vers");
            viewString.Append("ion_Title], \r\n            T.Configuration_Id AS [Release.Configuration_Id], \r\n  ");
            viewString.Append("          T.Catalogue_Number AS [Release.Catalogue_Number], \r\n            T.P_Co");
            viewString.Append("mpany_Id AS [Release.P_Company_Id], \r\n            T.P_Year AS [Release.P_Year], ");
            viewString.Append("\r\n            T.P_Notice_Extension AS [Release.P_Notice_Extension], \r\n          ");
            viewString.Append("  T.Earliest_Release_Dt AS [Release.Earliest_Release_Dt], \r\n            T.Admin_");
            viewString.Append("Company_Id AS [Release.Admin_Company_Id], \r\n            T.Is_Mac AS [Release.Is_");
            viewString.Append("Mac], \r\n            T.Is_Ost AS [Release.Is_Ost], \r\n            T.Music_Class_Ty");
            viewString.Append("pe AS [Release.Music_Class_Type], \r\n            T.Label_Id AS [Release.Label_Id]");
            viewString.Append(", \r\n            T.No_Components AS [Release.No_Components], \r\n            T.No_T");
            viewString.Append("racks AS [Release.No_Tracks], \r\n            T.Scope_Type AS [Release.Scope_Type]");
            viewString.Append(", \r\n            T.R2_Workflow_Status_Type AS [Release.R2_Workflow_Status_Type], ");
            viewString.Append("\r\n            T.Is_Upc_Manual AS [Release.Is_Upc_Manual], \r\n            T.Config");
            viewString.Append("uration_Group_Code AS [Release.Configuration_Group_Code], \r\n            T.Source");
            viewString.Append("_System_Name AS [Release.Source_System_Name], \r\n            T.Stg_Source_Id AS [");
            viewString.Append("Release.Stg_Source_Id], \r\n            T.Created_User AS [Release.Created_User], ");
            viewString.Append("\r\n            T.Created_Dttm AS [Release.Created_Dttm], \r\n            T.Modified");
            viewString.Append("_User AS [Release.Modified_User], \r\n            T.Modified_Dttm AS [Release.Modi");
            viewString.Append("fied_Dttm], \r\n            T.Archive_Flag AS [Release.Archive_Flag], \r\n          ");
            viewString.Append("  True AS _from0\r\n        FROM RepertoireDataEntities.Release AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Release", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Release_Artist
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Release_Artist", @"
    SELECT VALUE -- Constructing Release_Artist
        [RepertoiretDataModel.Store.Release_Artist](T1.[Release_Artist.Release_Artist_Id], T1.[Release_Artist.R2_Release_Artist_Id], T1.[Release_Artist.Release_Id], T1.[Release_Artist.Artist_Id], T1.[Release_Artist.Source_System_Name], T1.[Release_Artist.Stg_Source_Id], T1.[Release_Artist.Created_User], T1.[Release_Artist.Created_Dttm], T1.[Release_Artist.Modified_User], T1.[Release_Artist.Modified_Dttm], T1.[Release_Artist.Archive_Flag])
    FROM (
        SELECT 
            T.Release_Artist_Id AS [Release_Artist.Release_Artist_Id], 
            T.R2_Release_Artist_Id AS [Release_Artist.R2_Release_Artist_Id], 
            T.Release_Id AS [Release_Artist.Release_Id], 
            T.Artist_Id AS [Release_Artist.Artist_Id], 
            T.Source_System_Name AS [Release_Artist.Source_System_Name], 
            T.Stg_Source_Id AS [Release_Artist.Stg_Source_Id], 
            T.Created_User AS [Release_Artist.Created_User], 
            T.Created_Dttm AS [Release_Artist.Created_Dttm], 
            T.Modified_User AS [Release_Artist.Modified_User], 
            T.Modified_Dttm AS [Release_Artist.Modified_Dttm], 
            T.Archive_Flag AS [Release_Artist.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Release_Artist AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Release_Right
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Release_Right", @"
    SELECT VALUE -- Constructing Release_Right
        [RepertoiretDataModel.Store.Release_Right](T1.[Release_Right.Release_Right_Id], T1.[Release_Right.Release_Id], T1.[Release_Right.Right_Set_Id], T1.[Release_Right.Contract_Id], T1.[Release_Right.Assigned_Type], T1.[Release_Right.Created_User], T1.[Release_Right.Created_Dttm], T1.[Release_Right.Modified_User], T1.[Release_Right.Modified_Dttm], T1.[Release_Right.Archive_Flag])
    FROM (
        SELECT 
            T.Release_Right_Id AS [Release_Right.Release_Right_Id], 
            T.Release_Id AS [Release_Right.Release_Id], 
            T.Right_Set_Id AS [Release_Right.Right_Set_Id], 
            T.Contract_Id AS [Release_Right.Contract_Id], 
            T.Assigned_Type AS [Release_Right.Assigned_Type], 
            T.Created_User AS [Release_Right.Created_User], 
            T.Created_Dttm AS [Release_Right.Created_Dttm], 
            T.Modified_User AS [Release_Right.Modified_User], 
            T.Modified_Dttm AS [Release_Right.Modified_Dttm], 
            T.Archive_Flag AS [Release_Right.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Release_Right AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Resource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2843);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Resource\r\n        [RepertoiretDataModel.Store");
            viewString.Append(".Resource](T1.[Resource.Resource_Id], T1.[Resource.R2_Resource_Id], T1.[Resource");
            viewString.Append(".Account_Id], T1.Resource_Isrc, T1.Resource_Title, T1.[Resource.Rights_Type], T1");
            viewString.Append(".[Resource.Version_Title], T1.[Resource.Resource_Type], T1.[Resource.Genre_Id], ");
            viewString.Append("T1.[Resource.P_Company_Id], T1.[Resource.P_Year], T1.[Resource.P_Notice_Extensio");
            viewString.Append("n], T1.[Resource.Is_Sample_Exists], T1.[Resource.Sample_Credit], T1.[Resource.Is");
            viewString.Append("_Side_Artist_Exists], T1.[Resource.Earliest_Release_Dt], T1.[Resource.Admin_Comp");
            viewString.Append("any_Id], T1.[Resource.Source_Upc], T1.[Resource.Live_Studio_Type], T1.[Resource.");
            viewString.Append("Music_Class_Type], T1.[Resource.Music_Time], T1.[Resource.R2_Resource_Company_Li");
            viewString.Append("nk_Id], T1.[Resource.Label_Id], T1.[Resource.Source_System_Name], T1.[Resource.S");
            viewString.Append("tg_Source_Id], T1.[Resource.Created_User], T1.[Resource.Created_Dttm], T1.[Resou");
            viewString.Append("rce.Modified_User], T1.[Resource.Modified_Dttm], T1.[Resource.Archive_Flag])\r\n  ");
            viewString.Append("  FROM (\r\n        SELECT \r\n            T.Resource_Id AS [Resource.Resource_Id], ");
            viewString.Append("\r\n            T.R2_Resource_Id AS [Resource.R2_Resource_Id], \r\n            T.Acc");
            viewString.Append("ount_Id AS [Resource.Account_Id], \r\n            T.Isrc AS Resource_Isrc, \r\n     ");
            viewString.Append("       T.Title AS Resource_Title, \r\n            T.Rights_Type AS [Resource.Right");
            viewString.Append("s_Type], \r\n            T.Version_Title AS [Resource.Version_Title], \r\n          ");
            viewString.Append("  T.Resource_Type AS [Resource.Resource_Type], \r\n            T.Genre_Id AS [Reso");
            viewString.Append("urce.Genre_Id], \r\n            T.P_Company_Id AS [Resource.P_Company_Id], \r\n     ");
            viewString.Append("       T.P_Year AS [Resource.P_Year], \r\n            T.P_Notice_Extension AS [Res");
            viewString.Append("ource.P_Notice_Extension], \r\n            T.Is_Sample_Exists AS [Resource.Is_Samp");
            viewString.Append("le_Exists], \r\n            T.Sample_Credit AS [Resource.Sample_Credit], \r\n       ");
            viewString.Append("     T.Is_Side_Artist_Exists AS [Resource.Is_Side_Artist_Exists], \r\n            ");
            viewString.Append("T.Earliest_Release_Dt AS [Resource.Earliest_Release_Dt], \r\n            T.Admin_C");
            viewString.Append("ompany_Id AS [Resource.Admin_Company_Id], \r\n            T.Source_Upc AS [Resourc");
            viewString.Append("e.Source_Upc], \r\n            T.Live_Studio_Type AS [Resource.Live_Studio_Type], ");
            viewString.Append("\r\n            T.Music_Class_Type AS [Resource.Music_Class_Type], \r\n            T");
            viewString.Append(".Music_Time AS [Resource.Music_Time], \r\n            T.R2_Resource_Company_Link_I");
            viewString.Append("d AS [Resource.R2_Resource_Company_Link_Id], \r\n            T.Label_Id AS [Resour");
            viewString.Append("ce.Label_Id], \r\n            T.Source_System_Name AS [Resource.Source_System_Name");
            viewString.Append("], \r\n            T.Stg_Source_Id AS [Resource.Stg_Source_Id], \r\n            T.Cr");
            viewString.Append("eated_User AS [Resource.Created_User], \r\n            T.Created_Dttm AS [Resource");
            viewString.Append(".Created_Dttm], \r\n            T.Modified_User AS [Resource.Modified_User], \r\n   ");
            viewString.Append("         T.Modified_Dttm AS [Resource.Modified_Dttm], \r\n            T.Archive_Fl");
            viewString.Append("ag AS [Resource.Archive_Flag], \r\n            True AS _from0\r\n        FROM Repert");
            viewString.Append("oireDataEntities.Resource AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Resource", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Resource_Artist
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Resource_Artist", @"
    SELECT VALUE -- Constructing Resource_Artist
        [RepertoiretDataModel.Store.Resource_Artist](T1.[Resource_Artist.Resource_Artist_Id], T1.[Resource_Artist.R2_Resource_Artist_Id], T1.[Resource_Artist.Resource_Id], T1.[Resource_Artist.Artist_Id], T1.[Resource_Artist.Source_System_Name], T1.[Resource_Artist.Stg_Source_Id], T1.[Resource_Artist.Created_User], T1.[Resource_Artist.Created_Dttm], T1.[Resource_Artist.Modified_User], T1.[Resource_Artist.Modified_Dttm], T1.[Resource_Artist.Archive_Flag], T1.[Resource_Artist.Sequence_No])
    FROM (
        SELECT 
            T.Resource_Artist_Id AS [Resource_Artist.Resource_Artist_Id], 
            T.R2_Resource_Artist_Id AS [Resource_Artist.R2_Resource_Artist_Id], 
            T.Resource_Id AS [Resource_Artist.Resource_Id], 
            T.Artist_Id AS [Resource_Artist.Artist_Id], 
            T.Source_System_Name AS [Resource_Artist.Source_System_Name], 
            T.Stg_Source_Id AS [Resource_Artist.Stg_Source_Id], 
            T.Created_User AS [Resource_Artist.Created_User], 
            T.Created_Dttm AS [Resource_Artist.Created_Dttm], 
            T.Modified_User AS [Resource_Artist.Modified_User], 
            T.Modified_Dttm AS [Resource_Artist.Modified_Dttm], 
            T.Archive_Flag AS [Resource_Artist.Archive_Flag], 
            T.Sequence_No AS [Resource_Artist.Sequence_No], 
            True AS _from0
        FROM RepertoireDataEntities.Resource_Artist AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Resource_Right
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Resource_Right", @"
    SELECT VALUE -- Constructing Resource_Right
        [RepertoiretDataModel.Store.Resource_Right](T1.[Resource_Right.Resource_Right_Id], T1.[Resource_Right.Resource_Id], T1.[Resource_Right.Right_Set_Id], T1.[Resource_Right.Contract_Id], T1.[Resource_Right.Assigned_Type], T1.[Resource_Right.Created_User], T1.[Resource_Right.Created_Dttm], T1.[Resource_Right.Modified_User], T1.[Resource_Right.Modified_Dttm], T1.[Resource_Right.Archive_Flag])
    FROM (
        SELECT 
            T.Resource_Right_Id AS [Resource_Right.Resource_Right_Id], 
            T.Resource_Id AS [Resource_Right.Resource_Id], 
            T.Right_Set_Id AS [Resource_Right.Right_Set_Id], 
            T.Contract_Id AS [Resource_Right.Contract_Id], 
            T.Assigned_Type AS [Resource_Right.Assigned_Type], 
            T.Created_User AS [Resource_Right.Created_User], 
            T.Created_Dttm AS [Resource_Right.Created_Dttm], 
            T.Modified_User AS [Resource_Right.Modified_User], 
            T.Modified_Dttm AS [Resource_Right.Modified_Dttm], 
            T.Archive_Flag AS [Resource_Right.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Resource_Right AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Track
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Track", @"
    SELECT VALUE -- Constructing Track
        [RepertoiretDataModel.Store.Track](T1.[Track.Track_Id], T1.[Track.Release_Id], T1.[Track.Resource_Id], T1.[Track.Sequence_No], T1.Track_Side, T1.[Track.Created_User], T1.[Track.Created_Dttm], T1.[Track.Modified_User], T1.[Track.Modified_Dttm], T1.[Track.Archive_Flag])
    FROM (
        SELECT 
            T.Track_Id AS [Track.Track_Id], 
            T.Release_Id AS [Track.Release_Id], 
            T.Resource_Id AS [Track.Resource_Id], 
            T.Sequence_No AS [Track.Sequence_No], 
            T.Side AS Track_Side, 
            T.Created_User AS [Track.Created_User], 
            T.Created_Dttm AS [Track.Created_Dttm], 
            T.Modified_User AS [Track.Modified_User], 
            T.Modified_Dttm AS [Track.Modified_Dttm], 
            T.Archive_Flag AS [Track.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Track AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Track_Right
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Track_Right", @"
    SELECT VALUE -- Constructing Track_Right
        [RepertoiretDataModel.Store.Track_Right](T1.[Track_Right.Track_Right_Id], T1.[Track_Right.Track_Id], T1.[Track_Right.Right_Set_Id], T1.[Track_Right.Contract_Id], T1.[Track_Right.Created_User], T1.[Track_Right.Created_Dttm], T1.[Track_Right.Modified_User], T1.[Track_Right.Modified_Dttm], T1.[Track_Right.Archive_Flag])
    FROM (
        SELECT 
            T.Track_Right_Id AS [Track_Right.Track_Right_Id], 
            T.Track_Id AS [Track_Right.Track_Id], 
            T.Right_Set_Id AS [Track_Right.Right_Set_Id], 
            T.Contract_Id AS [Track_Right.Contract_Id], 
            T.Created_User AS [Track_Right.Created_User], 
            T.Created_Dttm AS [Track_Right.Created_Dttm], 
            T.Modified_User AS [Track_Right.Modified_User], 
            T.Modified_Dttm AS [Track_Right.Modified_Dttm], 
            T.Archive_Flag AS [Track_Right.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Track_Right AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Artist
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Artist", @"
    SELECT VALUE -- Constructing Artist
        [RepertoiretDataModel.Artist](T1.[Artist.Artist_Id], T1.[Artist.Talent_Id], T1.[Artist.Account_Id], T1.[Artist.Artist_Name], T1.[Artist.Contributor_Type], T1.[Artist.Created_User], T1.[Artist.Created_Dttm], T1.[Artist.Modified_User], T1.[Artist.Modified_Dttm], T1.[Artist.Archive_Flag])
    FROM (
        SELECT 
            T.Artist_Id AS [Artist.Artist_Id], 
            T.Talent_Id AS [Artist.Talent_Id], 
            T.Account_Id AS [Artist.Account_Id], 
            T.Artist_Name AS [Artist.Artist_Name], 
            T.Contributor_Type AS [Artist.Contributor_Type], 
            T.Created_User AS [Artist.Created_User], 
            T.Created_Dttm AS [Artist.Created_Dttm], 
            T.Modified_User AS [Artist.Modified_User], 
            T.Modified_Dttm AS [Artist.Modified_Dttm], 
            T.Archive_Flag AS [Artist.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Artist AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Clr_Project_Release
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3477);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Clr_Project_Release\r\n        [RepertoiretData");
            viewString.Append("Model.Clr_Project_Release](T1.[Clr_Project_Release.Clr_Project_Release_Id], T1.[");
            viewString.Append("Clr_Project_Release.Release_Id], T1.[Clr_Project_Release.Sales_Channel_Id], T1.[");
            viewString.Append("Clr_Project_Release.Clr_Project_Id], T1.[Clr_Project_Release.Is_Multi_Artist], T");
            viewString.Append("1.[Clr_Project_Release.Is_Compilation], T1.[Clr_Project_Release.Is_Existing], T1");
            viewString.Append(".[Clr_Project_Release.Release_Dt], T1.[Clr_Project_Release.Price_Level_Type], T1");
            viewString.Append(".[Clr_Project_Release.Icla_Level_Type], T1.[Clr_Project_Release.Icla_Level_Devia");
            viewString.Append("ted_Type], T1.[Clr_Project_Release.Icla_Level_Deviated_Comment], T1.[Clr_Project");
            viewString.Append("_Release.Comment], T1.[Clr_Project_Release.Deemed_Ppd_Price], T1.[Clr_Project_Re");
            viewString.Append("lease.Invoice_Price], T1.[Clr_Project_Release.Selling_Price], T1.[Clr_Project_Re");
            viewString.Append("lease.Icla_Base_Price], T1.[Clr_Project_Release.Estimated_Retail_Price], T1.[Clr");
            viewString.Append("_Project_Release.Exact_Ppd_Price], T1.[Clr_Project_Release.Resource_Fee], T1.[Cl");
            viewString.Append("r_Project_Release.Is_Icla_Level_Deviated], T1.[Clr_Project_Release.Is_Icla], T1.");
            viewString.Append("[Clr_Project_Release.Is_Suggestedfee], T1.[Clr_Project_Release.Created_User], T1");
            viewString.Append(".[Clr_Project_Release.Created_Dttm], T1.[Clr_Project_Release.Modified_User], T1.");
            viewString.Append("[Clr_Project_Release.Modified_Dttm], T1.[Clr_Project_Release.Archive_Flag])\r\n   ");
            viewString.Append(" FROM (\r\n        SELECT \r\n            T.Clr_Project_Release_Id AS [Clr_Project_R");
            viewString.Append("elease.Clr_Project_Release_Id], \r\n            T.Release_Id AS [Clr_Project_Relea");
            viewString.Append("se.Release_Id], \r\n            T.Sales_Channel_Id AS [Clr_Project_Release.Sales_C");
            viewString.Append("hannel_Id], \r\n            T.Clr_Project_Id AS [Clr_Project_Release.Clr_Project_I");
            viewString.Append("d], \r\n            T.Is_Multi_Artist AS [Clr_Project_Release.Is_Multi_Artist], \r\n");
            viewString.Append("            T.Is_Compilation AS [Clr_Project_Release.Is_Compilation], \r\n        ");
            viewString.Append("    T.Is_Existing AS [Clr_Project_Release.Is_Existing], \r\n            T.Release_");
            viewString.Append("Dt AS [Clr_Project_Release.Release_Dt], \r\n            T.Price_Level_Type AS [Clr");
            viewString.Append("_Project_Release.Price_Level_Type], \r\n            T.Icla_Level_Type AS [Clr_Proj");
            viewString.Append("ect_Release.Icla_Level_Type], \r\n            T.Icla_Level_Deviated_Type AS [Clr_P");
            viewString.Append("roject_Release.Icla_Level_Deviated_Type], \r\n            T.Icla_Level_Deviated_Co");
            viewString.Append("mment AS [Clr_Project_Release.Icla_Level_Deviated_Comment], \r\n            T.Comm");
            viewString.Append("ent AS [Clr_Project_Release.Comment], \r\n            T.Deemed_Ppd_Price AS [Clr_P");
            viewString.Append("roject_Release.Deemed_Ppd_Price], \r\n            T.Invoice_Price AS [Clr_Project_");
            viewString.Append("Release.Invoice_Price], \r\n            T.Selling_Price AS [Clr_Project_Release.Se");
            viewString.Append("lling_Price], \r\n            T.Icla_Base_Price AS [Clr_Project_Release.Icla_Base_");
            viewString.Append("Price], \r\n            T.Estimated_Retail_Price AS [Clr_Project_Release.Estimated");
            viewString.Append("_Retail_Price], \r\n            T.Exact_Ppd_Price AS [Clr_Project_Release.Exact_Pp");
            viewString.Append("d_Price], \r\n            T.Resource_Fee AS [Clr_Project_Release.Resource_Fee], \r\n");
            viewString.Append("            T.Is_Icla_Level_Deviated AS [Clr_Project_Release.Is_Icla_Level_Devia");
            viewString.Append("ted], \r\n            T.Is_Icla AS [Clr_Project_Release.Is_Icla], \r\n            T.");
            viewString.Append("Is_Suggestedfee AS [Clr_Project_Release.Is_Suggestedfee], \r\n            T.Create");
            viewString.Append("d_User AS [Clr_Project_Release.Created_User], \r\n            T.Created_Dttm AS [C");
            viewString.Append("lr_Project_Release.Created_Dttm], \r\n            T.Modified_User AS [Clr_Project_");
            viewString.Append("Release.Modified_User], \r\n            T.Modified_Dttm AS [Clr_Project_Release.Mo");
            viewString.Append("dified_Dttm], \r\n            T.Archive_Flag AS [Clr_Project_Release.Archive_Flag]");
            viewString.Append(", \r\n            True AS _from0\r\n        FROM RepertoiretDataModelStoreContainer.");
            viewString.Append("Clr_Project_Release AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Clr_Project_Release", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Label
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Label", @"
    SELECT VALUE -- Constructing Label
        [RepertoiretDataModel.Label](T1.[Label.Label_Id], T1.[Label.Label_Name], T1.[Label.Gta_Status], T1.[Label.Created_User], T1.[Label.Created_Dttm], T1.[Label.Modified_User], T1.[Label.Modified_Dttm], T1.[Label.Archive_Flag])
    FROM (
        SELECT 
            T.Label_Id AS [Label.Label_Id], 
            T.Label_Name AS [Label.Label_Name], 
            T.Gta_Status AS [Label.Gta_Status], 
            T.Created_User AS [Label.Created_User], 
            T.Created_Dttm AS [Label.Created_Dttm], 
            T.Modified_User AS [Label.Modified_User], 
            T.Modified_Dttm AS [Label.Modified_Dttm], 
            T.Archive_Flag AS [Label.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Label AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Package
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Package", @"
    SELECT VALUE -- Constructing Package
        [RepertoiretDataModel.Package](T1.[Package.Package_Id], T1.[Package.Parent_Id], T1.Package_Sequence, T1.[Package.Release_Id], T1.[Package.Source_System_Name], T1.[Package.Source_Id], T1.[Package.Stg_Source_Id], T1.[Package.Created_User], T1.[Package.Created_Dttm], T1.[Package.Modified_User], T1.[Package.Modified_Dttm], T1.[Package.Archive_Flag])
    FROM (
        SELECT 
            T.Package_Id AS [Package.Package_Id], 
            T.Parent_Id AS [Package.Parent_Id], 
            T.Sequence AS Package_Sequence, 
            T.Release_Id AS [Package.Release_Id], 
            T.Source_System_Name AS [Package.Source_System_Name], 
            T.Source_Id AS [Package.Source_Id], 
            T.Stg_Source_Id AS [Package.Stg_Source_Id], 
            T.Created_User AS [Package.Created_User], 
            T.Created_Dttm AS [Package.Created_Dttm], 
            T.Modified_User AS [Package.Modified_User], 
            T.Modified_Dttm AS [Package.Modified_Dttm], 
            T.Archive_Flag AS [Package.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Package AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Project
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Project", @"
    SELECT VALUE -- Constructing Project
        [RepertoiretDataModel.Project](T1.[Project.Project_Id], T1.[Project.Account_Id], T1.Project_Code, T1.[Project.Admin_Company_Id], T1.Project_Description, T1.[Project.Is_Contract_Required], T1.[Project.Label_Id], T1.[Project.Created_User], T1.[Project.Created_Dttm], T1.[Project.Modified_User], T1.[Project.Modified_Dttm], T1.[Project.Archive_Flag])
    FROM (
        SELECT 
            T.Project_Id AS [Project.Project_Id], 
            T.Account_Id AS [Project.Account_Id], 
            T.Code AS Project_Code, 
            T.Admin_Company_Id AS [Project.Admin_Company_Id], 
            T.Description AS Project_Description, 
            T.Is_Contract_Required AS [Project.Is_Contract_Required], 
            T.Label_Id AS [Project.Label_Id], 
            T.Created_User AS [Project.Created_User], 
            T.Created_Dttm AS [Project.Created_Dttm], 
            T.Modified_User AS [Project.Modified_User], 
            T.Modified_Dttm AS [Project.Modified_Dttm], 
            T.Archive_Flag AS [Project.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Project AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Project_Artist
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Project_Artist", @"
    SELECT VALUE -- Constructing Project_Artist
        [RepertoiretDataModel.Project_Artist](T1.[Project_Artist.Project_Artist_Id], T1.[Project_Artist.Project_Id], T1.[Project_Artist.Artist_Id], T1.[Project_Artist.Created_User], T1.[Project_Artist.Created_Dttm], T1.[Project_Artist.Modified_User], T1.[Project_Artist.Modified_Dttm], T1.[Project_Artist.Archive_Flag])
    FROM (
        SELECT 
            T.Project_Artist_Id AS [Project_Artist.Project_Artist_Id], 
            T.Project_Id AS [Project_Artist.Project_Id], 
            T.Artist_Id AS [Project_Artist.Artist_Id], 
            T.Created_User AS [Project_Artist.Created_User], 
            T.Created_Dttm AS [Project_Artist.Created_Dttm], 
            T.Modified_User AS [Project_Artist.Modified_User], 
            T.Modified_Dttm AS [Project_Artist.Modified_Dttm], 
            T.Archive_Flag AS [Project_Artist.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Project_Artist AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Project_Contract
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Project_Contract", @"
    SELECT VALUE -- Constructing Project_Contract
        [RepertoiretDataModel.Project_Contract](T1.[Project_Contract.Project_Contract_Id], T1.[Project_Contract.Project_Id], T1.[Project_Contract.Contract_Id], T1.[Project_Contract.Created_User], T1.[Project_Contract.Created_Dttm], T1.[Project_Contract.Modified_User], T1.[Project_Contract.Modified_Dttm], T1.[Project_Contract.Archive_Flag])
    FROM (
        SELECT 
            T.Project_Contract_Id AS [Project_Contract.Project_Contract_Id], 
            T.Project_Id AS [Project_Contract.Project_Id], 
            T.Contract_Id AS [Project_Contract.Contract_Id], 
            T.Created_User AS [Project_Contract.Created_User], 
            T.Created_Dttm AS [Project_Contract.Created_Dttm], 
            T.Modified_User AS [Project_Contract.Modified_User], 
            T.Modified_Dttm AS [Project_Contract.Modified_Dttm], 
            T.Archive_Flag AS [Project_Contract.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Project_Contract AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Project_Release
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Project_Release", @"
    SELECT VALUE -- Constructing Project_Release
        [RepertoiretDataModel.Project_Release](T1.[Project_Release.Project_Release_Id], T1.[Project_Release.Project_Id], T1.[Project_Release.Release_Id], T1.[Project_Release.Created_User], T1.[Project_Release.Created_Dttm], T1.[Project_Release.Modified_User], T1.[Project_Release.Modified_Dttm], T1.[Project_Release.Archive_Flag])
    FROM (
        SELECT 
            T.Project_Release_Id AS [Project_Release.Project_Release_Id], 
            T.Project_Id AS [Project_Release.Project_Id], 
            T.Release_Id AS [Project_Release.Release_Id], 
            T.Created_User AS [Project_Release.Created_User], 
            T.Created_Dttm AS [Project_Release.Created_Dttm], 
            T.Modified_User AS [Project_Release.Modified_User], 
            T.Modified_Dttm AS [Project_Release.Modified_Dttm], 
            T.Archive_Flag AS [Project_Release.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Project_Release AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Project_Resource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Project_Resource", @"
    SELECT VALUE -- Constructing Project_Resource
        [RepertoiretDataModel.Project_Resource](T1.[Project_Resource.Project_Resource_Id], T1.[Project_Resource.Project_Id], T1.[Project_Resource.Resource_Id], T1.[Project_Resource.Created_User], T1.[Project_Resource.Created_Dttm], T1.[Project_Resource.Modified_User], T1.[Project_Resource.Modified_Dttm], T1.[Project_Resource.Archive_Flag])
    FROM (
        SELECT 
            T.Project_Resource_Id AS [Project_Resource.Project_Resource_Id], 
            T.Project_Id AS [Project_Resource.Project_Id], 
            T.Resource_Id AS [Project_Resource.Resource_Id], 
            T.Created_User AS [Project_Resource.Created_User], 
            T.Created_Dttm AS [Project_Resource.Created_Dttm], 
            T.Modified_User AS [Project_Resource.Modified_User], 
            T.Modified_Dttm AS [Project_Resource.Modified_Dttm], 
            T.Archive_Flag AS [Project_Resource.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Project_Resource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Release
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2805);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Release\r\n        [RepertoiretDataModel.Releas");
            viewString.Append("e](T1.[Release.Release_Id], T1.[Release.R2_Release_Id], T1.[Release.Account_Id],");
            viewString.Append(" T1.Release_Upc, T1.Release_Grid, T1.Release_Title, T1.[Release.Version_Title], ");
            viewString.Append("T1.[Release.Configuration_Id], T1.[Release.Catalogue_Number], T1.[Release.P_Comp");
            viewString.Append("any_Id], T1.[Release.P_Year], T1.[Release.P_Notice_Extension], T1.[Release.Earli");
            viewString.Append("est_Release_Dt], T1.[Release.Admin_Company_Id], T1.[Release.Is_Mac], T1.[Release");
            viewString.Append(".Is_Ost], T1.[Release.Music_Class_Type], T1.[Release.Label_Id], T1.[Release.No_C");
            viewString.Append("omponents], T1.[Release.No_Tracks], T1.[Release.Scope_Type], T1.[Release.R2_Work");
            viewString.Append("flow_Status_Type], T1.[Release.Is_Upc_Manual], T1.[Release.Configuration_Group_C");
            viewString.Append("ode], T1.[Release.Source_System_Name], T1.[Release.Stg_Source_Id], T1.[Release.C");
            viewString.Append("reated_User], T1.[Release.Created_Dttm], T1.[Release.Modified_User], T1.[Release");
            viewString.Append(".Modified_Dttm], T1.[Release.Archive_Flag])\r\n    FROM (\r\n        SELECT \r\n      ");
            viewString.Append("      T.Release_Id AS [Release.Release_Id], \r\n            T.R2_Release_Id AS [Re");
            viewString.Append("lease.R2_Release_Id], \r\n            T.Account_Id AS [Release.Account_Id], \r\n    ");
            viewString.Append("        T.Upc AS Release_Upc, \r\n            T.Grid AS Release_Grid, \r\n          ");
            viewString.Append("  T.Title AS Release_Title, \r\n            T.Version_Title AS [Release.Version_Ti");
            viewString.Append("tle], \r\n            T.Configuration_Id AS [Release.Configuration_Id], \r\n        ");
            viewString.Append("    T.Catalogue_Number AS [Release.Catalogue_Number], \r\n            T.P_Company_");
            viewString.Append("Id AS [Release.P_Company_Id], \r\n            T.P_Year AS [Release.P_Year], \r\n    ");
            viewString.Append("        T.P_Notice_Extension AS [Release.P_Notice_Extension], \r\n            T.Ea");
            viewString.Append("rliest_Release_Dt AS [Release.Earliest_Release_Dt], \r\n            T.Admin_Compan");
            viewString.Append("y_Id AS [Release.Admin_Company_Id], \r\n            T.Is_Mac AS [Release.Is_Mac], ");
            viewString.Append("\r\n            T.Is_Ost AS [Release.Is_Ost], \r\n            T.Music_Class_Type AS ");
            viewString.Append("[Release.Music_Class_Type], \r\n            T.Label_Id AS [Release.Label_Id], \r\n  ");
            viewString.Append("          T.No_Components AS [Release.No_Components], \r\n            T.No_Tracks ");
            viewString.Append("AS [Release.No_Tracks], \r\n            T.Scope_Type AS [Release.Scope_Type], \r\n  ");
            viewString.Append("          T.R2_Workflow_Status_Type AS [Release.R2_Workflow_Status_Type], \r\n    ");
            viewString.Append("        T.Is_Upc_Manual AS [Release.Is_Upc_Manual], \r\n            T.Configuratio");
            viewString.Append("n_Group_Code AS [Release.Configuration_Group_Code], \r\n            T.Source_Syste");
            viewString.Append("m_Name AS [Release.Source_System_Name], \r\n            T.Stg_Source_Id AS [Releas");
            viewString.Append("e.Stg_Source_Id], \r\n            T.Created_User AS [Release.Created_User], \r\n    ");
            viewString.Append("        T.Created_Dttm AS [Release.Created_Dttm], \r\n            T.Modified_User ");
            viewString.Append("AS [Release.Modified_User], \r\n            T.Modified_Dttm AS [Release.Modified_D");
            viewString.Append("ttm], \r\n            T.Archive_Flag AS [Release.Archive_Flag], \r\n            True");
            viewString.Append(" AS _from0\r\n        FROM RepertoiretDataModelStoreContainer.Release AS T\r\n    ) ");
            viewString.Append("AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Release", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Release_Artist
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Release_Artist", @"
    SELECT VALUE -- Constructing Release_Artist
        [RepertoiretDataModel.Release_Artist](T1.[Release_Artist.Release_Artist_Id], T1.[Release_Artist.R2_Release_Artist_Id], T1.[Release_Artist.Release_Id], T1.[Release_Artist.Artist_Id], T1.[Release_Artist.Source_System_Name], T1.[Release_Artist.Stg_Source_Id], T1.[Release_Artist.Created_User], T1.[Release_Artist.Created_Dttm], T1.[Release_Artist.Modified_User], T1.[Release_Artist.Modified_Dttm], T1.[Release_Artist.Archive_Flag])
    FROM (
        SELECT 
            T.Release_Artist_Id AS [Release_Artist.Release_Artist_Id], 
            T.R2_Release_Artist_Id AS [Release_Artist.R2_Release_Artist_Id], 
            T.Release_Id AS [Release_Artist.Release_Id], 
            T.Artist_Id AS [Release_Artist.Artist_Id], 
            T.Source_System_Name AS [Release_Artist.Source_System_Name], 
            T.Stg_Source_Id AS [Release_Artist.Stg_Source_Id], 
            T.Created_User AS [Release_Artist.Created_User], 
            T.Created_Dttm AS [Release_Artist.Created_Dttm], 
            T.Modified_User AS [Release_Artist.Modified_User], 
            T.Modified_Dttm AS [Release_Artist.Modified_Dttm], 
            T.Archive_Flag AS [Release_Artist.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Release_Artist AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Release_Right
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Release_Right", @"
    SELECT VALUE -- Constructing Release_Right
        [RepertoiretDataModel.Release_Right](T1.[Release_Right.Release_Right_Id], T1.[Release_Right.Release_Id], T1.[Release_Right.Right_Set_Id], T1.[Release_Right.Contract_Id], T1.[Release_Right.Assigned_Type], T1.[Release_Right.Created_User], T1.[Release_Right.Created_Dttm], T1.[Release_Right.Modified_User], T1.[Release_Right.Modified_Dttm], T1.[Release_Right.Archive_Flag])
    FROM (
        SELECT 
            T.Release_Right_Id AS [Release_Right.Release_Right_Id], 
            T.Release_Id AS [Release_Right.Release_Id], 
            T.Right_Set_Id AS [Release_Right.Right_Set_Id], 
            T.Contract_Id AS [Release_Right.Contract_Id], 
            T.Assigned_Type AS [Release_Right.Assigned_Type], 
            T.Created_User AS [Release_Right.Created_User], 
            T.Created_Dttm AS [Release_Right.Created_Dttm], 
            T.Modified_User AS [Release_Right.Modified_User], 
            T.Modified_Dttm AS [Release_Right.Modified_Dttm], 
            T.Archive_Flag AS [Release_Right.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Release_Right AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Resource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2849);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Resource\r\n        [RepertoiretDataModel.Resou");
            viewString.Append("rce](T1.[Resource.Resource_Id], T1.[Resource.R2_Resource_Id], T1.[Resource.Accou");
            viewString.Append("nt_Id], T1.Resource_Isrc, T1.Resource_Title, T1.[Resource.Rights_Type], T1.[Reso");
            viewString.Append("urce.Version_Title], T1.[Resource.Resource_Type], T1.[Resource.Genre_Id], T1.[Re");
            viewString.Append("source.P_Company_Id], T1.[Resource.P_Year], T1.[Resource.P_Notice_Extension], T1");
            viewString.Append(".[Resource.Is_Sample_Exists], T1.[Resource.Sample_Credit], T1.[Resource.Is_Side_");
            viewString.Append("Artist_Exists], T1.[Resource.Earliest_Release_Dt], T1.[Resource.Admin_Company_Id");
            viewString.Append("], T1.[Resource.Source_Upc], T1.[Resource.Live_Studio_Type], T1.[Resource.Music_");
            viewString.Append("Class_Type], T1.[Resource.Music_Time], T1.[Resource.R2_Resource_Company_Link_Id]");
            viewString.Append(", T1.[Resource.Label_Id], T1.[Resource.Source_System_Name], T1.[Resource.Stg_Sou");
            viewString.Append("rce_Id], T1.[Resource.Created_User], T1.[Resource.Created_Dttm], T1.[Resource.Mo");
            viewString.Append("dified_User], T1.[Resource.Modified_Dttm], T1.[Resource.Archive_Flag])\r\n    FROM");
            viewString.Append(" (\r\n        SELECT \r\n            T.Resource_Id AS [Resource.Resource_Id], \r\n    ");
            viewString.Append("        T.R2_Resource_Id AS [Resource.R2_Resource_Id], \r\n            T.Account_I");
            viewString.Append("d AS [Resource.Account_Id], \r\n            T.Isrc AS Resource_Isrc, \r\n           ");
            viewString.Append(" T.Title AS Resource_Title, \r\n            T.Rights_Type AS [Resource.Rights_Type");
            viewString.Append("], \r\n            T.Version_Title AS [Resource.Version_Title], \r\n            T.Re");
            viewString.Append("source_Type AS [Resource.Resource_Type], \r\n            T.Genre_Id AS [Resource.G");
            viewString.Append("enre_Id], \r\n            T.P_Company_Id AS [Resource.P_Company_Id], \r\n           ");
            viewString.Append(" T.P_Year AS [Resource.P_Year], \r\n            T.P_Notice_Extension AS [Resource.");
            viewString.Append("P_Notice_Extension], \r\n            T.Is_Sample_Exists AS [Resource.Is_Sample_Exi");
            viewString.Append("sts], \r\n            T.Sample_Credit AS [Resource.Sample_Credit], \r\n            T");
            viewString.Append(".Is_Side_Artist_Exists AS [Resource.Is_Side_Artist_Exists], \r\n            T.Earl");
            viewString.Append("iest_Release_Dt AS [Resource.Earliest_Release_Dt], \r\n            T.Admin_Company");
            viewString.Append("_Id AS [Resource.Admin_Company_Id], \r\n            T.Source_Upc AS [Resource.Sour");
            viewString.Append("ce_Upc], \r\n            T.Live_Studio_Type AS [Resource.Live_Studio_Type], \r\n    ");
            viewString.Append("        T.Music_Class_Type AS [Resource.Music_Class_Type], \r\n            T.Music");
            viewString.Append("_Time AS [Resource.Music_Time], \r\n            T.R2_Resource_Company_Link_Id AS [");
            viewString.Append("Resource.R2_Resource_Company_Link_Id], \r\n            T.Label_Id AS [Resource.Lab");
            viewString.Append("el_Id], \r\n            T.Source_System_Name AS [Resource.Source_System_Name], \r\n ");
            viewString.Append("           T.Stg_Source_Id AS [Resource.Stg_Source_Id], \r\n            T.Created_");
            viewString.Append("User AS [Resource.Created_User], \r\n            T.Created_Dttm AS [Resource.Creat");
            viewString.Append("ed_Dttm], \r\n            T.Modified_User AS [Resource.Modified_User], \r\n         ");
            viewString.Append("   T.Modified_Dttm AS [Resource.Modified_Dttm], \r\n            T.Archive_Flag AS ");
            viewString.Append("[Resource.Archive_Flag], \r\n            True AS _from0\r\n        FROM RepertoiretD");
            viewString.Append("ataModelStoreContainer.Resource AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Resource", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Resource_Artist
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Resource_Artist", @"
    SELECT VALUE -- Constructing Resource_Artist
        [RepertoiretDataModel.Resource_Artist](T1.[Resource_Artist.Resource_Artist_Id], T1.[Resource_Artist.R2_Resource_Artist_Id], T1.[Resource_Artist.Resource_Id], T1.[Resource_Artist.Artist_Id], T1.[Resource_Artist.Source_System_Name], T1.[Resource_Artist.Stg_Source_Id], T1.[Resource_Artist.Created_User], T1.[Resource_Artist.Created_Dttm], T1.[Resource_Artist.Modified_User], T1.[Resource_Artist.Modified_Dttm], T1.[Resource_Artist.Archive_Flag], T1.[Resource_Artist.Sequence_No])
    FROM (
        SELECT 
            T.Resource_Artist_Id AS [Resource_Artist.Resource_Artist_Id], 
            T.R2_Resource_Artist_Id AS [Resource_Artist.R2_Resource_Artist_Id], 
            T.Resource_Id AS [Resource_Artist.Resource_Id], 
            T.Artist_Id AS [Resource_Artist.Artist_Id], 
            T.Source_System_Name AS [Resource_Artist.Source_System_Name], 
            T.Stg_Source_Id AS [Resource_Artist.Stg_Source_Id], 
            T.Created_User AS [Resource_Artist.Created_User], 
            T.Created_Dttm AS [Resource_Artist.Created_Dttm], 
            T.Modified_User AS [Resource_Artist.Modified_User], 
            T.Modified_Dttm AS [Resource_Artist.Modified_Dttm], 
            T.Archive_Flag AS [Resource_Artist.Archive_Flag], 
            T.Sequence_No AS [Resource_Artist.Sequence_No], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Resource_Artist AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Resource_Right
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Resource_Right", @"
    SELECT VALUE -- Constructing Resource_Right
        [RepertoiretDataModel.Resource_Right](T1.[Resource_Right.Resource_Right_Id], T1.[Resource_Right.Resource_Id], T1.[Resource_Right.Right_Set_Id], T1.[Resource_Right.Contract_Id], T1.[Resource_Right.Assigned_Type], T1.[Resource_Right.Created_User], T1.[Resource_Right.Created_Dttm], T1.[Resource_Right.Modified_User], T1.[Resource_Right.Modified_Dttm], T1.[Resource_Right.Archive_Flag])
    FROM (
        SELECT 
            T.Resource_Right_Id AS [Resource_Right.Resource_Right_Id], 
            T.Resource_Id AS [Resource_Right.Resource_Id], 
            T.Right_Set_Id AS [Resource_Right.Right_Set_Id], 
            T.Contract_Id AS [Resource_Right.Contract_Id], 
            T.Assigned_Type AS [Resource_Right.Assigned_Type], 
            T.Created_User AS [Resource_Right.Created_User], 
            T.Created_Dttm AS [Resource_Right.Created_Dttm], 
            T.Modified_User AS [Resource_Right.Modified_User], 
            T.Modified_Dttm AS [Resource_Right.Modified_Dttm], 
            T.Archive_Flag AS [Resource_Right.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Resource_Right AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Track
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Track", @"
    SELECT VALUE -- Constructing Track
        [RepertoiretDataModel.Track](T1.[Track.Track_Id], T1.[Track.Release_Id], T1.[Track.Resource_Id], T1.[Track.Sequence_No], T1.Track_Side, T1.[Track.Created_User], T1.[Track.Created_Dttm], T1.[Track.Modified_User], T1.[Track.Modified_Dttm], T1.[Track.Archive_Flag])
    FROM (
        SELECT 
            T.Track_Id AS [Track.Track_Id], 
            T.Release_Id AS [Track.Release_Id], 
            T.Resource_Id AS [Track.Resource_Id], 
            T.Sequence_No AS [Track.Sequence_No], 
            T.Side AS Track_Side, 
            T.Created_User AS [Track.Created_User], 
            T.Created_Dttm AS [Track.Created_Dttm], 
            T.Modified_User AS [Track.Modified_User], 
            T.Modified_Dttm AS [Track.Modified_Dttm], 
            T.Archive_Flag AS [Track.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Track AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Track_Right
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Track_Right", @"
    SELECT VALUE -- Constructing Track_Right
        [RepertoiretDataModel.Track_Right](T1.[Track_Right.Track_Right_Id], T1.[Track_Right.Track_Id], T1.[Track_Right.Right_Set_Id], T1.[Track_Right.Contract_Id], T1.[Track_Right.Created_User], T1.[Track_Right.Created_Dttm], T1.[Track_Right.Modified_User], T1.[Track_Right.Modified_Dttm], T1.[Track_Right.Archive_Flag])
    FROM (
        SELECT 
            T.Track_Right_Id AS [Track_Right.Track_Right_Id], 
            T.Track_Id AS [Track_Right.Track_Id], 
            T.Right_Set_Id AS [Track_Right.Right_Set_Id], 
            T.Contract_Id AS [Track_Right.Contract_Id], 
            T.Created_User AS [Track_Right.Created_User], 
            T.Created_Dttm AS [Track_Right.Created_Dttm], 
            T.Modified_User AS [Track_Right.Modified_User], 
            T.Modified_Dttm AS [Track_Right.Modified_Dttm], 
            T.Archive_Flag AS [Track_Right.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Track_Right AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Company
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Company", @"
    SELECT VALUE -- Constructing Company
        [RepertoiretDataModel.Store.Company](T1.[Company.Company_Id], T1.[Company.Country_Id], T1.[Company.Company_Account_Id], T1.Company_Name, T1.[Company.Gta_Status], T1.[Company.Is_Grc], T1.[Company.Isac_Code], T1.[Company.Company_Type_Code], T1.[Company.Created_User], T1.[Company.Created_Dttm], T1.[Company.Modified_User], T1.[Company.Modified_Dttm], T1.[Company.Archive_Flag])
    FROM (
        SELECT 
            T.Company_Id AS [Company.Company_Id], 
            T.Country_Id AS [Company.Country_Id], 
            T.Company_Account_Id AS [Company.Company_Account_Id], 
            T.Name AS Company_Name, 
            T.Gta_Status AS [Company.Gta_Status], 
            T.Is_Grc AS [Company.Is_Grc], 
            T.Isac_Code AS [Company.Isac_Code], 
            T.Company_Type_Code AS [Company.Company_Type_Code], 
            T.Created_User AS [Company.Created_User], 
            T.Created_Dttm AS [Company.Created_Dttm], 
            T.Modified_User AS [Company.Modified_User], 
            T.Modified_Dttm AS [Company.Modified_Dttm], 
            T.Archive_Flag AS [Company.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Company AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Country
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Country", @"
    SELECT VALUE -- Constructing Country
        [RepertoiretDataModel.Store.Country](T1.[Country.Country_Id], T1.[Country.Country_Name], T1.[Country.Iso_Code_2], T1.[Country.Gta_Status], T1.[Country.Created_User], T1.[Country.Created_Dttm], T1.[Country.Modified_User], T1.[Country.Modified_Dttm], T1.[Country.Archive_Flag])
    FROM (
        SELECT 
            T.Country_Id AS [Country.Country_Id], 
            T.Country_Name AS [Country.Country_Name], 
            T.Iso_Code_2 AS [Country.Iso_Code_2], 
            T.Gta_Status AS [Country.Gta_Status], 
            T.Created_User AS [Country.Created_User], 
            T.Created_Dttm AS [Country.Created_Dttm], 
            T.Modified_User AS [Country.Modified_User], 
            T.Modified_Dttm AS [Country.Modified_Dttm], 
            T.Archive_Flag AS [Country.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Country AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Preclearance_Country
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Preclearance_Country", "\r\n    SELECT VALUE -- Constructing Preclearance_Country\r\n        [RepertoiretData" +
                    "Model.Store.Preclearance_Country](T1.[Preclearance_Country.Preclearance_Country_" +
                    "Id], T1.[Preclearance_Country.Right_Set_Id], T1.[Preclearance_Country.Country_Id" +
                    "], T1.[Preclearance_Country.Included_Type], T1.[Preclearance_Country.Source_Syst" +
                    "em_Name], T1.[Preclearance_Country.Source_Id], T1.[Preclearance_Country.Stg_Sour" +
                    "ce_Id], T1.[Preclearance_Country.Source_Reference_Id], T1.[Preclearance_Country." +
                    "Created_User], T1.[Preclearance_Country.Created_Dttm], T1.[Preclearance_Country." +
                    "Modified_User], T1.[Preclearance_Country.Modified_Dttm], T1.[Preclearance_Countr" +
                    "y.Archive_Flag])\r\n    FROM (\r\n        SELECT \r\n            T.Preclearance_Countr" +
                    "y_Id AS [Preclearance_Country.Preclearance_Country_Id], \r\n            T.Right_Se" +
                    "t_Id AS [Preclearance_Country.Right_Set_Id], \r\n            T.Country_Id AS [Prec" +
                    "learance_Country.Country_Id], \r\n            T.Included_Type AS [Preclearance_Cou" +
                    "ntry.Included_Type], \r\n            T.Source_System_Name AS [Preclearance_Country" +
                    ".Source_System_Name], \r\n            T.Source_Id AS [Preclearance_Country.Source_" +
                    "Id], \r\n            T.Stg_Source_Id AS [Preclearance_Country.Stg_Source_Id], \r\n  " +
                    "          T.Source_Reference_Id AS [Preclearance_Country.Source_Reference_Id], \r" +
                    "\n            T.Created_User AS [Preclearance_Country.Created_User], \r\n          " +
                    "  T.Created_Dttm AS [Preclearance_Country.Created_Dttm], \r\n            T.Modifie" +
                    "d_User AS [Preclearance_Country.Modified_User], \r\n            T.Modified_Dttm AS" +
                    " [Preclearance_Country.Modified_Dttm], \r\n            T.Archive_Flag AS [Preclear" +
                    "ance_Country.Archive_Flag], \r\n            True AS _from0\r\n        FROM Repertoir" +
                    "eDataEntities.Preclearance_Country AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Company
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Company", @"
    SELECT VALUE -- Constructing Company
        [RepertoiretDataModel.Company](T1.[Company.Company_Id], T1.[Company.Country_Id], T1.[Company.Company_Account_Id], T1.Company_Name, T1.[Company.Gta_Status], T1.[Company.Is_Grc], T1.[Company.Isac_Code], T1.[Company.Company_Type_Code], T1.[Company.Created_User], T1.[Company.Created_Dttm], T1.[Company.Modified_User], T1.[Company.Modified_Dttm], T1.[Company.Archive_Flag])
    FROM (
        SELECT 
            T.Company_Id AS [Company.Company_Id], 
            T.Country_Id AS [Company.Country_Id], 
            T.Company_Account_Id AS [Company.Company_Account_Id], 
            T.Name AS Company_Name, 
            T.Gta_Status AS [Company.Gta_Status], 
            T.Is_Grc AS [Company.Is_Grc], 
            T.Isac_Code AS [Company.Isac_Code], 
            T.Company_Type_Code AS [Company.Company_Type_Code], 
            T.Created_User AS [Company.Created_User], 
            T.Created_Dttm AS [Company.Created_Dttm], 
            T.Modified_User AS [Company.Modified_User], 
            T.Modified_Dttm AS [Company.Modified_Dttm], 
            T.Archive_Flag AS [Company.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Company AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Country
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Country", @"
    SELECT VALUE -- Constructing Country
        [RepertoiretDataModel.Country](T1.[Country.Country_Id], T1.[Country.Country_Name], T1.[Country.Iso_Code_2], T1.[Country.Gta_Status], T1.[Country.Created_User], T1.[Country.Created_Dttm], T1.[Country.Modified_User], T1.[Country.Modified_Dttm], T1.[Country.Archive_Flag])
    FROM (
        SELECT 
            T.Country_Id AS [Country.Country_Id], 
            T.Country_Name AS [Country.Country_Name], 
            T.Iso_Code_2 AS [Country.Iso_Code_2], 
            T.Gta_Status AS [Country.Gta_Status], 
            T.Created_User AS [Country.Created_User], 
            T.Created_Dttm AS [Country.Created_Dttm], 
            T.Modified_User AS [Country.Modified_User], 
            T.Modified_Dttm AS [Country.Modified_Dttm], 
            T.Archive_Flag AS [Country.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Country AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Preclearance_Country
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Preclearance_Country", "\r\n    SELECT VALUE -- Constructing Preclearance_Country\r\n        [RepertoiretData" +
                    "Model.Preclearance_Country](T1.[Preclearance_Country.Preclearance_Country_Id], T" +
                    "1.[Preclearance_Country.Right_Set_Id], T1.[Preclearance_Country.Country_Id], T1." +
                    "[Preclearance_Country.Included_Type], T1.[Preclearance_Country.Source_System_Nam" +
                    "e], T1.[Preclearance_Country.Source_Id], T1.[Preclearance_Country.Stg_Source_Id]" +
                    ", T1.[Preclearance_Country.Source_Reference_Id], T1.[Preclearance_Country.Create" +
                    "d_User], T1.[Preclearance_Country.Created_Dttm], T1.[Preclearance_Country.Modifi" +
                    "ed_User], T1.[Preclearance_Country.Modified_Dttm], T1.[Preclearance_Country.Arch" +
                    "ive_Flag])\r\n    FROM (\r\n        SELECT \r\n            T.Preclearance_Country_Id A" +
                    "S [Preclearance_Country.Preclearance_Country_Id], \r\n            T.Right_Set_Id A" +
                    "S [Preclearance_Country.Right_Set_Id], \r\n            T.Country_Id AS [Preclearan" +
                    "ce_Country.Country_Id], \r\n            T.Included_Type AS [Preclearance_Country.I" +
                    "ncluded_Type], \r\n            T.Source_System_Name AS [Preclearance_Country.Sourc" +
                    "e_System_Name], \r\n            T.Source_Id AS [Preclearance_Country.Source_Id], \r" +
                    "\n            T.Stg_Source_Id AS [Preclearance_Country.Stg_Source_Id], \r\n        " +
                    "    T.Source_Reference_Id AS [Preclearance_Country.Source_Reference_Id], \r\n     " +
                    "       T.Created_User AS [Preclearance_Country.Created_User], \r\n            T.Cr" +
                    "eated_Dttm AS [Preclearance_Country.Created_Dttm], \r\n            T.Modified_User" +
                    " AS [Preclearance_Country.Modified_User], \r\n            T.Modified_Dttm AS [Prec" +
                    "learance_Country.Modified_Dttm], \r\n            T.Archive_Flag AS [Preclearance_C" +
                    "ountry.Archive_Flag], \r\n            True AS _from0\r\n        FROM RepertoiretData" +
                    "ModelStoreContainer.Preclearance_Country AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Interface_Log
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Interface_Log", "\r\n    SELECT VALUE -- Constructing Interface_Log\r\n        [RepertoiretDataModel.S" +
                    "tore.Interface_Log](T1.[Interface_Log.Interface_Log_Id], T1.[Interface_Log.Inter" +
                    "face_Type], T1.[Interface_Log.Source_System], T1.[Interface_Log.Xml_Content], T1" +
                    ".[Interface_Log.Xml_Count], T1.[Interface_Log.Item_Id], T1.[Interface_Log.Item_T" +
                    "ype], T1.[Interface_Log.Error], T1.[Interface_Log.No_Of_Retry], T1.[Interface_Lo" +
                    "g.Delivery_Type], T1.[Interface_Log.Created_User], T1.[Interface_Log.Created_Dtt" +
                    "m], T1.[Interface_Log.Modified_User], T1.[Interface_Log.Modified_Dttm], T1.[Inte" +
                    "rface_Log.Archive_Flag])\r\n    FROM (\r\n        SELECT \r\n            T.Interface_L" +
                    "og_Id AS [Interface_Log.Interface_Log_Id], \r\n            T.Interface_Type AS [In" +
                    "terface_Log.Interface_Type], \r\n            T.Source_System AS [Interface_Log.Sou" +
                    "rce_System], \r\n            T.Xml_Content AS [Interface_Log.Xml_Content], \r\n     " +
                    "       T.Xml_Count AS [Interface_Log.Xml_Count], \r\n            T.Item_Id AS [Int" +
                    "erface_Log.Item_Id], \r\n            T.Item_Type AS [Interface_Log.Item_Type], \r\n " +
                    "           T.Error AS [Interface_Log.Error], \r\n            T.No_Of_Retry AS [Int" +
                    "erface_Log.No_Of_Retry], \r\n            T.Delivery_Type AS [Interface_Log.Deliver" +
                    "y_Type], \r\n            T.Created_User AS [Interface_Log.Created_User], \r\n       " +
                    "     T.Created_Dttm AS [Interface_Log.Created_Dttm], \r\n            T.Modified_Us" +
                    "er AS [Interface_Log.Modified_User], \r\n            T.Modified_Dttm AS [Interface" +
                    "_Log.Modified_Dttm], \r\n            T.Archive_Flag AS [Interface_Log.Archive_Flag" +
                    "], \r\n            True AS _from0\r\n        FROM RepertoireDataEntities.Interface_L" +
                    "og AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Interface_Log
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Interface_Log", "\r\n    SELECT VALUE -- Constructing Interface_Log\r\n        [RepertoiretDataModel.I" +
                    "nterface_Log](T1.[Interface_Log.Interface_Log_Id], T1.[Interface_Log.Interface_T" +
                    "ype], T1.[Interface_Log.Source_System], T1.[Interface_Log.Xml_Content], T1.[Inte" +
                    "rface_Log.Xml_Count], T1.[Interface_Log.Item_Id], T1.[Interface_Log.Item_Type], " +
                    "T1.[Interface_Log.Error], T1.[Interface_Log.No_Of_Retry], T1.[Interface_Log.Deli" +
                    "very_Type], T1.[Interface_Log.Created_User], T1.[Interface_Log.Created_Dttm], T1" +
                    ".[Interface_Log.Modified_User], T1.[Interface_Log.Modified_Dttm], T1.[Interface_" +
                    "Log.Archive_Flag])\r\n    FROM (\r\n        SELECT \r\n            T.Interface_Log_Id " +
                    "AS [Interface_Log.Interface_Log_Id], \r\n            T.Interface_Type AS [Interfac" +
                    "e_Log.Interface_Type], \r\n            T.Source_System AS [Interface_Log.Source_Sy" +
                    "stem], \r\n            T.Xml_Content AS [Interface_Log.Xml_Content], \r\n           " +
                    " T.Xml_Count AS [Interface_Log.Xml_Count], \r\n            T.Item_Id AS [Interface" +
                    "_Log.Item_Id], \r\n            T.Item_Type AS [Interface_Log.Item_Type], \r\n       " +
                    "     T.Error AS [Interface_Log.Error], \r\n            T.No_Of_Retry AS [Interface" +
                    "_Log.No_Of_Retry], \r\n            T.Delivery_Type AS [Interface_Log.Delivery_Type" +
                    "], \r\n            T.Created_User AS [Interface_Log.Created_User], \r\n            T" +
                    ".Created_Dttm AS [Interface_Log.Created_Dttm], \r\n            T.Modified_User AS " +
                    "[Interface_Log.Modified_User], \r\n            T.Modified_Dttm AS [Interface_Log.M" +
                    "odified_Dttm], \r\n            T.Archive_Flag AS [Interface_Log.Archive_Flag], \r\n " +
                    "           True AS _from0\r\n        FROM RepertoiretDataModelStoreContainer.Inter" +
                    "face_Log AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Lookup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Lookup", @"
    SELECT VALUE -- Constructing Lookup
        [RepertoiretDataModel.Store.Lookup](T1.[Lookup.Lookup_Id], T1.[Lookup.Lookup_Type_Id], T1.Lookup_Value, T1.Lookup_Description, T1.[Lookup.Short_Description], T1.[Lookup.Display_Order], T1.[Lookup.Is_Default], T1.[Lookup.R2_Code], T1.[Lookup.Created_User], T1.[Lookup.Created_Dttm], T1.[Lookup.Modified_User], T1.[Lookup.Modified_Dttm], T1.[Lookup.Archive_Flag])
    FROM (
        SELECT 
            T.Lookup_Id AS [Lookup.Lookup_Id], 
            T.Lookup_Type_Id AS [Lookup.Lookup_Type_Id], 
            T.[Value] AS Lookup_Value, 
            T.Description AS Lookup_Description, 
            T.Short_Description AS [Lookup.Short_Description], 
            T.Display_Order AS [Lookup.Display_Order], 
            T.Is_Default AS [Lookup.Is_Default], 
            T.R2_Code AS [Lookup.R2_Code], 
            T.Created_User AS [Lookup.Created_User], 
            T.Created_Dttm AS [Lookup.Created_Dttm], 
            T.Modified_User AS [Lookup.Modified_User], 
            T.Modified_Dttm AS [Lookup.Modified_Dttm], 
            T.Archive_Flag AS [Lookup.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Lookup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Lookup_Type
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Lookup_Type", @"
    SELECT VALUE -- Constructing Lookup_Type
        [RepertoiretDataModel.Store.Lookup_Type](T1.[Lookup_Type.Lookup_Type_Id], T1.[Lookup_Type.Type], T1.[Lookup_Type.Description], T1.[Lookup_Type.Created_User], T1.[Lookup_Type.Created_Dttm], T1.[Lookup_Type.Modified_User], T1.[Lookup_Type.Modified_Dttm], T1.[Lookup_Type.Archive_Flag])
    FROM (
        SELECT 
            T.Lookup_Type_Id AS [Lookup_Type.Lookup_Type_Id], 
            T.Type AS [Lookup_Type.Type], 
            T.Description AS [Lookup_Type.Description], 
            T.Created_User AS [Lookup_Type.Created_User], 
            T.Created_Dttm AS [Lookup_Type.Created_Dttm], 
            T.Modified_User AS [Lookup_Type.Modified_User], 
            T.Modified_Dttm AS [Lookup_Type.Modified_Dttm], 
            T.Archive_Flag AS [Lookup_Type.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Lookup_Type AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Lookup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Lookup", @"
    SELECT VALUE -- Constructing Lookup
        [RepertoiretDataModel.Lookup](T1.[Lookup.Lookup_Id], T1.[Lookup.Lookup_Type_Id], T1.Lookup_Value, T1.Lookup_Description, T1.[Lookup.Short_Description], T1.[Lookup.Display_Order], T1.[Lookup.Is_Default], T1.[Lookup.R2_Code], T1.[Lookup.Created_User], T1.[Lookup.Created_Dttm], T1.[Lookup.Modified_User], T1.[Lookup.Modified_Dttm], T1.[Lookup.Archive_Flag])
    FROM (
        SELECT 
            T.Lookup_Id AS [Lookup.Lookup_Id], 
            T.Lookup_Type_Id AS [Lookup.Lookup_Type_Id], 
            T.[Value] AS Lookup_Value, 
            T.Description AS Lookup_Description, 
            T.Short_Description AS [Lookup.Short_Description], 
            T.Display_Order AS [Lookup.Display_Order], 
            T.Is_Default AS [Lookup.Is_Default], 
            T.R2_Code AS [Lookup.R2_Code], 
            T.Created_User AS [Lookup.Created_User], 
            T.Created_Dttm AS [Lookup.Created_Dttm], 
            T.Modified_User AS [Lookup.Modified_User], 
            T.Modified_Dttm AS [Lookup.Modified_Dttm], 
            T.Archive_Flag AS [Lookup.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Lookup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Lookup_Type
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Lookup_Type", @"
    SELECT VALUE -- Constructing Lookup_Type
        [RepertoiretDataModel.Lookup_Type](T1.[Lookup_Type.Lookup_Type_Id], T1.[Lookup_Type.Type], T1.[Lookup_Type.Description], T1.[Lookup_Type.Created_User], T1.[Lookup_Type.Created_Dttm], T1.[Lookup_Type.Modified_User], T1.[Lookup_Type.Modified_Dttm], T1.[Lookup_Type.Archive_Flag])
    FROM (
        SELECT 
            T.Lookup_Type_Id AS [Lookup_Type.Lookup_Type_Id], 
            T.Type AS [Lookup_Type.Type], 
            T.Description AS [Lookup_Type.Description], 
            T.Created_User AS [Lookup_Type.Created_User], 
            T.Created_Dttm AS [Lookup_Type.Created_Dttm], 
            T.Modified_User AS [Lookup_Type.Modified_User], 
            T.Modified_Dttm AS [Lookup_Type.Modified_Dttm], 
            T.Archive_Flag AS [Lookup_Type.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Lookup_Type AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Preclearance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Preclearance", "\r\n    SELECT VALUE -- Constructing Preclearance\r\n        [RepertoiretDataModel.St" +
                    "ore.Preclearance](T1.[Preclearance.Preclearance_Id], T1.[Preclearance.Right_Set_" +
                    "Id], T1.[Preclearance.Preclearance_Type], T1.[Preclearance.Is_Preclearance], T1." +
                    "[Preclearance.Source_System_Name], T1.[Preclearance.Source_Id], T1.[Preclearance" +
                    ".Stg_Source_Id], T1.[Preclearance.Source_Reference_Id], T1.[Preclearance.Created" +
                    "_User], T1.[Preclearance.Created_Dttm], T1.[Preclearance.Modified_User], T1.[Pre" +
                    "clearance.Modified_Dttm], T1.[Preclearance.Archive_Flag])\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.Preclearance_Id AS [Preclearance.Preclearance_Id], \r\n     " +
                    "       T.Right_Set_Id AS [Preclearance.Right_Set_Id], \r\n            T.Preclearan" +
                    "ce_Type AS [Preclearance.Preclearance_Type], \r\n            T.Is_Preclearance AS " +
                    "[Preclearance.Is_Preclearance], \r\n            T.Source_System_Name AS [Precleara" +
                    "nce.Source_System_Name], \r\n            T.Source_Id AS [Preclearance.Source_Id], " +
                    "\r\n            T.Stg_Source_Id AS [Preclearance.Stg_Source_Id], \r\n            T.S" +
                    "ource_Reference_Id AS [Preclearance.Source_Reference_Id], \r\n            T.Create" +
                    "d_User AS [Preclearance.Created_User], \r\n            T.Created_Dttm AS [Preclear" +
                    "ance.Created_Dttm], \r\n            T.Modified_User AS [Preclearance.Modified_User" +
                    "], \r\n            T.Modified_Dttm AS [Preclearance.Modified_Dttm], \r\n            " +
                    "T.Archive_Flag AS [Preclearance.Archive_Flag], \r\n            True AS _from0\r\n   " +
                    "     FROM RepertoireDataEntities.Preclearance AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Preclearance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Preclearance", "\r\n    SELECT VALUE -- Constructing Preclearance\r\n        [RepertoiretDataModel.Pr" +
                    "eclearance](T1.[Preclearance.Preclearance_Id], T1.[Preclearance.Right_Set_Id], T" +
                    "1.[Preclearance.Preclearance_Type], T1.[Preclearance.Is_Preclearance], T1.[Precl" +
                    "earance.Source_System_Name], T1.[Preclearance.Source_Id], T1.[Preclearance.Stg_S" +
                    "ource_Id], T1.[Preclearance.Source_Reference_Id], T1.[Preclearance.Created_User]" +
                    ", T1.[Preclearance.Created_Dttm], T1.[Preclearance.Modified_User], T1.[Precleara" +
                    "nce.Modified_Dttm], T1.[Preclearance.Archive_Flag])\r\n    FROM (\r\n        SELECT " +
                    "\r\n            T.Preclearance_Id AS [Preclearance.Preclearance_Id], \r\n           " +
                    " T.Right_Set_Id AS [Preclearance.Right_Set_Id], \r\n            T.Preclearance_Typ" +
                    "e AS [Preclearance.Preclearance_Type], \r\n            T.Is_Preclearance AS [Precl" +
                    "earance.Is_Preclearance], \r\n            T.Source_System_Name AS [Preclearance.So" +
                    "urce_System_Name], \r\n            T.Source_Id AS [Preclearance.Source_Id], \r\n    " +
                    "        T.Stg_Source_Id AS [Preclearance.Stg_Source_Id], \r\n            T.Source_" +
                    "Reference_Id AS [Preclearance.Source_Reference_Id], \r\n            T.Created_User" +
                    " AS [Preclearance.Created_User], \r\n            T.Created_Dttm AS [Preclearance.C" +
                    "reated_Dttm], \r\n            T.Modified_User AS [Preclearance.Modified_User], \r\n " +
                    "           T.Modified_Dttm AS [Preclearance.Modified_Dttm], \r\n            T.Arch" +
                    "ive_Flag AS [Preclearance.Archive_Flag], \r\n            True AS _from0\r\n        F" +
                    "ROM RepertoiretDataModelStoreContainer.Preclearance AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Preclearance_Territory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Preclearance_Territory", "\r\n    SELECT VALUE -- Constructing Preclearance_Territory\r\n        [RepertoiretDa" +
                    "taModel.Store.Preclearance_Territory](T1.[Preclearance_Territory.Preclearance_Te" +
                    "rritory_Id], T1.[Preclearance_Territory.Right_Set_Id], T1.[Preclearance_Territor" +
                    "y.Territory_Id], T1.[Preclearance_Territory.Included_Type], T1.[Preclearance_Ter" +
                    "ritory.Source_System_Name], T1.[Preclearance_Territory.Source_Id], T1.[Precleara" +
                    "nce_Territory.Stg_Source_Id], T1.[Preclearance_Territory.Source_Reference_Id], T" +
                    "1.[Preclearance_Territory.Created_User], T1.[Preclearance_Territory.Created_Dttm" +
                    "], T1.[Preclearance_Territory.Modified_User], T1.[Preclearance_Territory.Modifie" +
                    "d_Dttm], T1.[Preclearance_Territory.Archive_Flag])\r\n    FROM (\r\n        SELECT \r" +
                    "\n            T.Preclearance_Territory_Id AS [Preclearance_Territory.Preclearance" +
                    "_Territory_Id], \r\n            T.Right_Set_Id AS [Preclearance_Territory.Right_Se" +
                    "t_Id], \r\n            T.Territory_Id AS [Preclearance_Territory.Territory_Id], \r\n" +
                    "            T.Included_Type AS [Preclearance_Territory.Included_Type], \r\n       " +
                    "     T.Source_System_Name AS [Preclearance_Territory.Source_System_Name], \r\n    " +
                    "        T.Source_Id AS [Preclearance_Territory.Source_Id], \r\n            T.Stg_S" +
                    "ource_Id AS [Preclearance_Territory.Stg_Source_Id], \r\n            T.Source_Refer" +
                    "ence_Id AS [Preclearance_Territory.Source_Reference_Id], \r\n            T.Created" +
                    "_User AS [Preclearance_Territory.Created_User], \r\n            T.Created_Dttm AS " +
                    "[Preclearance_Territory.Created_Dttm], \r\n            T.Modified_User AS [Preclea" +
                    "rance_Territory.Modified_User], \r\n            T.Modified_Dttm AS [Preclearance_T" +
                    "erritory.Modified_Dttm], \r\n            T.Archive_Flag AS [Preclearance_Territory" +
                    ".Archive_Flag], \r\n            True AS _from0\r\n        FROM RepertoireDataEntitie" +
                    "s.Preclearance_Territory AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Preclearance_Territory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Preclearance_Territory", "\r\n    SELECT VALUE -- Constructing Preclearance_Territory\r\n        [RepertoiretDa" +
                    "taModel.Preclearance_Territory](T1.[Preclearance_Territory.Preclearance_Territor" +
                    "y_Id], T1.[Preclearance_Territory.Right_Set_Id], T1.[Preclearance_Territory.Terr" +
                    "itory_Id], T1.[Preclearance_Territory.Included_Type], T1.[Preclearance_Territory" +
                    ".Source_System_Name], T1.[Preclearance_Territory.Source_Id], T1.[Preclearance_Te" +
                    "rritory.Stg_Source_Id], T1.[Preclearance_Territory.Source_Reference_Id], T1.[Pre" +
                    "clearance_Territory.Created_User], T1.[Preclearance_Territory.Created_Dttm], T1." +
                    "[Preclearance_Territory.Modified_User], T1.[Preclearance_Territory.Modified_Dttm" +
                    "], T1.[Preclearance_Territory.Archive_Flag])\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.Preclearance_Territory_Id AS [Preclearance_Territory.Preclearance_Terri" +
                    "tory_Id], \r\n            T.Right_Set_Id AS [Preclearance_Territory.Right_Set_Id]," +
                    " \r\n            T.Territory_Id AS [Preclearance_Territory.Territory_Id], \r\n      " +
                    "      T.Included_Type AS [Preclearance_Territory.Included_Type], \r\n            T" +
                    ".Source_System_Name AS [Preclearance_Territory.Source_System_Name], \r\n          " +
                    "  T.Source_Id AS [Preclearance_Territory.Source_Id], \r\n            T.Stg_Source_" +
                    "Id AS [Preclearance_Territory.Stg_Source_Id], \r\n            T.Source_Reference_I" +
                    "d AS [Preclearance_Territory.Source_Reference_Id], \r\n            T.Created_User " +
                    "AS [Preclearance_Territory.Created_User], \r\n            T.Created_Dttm AS [Precl" +
                    "earance_Territory.Created_Dttm], \r\n            T.Modified_User AS [Preclearance_" +
                    "Territory.Modified_User], \r\n            T.Modified_Dttm AS [Preclearance_Territo" +
                    "ry.Modified_Dttm], \r\n            T.Archive_Flag AS [Preclearance_Territory.Archi" +
                    "ve_Flag], \r\n            True AS _from0\r\n        FROM RepertoiretDataModelStoreCo" +
                    "ntainer.Preclearance_Territory AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Rights_Roll_Up
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Rights_Roll_Up", @"
    SELECT VALUE -- Constructing Rights_Roll_Up
        [RepertoiretDataModel.Store.Rights_Roll_Up](T1.[Rights_Roll_Up.Rights_Roll_Up_Id], T1.[Rights_Roll_Up.Item_Type], T1.[Rights_Roll_Up.Item_Id], T1.[Rights_Roll_Up.No_Of_Retry], T1.[Rights_Roll_Up.Status_Type], T1.[Rights_Roll_Up.Created_User], T1.[Rights_Roll_Up.Created_Date], T1.[Rights_Roll_Up.Modified_User], T1.[Rights_Roll_Up.Modified_Date], T1.[Rights_Roll_Up.Archive_Flag])
    FROM (
        SELECT 
            T.Rights_Roll_Up_Id AS [Rights_Roll_Up.Rights_Roll_Up_Id], 
            T.Item_Type AS [Rights_Roll_Up.Item_Type], 
            T.Item_Id AS [Rights_Roll_Up.Item_Id], 
            T.No_Of_Retry AS [Rights_Roll_Up.No_Of_Retry], 
            T.Status_Type AS [Rights_Roll_Up.Status_Type], 
            T.Created_User AS [Rights_Roll_Up.Created_User], 
            T.Created_Date AS [Rights_Roll_Up.Created_Date], 
            T.Modified_User AS [Rights_Roll_Up.Modified_User], 
            T.Modified_Date AS [Rights_Roll_Up.Modified_Date], 
            T.Archive_Flag AS [Rights_Roll_Up.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Rights_Roll_Up AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Rights_Roll_Up
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Rights_Roll_Up", @"
    SELECT VALUE -- Constructing Rights_Roll_Up
        [RepertoiretDataModel.Rights_Roll_Up](T1.[Rights_Roll_Up.Rights_Roll_Up_Id], T1.[Rights_Roll_Up.Item_Type], T1.[Rights_Roll_Up.Item_Id], T1.[Rights_Roll_Up.No_Of_Retry], T1.[Rights_Roll_Up.Status_Type], T1.[Rights_Roll_Up.Created_User], T1.[Rights_Roll_Up.Created_Date], T1.[Rights_Roll_Up.Modified_User], T1.[Rights_Roll_Up.Modified_Date], T1.[Rights_Roll_Up.Archive_Flag])
    FROM (
        SELECT 
            T.Rights_Roll_Up_Id AS [Rights_Roll_Up.Rights_Roll_Up_Id], 
            T.Item_Type AS [Rights_Roll_Up.Item_Type], 
            T.Item_Id AS [Rights_Roll_Up.Item_Id], 
            T.No_Of_Retry AS [Rights_Roll_Up.No_Of_Retry], 
            T.Status_Type AS [Rights_Roll_Up.Status_Type], 
            T.Created_User AS [Rights_Roll_Up.Created_User], 
            T.Created_Date AS [Rights_Roll_Up.Created_Date], 
            T.Modified_User AS [Rights_Roll_Up.Modified_User], 
            T.Modified_Date AS [Rights_Roll_Up.Modified_Date], 
            T.Archive_Flag AS [Rights_Roll_Up.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Rights_Roll_Up AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Task
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Task", @"
    SELECT VALUE -- Constructing Task
        [RepertoiretDataModel.Store.Task](T1.[Task.Task_Id], T1.[Task.Task_Type], T1.[Task.Task_Name], T1.[Task.Status_Type], T1.[Task.Review_Reason_Type], T1.Task_Username, T1.[Task.Owner_Company_Id], T1.[Task.Item_Id], T1.[Task.Item_Type], T1.[Task.Contract_Id], T1.[Task.Created_User], T1.[Task.Created_Dttm], T1.[Task.Modified_User], T1.[Task.Modified_Dttm], T1.[Task.Archive_Flag])
    FROM (
        SELECT 
            T.Task_Id AS [Task.Task_Id], 
            T.Task_Type AS [Task.Task_Type], 
            T.Task_Name AS [Task.Task_Name], 
            T.Status_Type AS [Task.Status_Type], 
            T.Review_Reason_Type AS [Task.Review_Reason_Type], 
            T.Username AS Task_Username, 
            T.Owner_Company_Id AS [Task.Owner_Company_Id], 
            T.Item_Id AS [Task.Item_Id], 
            T.Item_Type AS [Task.Item_Type], 
            T.Contract_Id AS [Task.Contract_Id], 
            T.Created_User AS [Task.Created_User], 
            T.Created_Dttm AS [Task.Created_Dttm], 
            T.Modified_User AS [Task.Modified_User], 
            T.Modified_Dttm AS [Task.Modified_Dttm], 
            T.Archive_Flag AS [Task.Archive_Flag], 
            True AS _from0
        FROM RepertoireDataEntities.Task AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Task
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Task", @"
    SELECT VALUE -- Constructing Task
        [RepertoiretDataModel.Task](T1.[Task.Task_Id], T1.[Task.Task_Type], T1.[Task.Task_Name], T1.[Task.Status_Type], T1.[Task.Review_Reason_Type], T1.Task_Username, T1.[Task.Owner_Company_Id], T1.[Task.Item_Id], T1.[Task.Item_Type], T1.[Task.Contract_Id], T1.[Task.Created_User], T1.[Task.Created_Dttm], T1.[Task.Modified_User], T1.[Task.Modified_Dttm], T1.[Task.Archive_Flag])
    FROM (
        SELECT 
            T.Task_Id AS [Task.Task_Id], 
            T.Task_Type AS [Task.Task_Type], 
            T.Task_Name AS [Task.Task_Name], 
            T.Status_Type AS [Task.Status_Type], 
            T.Review_Reason_Type AS [Task.Review_Reason_Type], 
            T.Username AS Task_Username, 
            T.Owner_Company_Id AS [Task.Owner_Company_Id], 
            T.Item_Id AS [Task.Item_Id], 
            T.Item_Type AS [Task.Item_Type], 
            T.Contract_Id AS [Task.Contract_Id], 
            T.Created_User AS [Task.Created_User], 
            T.Created_Dttm AS [Task.Created_Dttm], 
            T.Modified_User AS [Task.Modified_User], 
            T.Modified_Dttm AS [Task.Modified_Dttm], 
            T.Archive_Flag AS [Task.Archive_Flag], 
            True AS _from0
        FROM RepertoiretDataModelStoreContainer.Task AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for RepertoiretDataModelStoreContainer.Temp_Repertoire
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4606);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Temp_Repertoire\r\n        [RepertoiretDataMode");
            viewString.Append("l.Store.Temp_Repertoire](T1.[Temp_Repertoire.Temp_Repertoire_Id], T1.[Temp_Reper");
            viewString.Append("toire.Contract_Id], T1.[Temp_Repertoire.R2_Repertoire_Id], T1.[Temp_Repertoire.A");
            viewString.Append("ccount_Id], T1.[Temp_Repertoire.Upc], T1.[Temp_Repertoire.Grid], T1.[Temp_Repert");
            viewString.Append("oire.Title], T1.[Temp_Repertoire.Rights_Type], T1.[Temp_Repertoire.Version_Title");
            viewString.Append("], T1.[Temp_Repertoire.Configuration__Id], T1.[Temp_Repertoire.Catalogue_Number]");
            viewString.Append(", T1.[Temp_Repertoire.P_Company_Id], T1.[Temp_Repertoire.P_Year], T1.[Temp_Reper");
            viewString.Append("toire.P_Notice_Extension], T1.[Temp_Repertoire.Earliest_Release_Dt], T1.[Temp_Re");
            viewString.Append("pertoire.Admin_Company_Id], T1.[Temp_Repertoire.Is_Mac], T1.[Temp_Repertoire.Is_");
            viewString.Append("Ost], T1.[Temp_Repertoire.Music_Class_Type], T1.[Temp_Repertoire.Label_Id], T1.[");
            viewString.Append("Temp_Repertoire.No_Components], T1.[Temp_Repertoire.No_Tracks], T1.[Temp_Reperto");
            viewString.Append("ire.Scope_Type], T1.[Temp_Repertoire.R2_Workflow_Status_Type], T1.[Temp_Repertoi");
            viewString.Append("re.Isrc], T1.[Temp_Repertoire.Resource_Type], T1.[Temp_Repertoire.Genre_Id], T1.");
            viewString.Append("[Temp_Repertoire.Is_Sample_Exists], T1.[Temp_Repertoire.Sample_Credit], T1.[Temp");
            viewString.Append("_Repertoire.Is_Side_Artist_Exists], T1.[Temp_Repertoire.Source_Upc], T1.[Temp_Re");
            viewString.Append("pertoire.Live_Studio_Type], T1.[Temp_Repertoire.Audio_Video_Type], T1.[Temp_Repe");
            viewString.Append("rtoire.Music_Time], T1.[Temp_Repertoire.No_Of_Retry], T1.[Temp_Repertoire.Status");
            viewString.Append("_Type], T1.[Temp_Repertoire.Item_Type], T1.[Temp_Repertoire.Process_Type], T1.[T");
            viewString.Append("emp_Repertoire.Owned_Project_Id], T1.[Temp_Repertoire.Created_User], T1.[Temp_Re");
            viewString.Append("pertoire.Created_Dttm], T1.[Temp_Repertoire.Modified_User], T1.[Temp_Repertoire.");
            viewString.Append("Modified_Dttm], T1.[Temp_Repertoire.Archive_Flag])\r\n    FROM (\r\n        SELECT \r");
            viewString.Append("\n            T.Temp_Repertoire_Id AS [Temp_Repertoire.Temp_Repertoire_Id], \r\n   ");
            viewString.Append("         T.Contract_Id AS [Temp_Repertoire.Contract_Id], \r\n            T.R2_Repe");
            viewString.Append("rtoire_Id AS [Temp_Repertoire.R2_Repertoire_Id], \r\n            T.Account_Id AS [");
            viewString.Append("Temp_Repertoire.Account_Id], \r\n            T.Upc AS [Temp_Repertoire.Upc], \r\n   ");
            viewString.Append("         T.Grid AS [Temp_Repertoire.Grid], \r\n            T.Title AS [Temp_Repert");
            viewString.Append("oire.Title], \r\n            T.Rights_Type AS [Temp_Repertoire.Rights_Type], \r\n   ");
            viewString.Append("         T.Version_Title AS [Temp_Repertoire.Version_Title], \r\n            T.Con");
            viewString.Append("figuration__Id AS [Temp_Repertoire.Configuration__Id], \r\n            T.Catalogue");
            viewString.Append("_Number AS [Temp_Repertoire.Catalogue_Number], \r\n            T.P_Company_Id AS [");
            viewString.Append("Temp_Repertoire.P_Company_Id], \r\n            T.P_Year AS [Temp_Repertoire.P_Year");
            viewString.Append("], \r\n            T.P_Notice_Extension AS [Temp_Repertoire.P_Notice_Extension], \r");
            viewString.Append("\n            T.Earliest_Release_Dt AS [Temp_Repertoire.Earliest_Release_Dt], \r\n ");
            viewString.Append("           T.Admin_Company_Id AS [Temp_Repertoire.Admin_Company_Id], \r\n         ");
            viewString.Append("   T.Is_Mac AS [Temp_Repertoire.Is_Mac], \r\n            T.Is_Ost AS [Temp_Reperto");
            viewString.Append("ire.Is_Ost], \r\n            T.Music_Class_Type AS [Temp_Repertoire.Music_Class_Ty");
            viewString.Append("pe], \r\n            T.Label_Id AS [Temp_Repertoire.Label_Id], \r\n            T.No_");
            viewString.Append("Components AS [Temp_Repertoire.No_Components], \r\n            T.No_Tracks AS [Tem");
            viewString.Append("p_Repertoire.No_Tracks], \r\n            T.Scope_Type AS [Temp_Repertoire.Scope_Ty");
            viewString.Append("pe], \r\n            T.R2_Workflow_Status_Type AS [Temp_Repertoire.R2_Workflow_Sta");
            viewString.Append("tus_Type], \r\n            T.Isrc AS [Temp_Repertoire.Isrc], \r\n            T.Resou");
            viewString.Append("rce_Type AS [Temp_Repertoire.Resource_Type], \r\n            T.Genre_Id AS [Temp_R");
            viewString.Append("epertoire.Genre_Id], \r\n            T.Is_Sample_Exists AS [Temp_Repertoire.Is_Sam");
            viewString.Append("ple_Exists], \r\n            T.Sample_Credit AS [Temp_Repertoire.Sample_Credit], \r");
            viewString.Append("\n            T.Is_Side_Artist_Exists AS [Temp_Repertoire.Is_Side_Artist_Exists],");
            viewString.Append(" \r\n            T.Source_Upc AS [Temp_Repertoire.Source_Upc], \r\n            T.Liv");
            viewString.Append("e_Studio_Type AS [Temp_Repertoire.Live_Studio_Type], \r\n            T.Audio_Video");
            viewString.Append("_Type AS [Temp_Repertoire.Audio_Video_Type], \r\n            T.Music_Time AS [Temp");
            viewString.Append("_Repertoire.Music_Time], \r\n            T.No_Of_Retry AS [Temp_Repertoire.No_Of_R");
            viewString.Append("etry], \r\n            T.Status_Type AS [Temp_Repertoire.Status_Type], \r\n         ");
            viewString.Append("   T.Item_Type AS [Temp_Repertoire.Item_Type], \r\n            T.Process_Type AS [");
            viewString.Append("Temp_Repertoire.Process_Type], \r\n            T.Owned_Project_Id AS [Temp_Reperto");
            viewString.Append("ire.Owned_Project_Id], \r\n            T.Created_User AS [Temp_Repertoire.Created_");
            viewString.Append("User], \r\n            T.Created_Dttm AS [Temp_Repertoire.Created_Dttm], \r\n       ");
            viewString.Append("     T.Modified_User AS [Temp_Repertoire.Modified_User], \r\n            T.Modifie");
            viewString.Append("d_Dttm AS [Temp_Repertoire.Modified_Dttm], \r\n            T.Archive_Flag AS [Temp");
            viewString.Append("_Repertoire.Archive_Flag], \r\n            True AS _from0\r\n        FROM Repertoire");
            viewString.Append("DataEntities.Temp_Repertoire AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoiretDataModelStoreContainer.Temp_Repertoire", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for RepertoireDataEntities.Temp_Repertoire
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4612);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Temp_Repertoire\r\n        [RepertoiretDataMode");
            viewString.Append("l.Temp_Repertoire](T1.[Temp_Repertoire.Temp_Repertoire_Id], T1.[Temp_Repertoire.");
            viewString.Append("Contract_Id], T1.[Temp_Repertoire.R2_Repertoire_Id], T1.[Temp_Repertoire.Account");
            viewString.Append("_Id], T1.[Temp_Repertoire.Upc], T1.[Temp_Repertoire.Grid], T1.[Temp_Repertoire.T");
            viewString.Append("itle], T1.[Temp_Repertoire.Rights_Type], T1.[Temp_Repertoire.Version_Title], T1.");
            viewString.Append("[Temp_Repertoire.Configuration__Id], T1.[Temp_Repertoire.Catalogue_Number], T1.[");
            viewString.Append("Temp_Repertoire.P_Company_Id], T1.[Temp_Repertoire.P_Year], T1.[Temp_Repertoire.");
            viewString.Append("P_Notice_Extension], T1.[Temp_Repertoire.Earliest_Release_Dt], T1.[Temp_Repertoi");
            viewString.Append("re.Admin_Company_Id], T1.[Temp_Repertoire.Is_Mac], T1.[Temp_Repertoire.Is_Ost], ");
            viewString.Append("T1.[Temp_Repertoire.Music_Class_Type], T1.[Temp_Repertoire.Label_Id], T1.[Temp_R");
            viewString.Append("epertoire.No_Components], T1.[Temp_Repertoire.No_Tracks], T1.[Temp_Repertoire.Sc");
            viewString.Append("ope_Type], T1.[Temp_Repertoire.R2_Workflow_Status_Type], T1.[Temp_Repertoire.Isr");
            viewString.Append("c], T1.[Temp_Repertoire.Resource_Type], T1.[Temp_Repertoire.Genre_Id], T1.[Temp_");
            viewString.Append("Repertoire.Is_Sample_Exists], T1.[Temp_Repertoire.Sample_Credit], T1.[Temp_Reper");
            viewString.Append("toire.Is_Side_Artist_Exists], T1.[Temp_Repertoire.Source_Upc], T1.[Temp_Repertoi");
            viewString.Append("re.Live_Studio_Type], T1.[Temp_Repertoire.Audio_Video_Type], T1.[Temp_Repertoire");
            viewString.Append(".Music_Time], T1.[Temp_Repertoire.No_Of_Retry], T1.[Temp_Repertoire.Status_Type]");
            viewString.Append(", T1.[Temp_Repertoire.Item_Type], T1.[Temp_Repertoire.Process_Type], T1.[Temp_Re");
            viewString.Append("pertoire.Owned_Project_Id], T1.[Temp_Repertoire.Created_User], T1.[Temp_Repertoi");
            viewString.Append("re.Created_Dttm], T1.[Temp_Repertoire.Modified_User], T1.[Temp_Repertoire.Modifi");
            viewString.Append("ed_Dttm], T1.[Temp_Repertoire.Archive_Flag])\r\n    FROM (\r\n        SELECT \r\n     ");
            viewString.Append("       T.Temp_Repertoire_Id AS [Temp_Repertoire.Temp_Repertoire_Id], \r\n         ");
            viewString.Append("   T.Contract_Id AS [Temp_Repertoire.Contract_Id], \r\n            T.R2_Repertoire");
            viewString.Append("_Id AS [Temp_Repertoire.R2_Repertoire_Id], \r\n            T.Account_Id AS [Temp_R");
            viewString.Append("epertoire.Account_Id], \r\n            T.Upc AS [Temp_Repertoire.Upc], \r\n         ");
            viewString.Append("   T.Grid AS [Temp_Repertoire.Grid], \r\n            T.Title AS [Temp_Repertoire.T");
            viewString.Append("itle], \r\n            T.Rights_Type AS [Temp_Repertoire.Rights_Type], \r\n         ");
            viewString.Append("   T.Version_Title AS [Temp_Repertoire.Version_Title], \r\n            T.Configura");
            viewString.Append("tion__Id AS [Temp_Repertoire.Configuration__Id], \r\n            T.Catalogue_Numbe");
            viewString.Append("r AS [Temp_Repertoire.Catalogue_Number], \r\n            T.P_Company_Id AS [Temp_R");
            viewString.Append("epertoire.P_Company_Id], \r\n            T.P_Year AS [Temp_Repertoire.P_Year], \r\n ");
            viewString.Append("           T.P_Notice_Extension AS [Temp_Repertoire.P_Notice_Extension], \r\n     ");
            viewString.Append("       T.Earliest_Release_Dt AS [Temp_Repertoire.Earliest_Release_Dt], \r\n       ");
            viewString.Append("     T.Admin_Company_Id AS [Temp_Repertoire.Admin_Company_Id], \r\n            T.I");
            viewString.Append("s_Mac AS [Temp_Repertoire.Is_Mac], \r\n            T.Is_Ost AS [Temp_Repertoire.Is");
            viewString.Append("_Ost], \r\n            T.Music_Class_Type AS [Temp_Repertoire.Music_Class_Type], \r");
            viewString.Append("\n            T.Label_Id AS [Temp_Repertoire.Label_Id], \r\n            T.No_Compon");
            viewString.Append("ents AS [Temp_Repertoire.No_Components], \r\n            T.No_Tracks AS [Temp_Repe");
            viewString.Append("rtoire.No_Tracks], \r\n            T.Scope_Type AS [Temp_Repertoire.Scope_Type], \r");
            viewString.Append("\n            T.R2_Workflow_Status_Type AS [Temp_Repertoire.R2_Workflow_Status_Ty");
            viewString.Append("pe], \r\n            T.Isrc AS [Temp_Repertoire.Isrc], \r\n            T.Resource_Ty");
            viewString.Append("pe AS [Temp_Repertoire.Resource_Type], \r\n            T.Genre_Id AS [Temp_Reperto");
            viewString.Append("ire.Genre_Id], \r\n            T.Is_Sample_Exists AS [Temp_Repertoire.Is_Sample_Ex");
            viewString.Append("ists], \r\n            T.Sample_Credit AS [Temp_Repertoire.Sample_Credit], \r\n     ");
            viewString.Append("       T.Is_Side_Artist_Exists AS [Temp_Repertoire.Is_Side_Artist_Exists], \r\n   ");
            viewString.Append("         T.Source_Upc AS [Temp_Repertoire.Source_Upc], \r\n            T.Live_Stud");
            viewString.Append("io_Type AS [Temp_Repertoire.Live_Studio_Type], \r\n            T.Audio_Video_Type ");
            viewString.Append("AS [Temp_Repertoire.Audio_Video_Type], \r\n            T.Music_Time AS [Temp_Reper");
            viewString.Append("toire.Music_Time], \r\n            T.No_Of_Retry AS [Temp_Repertoire.No_Of_Retry],");
            viewString.Append(" \r\n            T.Status_Type AS [Temp_Repertoire.Status_Type], \r\n            T.I");
            viewString.Append("tem_Type AS [Temp_Repertoire.Item_Type], \r\n            T.Process_Type AS [Temp_R");
            viewString.Append("epertoire.Process_Type], \r\n            T.Owned_Project_Id AS [Temp_Repertoire.Ow");
            viewString.Append("ned_Project_Id], \r\n            T.Created_User AS [Temp_Repertoire.Created_User],");
            viewString.Append(" \r\n            T.Created_Dttm AS [Temp_Repertoire.Created_Dttm], \r\n            T");
            viewString.Append(".Modified_User AS [Temp_Repertoire.Modified_User], \r\n            T.Modified_Dttm");
            viewString.Append(" AS [Temp_Repertoire.Modified_Dttm], \r\n            T.Archive_Flag AS [Temp_Reper");
            viewString.Append("toire.Archive_Flag], \r\n            True AS _from0\r\n        FROM RepertoiretDataM");
            viewString.Append("odelStoreContainer.Temp_Repertoire AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("RepertoireDataEntities.Temp_Repertoire", viewString.ToString());
        }
    }
}
