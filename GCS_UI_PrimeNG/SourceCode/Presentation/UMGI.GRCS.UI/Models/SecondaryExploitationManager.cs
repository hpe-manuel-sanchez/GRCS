using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using UMGI.GRCS.Entities.ContractEntities;
using UMGI.GRCS.UI.Rights.Interfaces;
using System.Web.Mvc;

namespace UMGI.GRCS.UI.Rights.Models
{
    public class SecondaryExploitationManager : ISecondaryExploitationManager
    {
        public SecondaryExploitationManager()
        {
            SecondaryExploitation = new List<ContractExploitationRestrictions>();

            # region Restricted DropDown Dummy data

            RestrictedList = new List<bool> { true, false }.Select(a => new SelectListItem { Text = GetText(a), Value = a.ToString() });

        # endregion Restricted  DropDown Dummy data

            # region Restriction DropDown Dummy data

            // RestrictionList = new List<string> { "0","1", "2", "3", "4", "5" }.Select(restriction => new SelectListItem { Text = Getrestriction(restriction), Value = restriction.ToString() });
            List<Restriction> objRestriction = new List<Restriction>();
            objRestriction.Add(new Restriction() { RestrictionTypeId = "0", RestrictionTypeName = "Select          " });
            objRestriction.Add(new Restriction() { RestrictionTypeId = "1", RestrictionTypeName = "No Rights" });
            objRestriction.Add(new Restriction() { RestrictionTypeId = "2", RestrictionTypeName = "Consent Required" });
            objRestriction.Add(new Restriction() { RestrictionTypeId = "3", RestrictionTypeName = "Refer to legal" });
            objRestriction.Add(new Restriction() { RestrictionTypeId = "4", RestrictionTypeName = "No Restrictions" });
            objRestriction.Add(new Restriction() { RestrictionTypeId = "5", RestrictionTypeName = "Consult" });
            RestrictionList = objRestriction.Select(Restriction => new SelectListItem { Text = Restriction.RestrictionTypeName, Value = Restriction.RestrictionTypeId.ToString() });

            # endregion Restriction DropDown Dummy data

            # region Consent Period DropDown Dummy data

            // RestrictionList = new List<string> { "0","1", "2", "3", "4", "5" }.Select(restriction => new SelectListItem { Text = Getrestriction(restriction), Value = restriction.ToString() });
            List<ConsentPeriod> objConsentPeriod = new List<ConsentPeriod>();
            objConsentPeriod.Add(new ConsentPeriod() { ConsentPeriodTypeId = "0", ConsentPeriodTypeName = "Select" });
            objConsentPeriod.Add(new ConsentPeriod() { ConsentPeriodTypeId = "1", ConsentPeriodTypeName = "During Hold back Period" });
            objConsentPeriod.Add(new ConsentPeriod() { ConsentPeriodTypeId = "2", ConsentPeriodTypeName = "During Term" });
            objConsentPeriod.Add(new ConsentPeriod() { ConsentPeriodTypeId = "3", ConsentPeriodTypeName = "During & After Term" });
            ConsentPeriodList = objConsentPeriod.Select(ConsentPeriod => new SelectListItem { Text = ConsentPeriod.ConsentPeriodTypeName, Value = ConsentPeriod.ConsentPeriodTypeId.ToString() });

            # endregion Consent Period DropDown Dummy data

            # region Secondary Exploitation Dummy data

            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 1, ExploitaionTypeName = "Multi - Artist Compilation", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 2, ExploitaionTypeName = "Synchronisation", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 3, ExploitaionTypeName = "Mid Price", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 4, ExploitaionTypeName = "Budget", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 5, ExploitaionTypeName = "Premiums", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 6, ExploitaionTypeName = "Sample Use", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 7, ExploitaionTypeName = "Advert royalty Breaks", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 8, ExploitaionTypeName = "Club / Mail Order", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 9, ExploitaionTypeName = "Remix / Edit", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 10, ExploitaionTypeName = "Greatest Hits", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitationId = 11, ExploitaionTypeName = "Kiosk", IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPeriodTypeId = "", HoldBackPeriod = "", Notes = "" });
            //    SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitaionId = 1, IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPreiodTypeId = "", HoldBackPeriod = "", Notes = "" });
            //    SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitaionId = 1, IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPreiodTypeId = "", HoldBackPeriod = "", Notes = "" });
            //    SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitaionId = 1, IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPreiodTypeId = "", HoldBackPeriod = "", Notes = "" });
            //    SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitaionId = 1, IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPreiodTypeId = "", HoldBackPeriod = "", Notes = "" });
            //    SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitaionId = 1, IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPreiodTypeId = "", HoldBackPeriod = "", Notes = "" });
            //    SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitaionId = 1, IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPreiodTypeId = "", HoldBackPeriod = "", Notes = "" });
            //    SecondaryExploitation.Add(new ContractExploitationRestrictions() { ExploitaionId = 1, IsRestricted = true, RightSetId = 1, ExploitationTypeId = "", RestrictionTypeId = "", ConsentPreiodTypeId = "", HoldBackPeriod = "", Notes = "" });
            # endregion Secondary Exploitation DropDown Dummy data

        }
        
        public List<ContractExploitationRestrictions> SecondaryExploitation { get; set; }


        public string GetText(Boolean a)
        {
            if (a == true)
                return "Yes";
            else
                return "No";
        }



        public IEnumerable<SelectListItem> RestrictedList;
        public IEnumerable<SelectListItem> RestrictionList;
        public IEnumerable<SelectListItem> ConsentPeriodList;


    }

    public class Restriction
    {
        public string RestrictionTypeId { get; set; }
        public string RestrictionTypeName { get; set; }

    }


    public class ConsentPeriod
    {
        public string ConsentPeriodTypeId { get; set; }
        public string ConsentPeriodTypeName { get; set; }

    }

}