@model UMGI.GRCS.UI.Models.RightsReviewWQ.ResourceSecondaryRightsReviewModel
@using UMGI.GRCS.Resx.Resource.UIResources
@*<script src="@Url.Content("/GCS/Scripts/Custom/SecondaryExploitation.js")" type="text/javascript"></script>*@
<link href="@Url.Content("/GCS/Content/SubPages/RightsPriorityWorkQueue.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("/GCS/Scripts/Custom/RightsReviewWorkQueue/SecondaryExploitationBulkEdit.js")" type="text/javascript"></script>

<div><link href="@Url.Content("/GCS/Content/SubPages/SecondaryExploitationPopup.css")" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("", "", FormMethod.Post, new { Id = "secExploitationPopup" }))
{
    <div id="divWarning" class="displayNone">
        <div class="divWarningContainer">
            <span class="alertImage"></span>
            <div id="divSecondaryError">
            </div>
        </div>
    </div>
    <div class="divTopButtonsStrip">
        <div class="SecExploitationLabel">
            @RepertoireSearch.ReviewStatus
            @Html.DropDownList("ddlreviewStatus", Model.ReviewStatusDropDown)</div>
        <div class="applyCancelContainer">
            <div class="primbutton_left">
            </div>
            <div class="alignLeft">
                <input type="button" id="btnApplySecondaryBulkEdit" value="Apply Changes" class="primbutton" />
            </div>
            <div class="primbutton_right btnSpaceLocal">
            </div>
            <div class="secbutton_left">
            </div>
            <div class="alignLeft">
                <input type="button" id="btnCancelSecondaryBulkEdit" value="Cancel" class="secbutton" />
            </div>
            <div class="secbutton_right">
            </div>
        </div>
    </div>
    <div class="divResourceDetails clearFloat">
        <div class="informationDiv">
        </div>
        <div class="resetSelectionContainer">
            <div class="secbutton_left">
            </div>
            <div class="alignLeft">
                <input type="button" id="btnResetSecondaryBulkEdit" value="Reset Selection" class="secbutton" />
            </div>
            <div class="secbutton_right">
            </div>
        </div>
    </div>
    <div id="divSecondaryExploitationPopContainer">
    </div>
    <div class="accSecondaryBody clearFloat">
        <table class="sample Fullwidth">
            <thead>
                <tr>
                    <th class="ExploitationTypeColumn">
                        @ContractResource.ExploitationTypeColumn
                    </th>
                    <th class="SecondaryExploitationRestricted">
                         <span id="applyRestrictedBulk" title="Apply to all" class="applyAllSec"></span>
                        @ContractResource.SecondaryExploitationRestricted
                    </th>
                    <th class="RestrictionsColumn">
                         <span id="applyRestrictionBulk" title="Apply to all" class="applyAllSec"></span>@ContractResource.RestrictionsColumn
                    </th>
                    <th class="ConsentPeriodColumn">
                        <span id="applyConsentBulk" title="Apply to all" class="applyAllSec"></span> 
                        @ContractResource.ConsentPeriodColumn
                    </th>
                    <th class="HoldbackPeriodColumn">
                        <span id="applyHoldBackBulk" title="Apply to all" class="applyAllSec"></span>
                        @ContractResource.HoldbackPeriodColumn
                    </th>
                    <th class="NotesColumn">
                        <span id="applyNotesBulk" title="Apply to all" class="applyAllSec"></span> @ContractResource.NotesColumn
                    </th>
                </tr>
            </thead>
            <tbody>
                @for (int index = 0; index < Model.right.Exploitations.Count(); index++)
                {

                    <tr>
                        <td>
                            @Html.DisplayFor(model => model.ExploitationTypes[index].Text)
                             @Html.Hidden(string.Format("SecondaryExploitation[{0}].ExploitationTypeId", index), Model.right.Exploitations[index].ExploitationTypeId)  
                            @*  @Html.HiddenFor(model => model.SecondaryExploitation[index].ExploitationId)  @*Need to pass ExploitationId while save Contract*@
                        </td>
                        <td>
                            @Html.DropDownList(string.Format("SecondaryExploitation[{0}].RestrictionOptionId", index), new SelectList(Model.RestrictedOptions, "value", "text", 111), new { @class = "restrictedList" })
                        </td>
                        <td>
                            @Html.DropDownList(string.Format("SecondaryExploitation[{0}].RestrictionTypeId", index), new SelectList(Model.Restrictions, "value", "text", 111), new { @class = "restrictionList" })
                        </td>
                        <td>
                            @Html.DropDownList(string.Format("SecondaryExploitation[{0}].ConsentPeriodTypeId", index), new SelectList(Model.ConsentPeriod, "value", "text", 111), new { @class = "consentList" })
                        </td>
                        <td>
                            @Html.TextBox(string.Format("SecondaryExploitation[{0}].HoldBackPeriod", index), Model.right.Exploitations[index].HoldBackPeriod, new { @class = "HoldBack" })
                        </td>
                        <td>
                            @Html.TextBox(string.Format("SecondaryExploitation[{0}].Notes", index), Model.right.Exploitations[index].Notes, new { @class = "Notes" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}</div>