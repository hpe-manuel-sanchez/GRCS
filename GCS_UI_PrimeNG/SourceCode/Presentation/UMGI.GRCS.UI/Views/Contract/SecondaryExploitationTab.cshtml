@model UMGI.GRCS.UI.Models.SecondaryExploitationTabModel
@using UMGI.GRCS.Resx.Resource.UIResources
@{
    ViewBag.Title = @ContractResource.SecondaryExploitationMenu;
}
<script src="@Url.Content("/GCS/Scripts/Custom/SecondaryExploitation.js")" type="text/javascript"></script>
<script type="text/javascript">

    var msg = '@ViewBag.displayMessage';
    if (msg != null)
        displayDialog("Info", msg);
</script>
@using (Html.BeginForm("SecondaryExploitation", "Contract", FormMethod.Post, new { Id = "SecExpForm" }))
{
    <div class="scrollContract">
        <div class="secondary">
            @* Commented as per BA Requirement
       <p>
            A list of audio/video assets that are deemed approved for both digital and physical
            exploitation for the particular exploitation types indicated. The asset metadata
            is retrieved from the R2 Repertoire Broker</p>*@

            @*Seconday Template is Removed
<ul id="Template">
<li>Choose from Template</li>
<li> @Html.DropDownListFor(model => Model.SecondaryExploitationTemplateList, Model.SecondaryExploitationTemplateList, new { @id = "ddlTemplateList" })      </li>
</ul>*@

            <div class="accSecondary">
                <div class="accSecondaryHead">
                    <span>@ContractResource.SecondaryExploitationMenu</span>
                </div>
            </div>
            <div class="accSecondaryBody">
                <table class="sample Fullwidth">
                    <thead>
                        <tr>
                            <th style="width: 15%;">
                                @ContractResource.ExploitationTypeColumn
                            </th>
                            <th style="width: 10%;">

                                <input type="image" src="/GCS/Images/Apply_All.png" id="applyRestricted" title="Apply to All" />
                                @ContractResource.SecondaryExploitationRestricted
                            </th>
                            <th style="width: 13%;">

                                <input type="image" src="/GCS/Images/Apply_All.png" id="applyRestriction" title="Apply to All" />@ContractResource.RestrictionsColumn
                            </th>
                            <th style="width: 16%;">

                                <input type="image" src="/GCS/Images/Apply_All.png" id="applyConsent" title="Apply to All" />
                                @ContractResource.ConsentPeriodColumn
                            </th>
                            <th style="width: 18%;">

                                <input type="image" src="/GCS/Images/Apply_All.png" id="applyHoldBack" title="Apply to All" />
                                @ContractResource.HoldbackPeriodColumn
                            </th>
                            <th style="width: 28%;">

                                <input type="image" src="/GCS/Images/Apply_All.png" id="applyNotes" title="Apply to All" />@ContractResource.NotesColumn
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int index = 0; index < Model.SecondaryExploitation.Count(); index++)
                        {

                            <tr>
                                <td>
                                    @Html.DisplayFor(model => model.SecondaryExploitation[index].ExploitationType)
                                    @Html.HiddenFor(model => model.SecondaryExploitation[index].ExploitationTypeId)  @*Need to pass ExploitationTypeId while save Contract*@
                                    @Html.HiddenFor(model => model.SecondaryExploitation[index].ExploitationId)  @*Need to pass ExploitationId while save Contract*@
                                </td>
                                <td>
                                    @Html.DropDownList(string.Format("SecondaryExploitation[{0}].RestrictionOptionId", index), new SelectList(Model.RestrictedList, "value", "text", Model.SecondaryExploitation[index].RestrictionOptionId), new { @class = "restrictedList" })
                                </td>
                                <td>
                                    @Html.DropDownList(string.Format("SecondaryExploitation[{0}].RestrictionTypeId", index), new SelectList(Model.RestrictionList, "value", "text", Model.SecondaryExploitation[index].RestrictionTypeId), new { @class = "restrictionList" })
                                </td>
                                <td>
                                    @Html.DropDownList(string.Format("SecondaryExploitation[{0}].ConsentPeriodTypeId", index), new SelectList(Model.ConsentPeriodList, "value", "text", Model.SecondaryExploitation[index].ConsentPeriodTypeId), new { @class = "consentList" })
                                </td>
                                <td>
                                    @Html.TextBox(string.Format("SecondaryExploitation[{0}].HoldBackPeriod", index), Model.SecondaryExploitation[index].HoldBackPeriod, new { @class = "HoldBack" })
                                </td>
                                <td>
                                    @Html.TextBox(string.Format("SecondaryExploitation[{0}].Notes", index), Model.SecondaryExploitation[index].Notes, new { @class = "Notes" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @*Secondary Template is Removed
 <div>
 <input type="submit" id = "btnSaveTemplate" value="Save Template" />
 </div>**@
        </div>
    </div>

}