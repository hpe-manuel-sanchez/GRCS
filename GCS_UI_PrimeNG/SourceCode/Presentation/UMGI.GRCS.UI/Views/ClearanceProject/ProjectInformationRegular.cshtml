@using System.Web.Script.Serialization
@using UMGI.GRCS.BusinessEntities.Lookups
@using UMGI.GRCS.Resx.Resource.Layout
@using UMGI.GRCS.Resx.Resource.UIResources
@using UMGI.GRCS.UI.Models
@model ClearanceProjectModel
@{
    var mandatory = ClearenceResource.MandatorySymbol;
}

@if (ViewBag.ProjectTerritories != null)
{
    foreach (int index in ViewBag.ProjectTerritories.Keys)
    {
    <script type="text/javascript">

        var territorycountryList = @Html.Raw(Json.Encode(ViewBag.ProjectTerritories[index]));

        if (territorycountryList != null) {
            if (document.getElementById('hdnterritoryDetailsForSave_' + @Html.Raw(Json.Encode(index))) != null) {
                document.getElementById('hdnterritoryDetailsForSave_' + @Html.Raw(Json.Encode(index))).value = JSON.stringify(@Html.Raw(Json.Encode(ViewBag.ProjectTerritories[index])));
            }
        }
    </script>
    }
}
<link href="@Url.Content("/GCS/Content/SubPages/pi-regular.min.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("/GCS/Scripts/Custom/ProjectInformationRegularExtended.js")" type="text/javascript"> </script>

<script type="text/javascript">
    var manageTerritoryTitle = '@ClearenceResource.ManageTerritoryHeader';
    var campaignManageTerritoryTitle = '@ClearenceResource.CampaignCountriesManageTerritoryHeader';
    var noRowsSelected = '@ClearenceResource.js_SelectRowAlert';
    var searchresultForLabel = '@ClearenceResource.SearchResultLabel';
    var watermarkUserName = '@ClearenceResource.js_watermarkUserName';
    var watermarkUserId = '@ClearenceResource.js_watermarkUserId';
    var watermarkCountry = '@ClearenceResource.js_watermarkCountryOnly';
    var watermarkCompanyName = '@ClearenceResource.js_watermarkCompanyName';
    var watermarkIsacCode = '@ClearenceResource.js_watermarkIsacCode';
    var mandatoryFields = '@ClearenceResource.js_MandatoryFields';
    var validEmailId = '@ClearenceResource.js_ValidEmailId';
    var recordCount = '@ClearanceProjectModel.TotalRowsCount';
    var watermarkThirdPartyReptoire = '@ClearenceResource.js_watermarkComments';
    var watermarkOneStopReason = '@ClearenceResource.js_watermarkOneStopReason';
    var uploadMessage = '@ClearenceResource.UploadMaximumDocumentMsg';
    var uploadDoumentMsg = '@ClearanceLayout.UploadDoumentMsg';
    var selectedCompanyId = "";
    var createWorkgroupMessages = {
        searchInValid: '@ClearenceResource.js_searchworkgroupInvalidMessage',
        SelectDefaultUser: '@ClearenceResource.js_SelectDefaultUser',
        noRowSelect: '@ClearenceResource.js_NoRowSelected'
    };
</script>

@functions
{

    private string getRCCHandler()
    {
        var rcChandlerUserName = string.Empty;
        if (Model.RccHandler.Any(x => x.Value == Model.RegularProjectDetails.Rcc_User))
        {
            foreach (var r in Model.RccHandler.Where(r => r.Value == Model.RegularProjectDetails.Rcc_User))
            {
                rcChandlerUserName = r.Text;
                break;
            }
        }
        return rcChandlerUserName;
    }

}

<div id="divCancelledRejResource" style="overflow-y: auto !important;"></div>
<div id="SearchedCompanyList" style="position: relative; margin: 0; padding: 0;"></div>
<input id="hdnterritoryDetailsForSave_1" name="hdnterritoryDetailsForSave_1" type="hidden" class="hdnManageTerriCls" />
<input id="hdnTempterritoryDetailsForSave" type="hidden" />
<input id="hdnincludeTerritoryString_1" name="hdnincludeTerritoryString_1" type="hidden" value="" />
<input id="hdnExcludeTerritoryString_1" name="hdnExcludeTerritoryString_1" type="hidden" value="" />

<div class="contentPanel">
    <div class="headerDv1">

        @Html.Hidden("projectTitleFreeHandPush", "")
        @Html.Hidden("companyIdFreeHandPush", "")
        @Html.Hidden("divisionIdFreeHandPush", "")
        @Html.Hidden("labelIdFreeHandPush", "")
        @Html.Hidden("hdnArtistIdPush", "")
        @Html.Hidden("hdnArtistNamePush", "")
        @Html.Hidden("companyIdSelectedValue", "")
        @Html.Hidden("companyNameSelectedValue", "")
        @Html.Hidden("divisionIdSelectedValue", "")
        @Html.Hidden("projectIdSelectedValue", "")
        @Html.Hidden("TaskTypeSelectedValue", "")
        @Html.Hidden("IsReleaseTabLoaded", "")
        @Html.Hidden("IsResourceTabLoaded", "")
        @Html.Hidden("divArtistNameSelected", "")
        @Html.Hidden("hdnArtistIdSelected", "")
        @Html.HiddenFor(model => model.RegularProjectDetails.IsSensitiveDataChanged, new { id = "IsSensitiveDataChanged" })
        @Html.HiddenFor(model => model.RegularProjectDetails.IsUMGiMarkettingRoutingRequired, new { id = "IsUMGiMarkettingRoutingRequired" })
        @Html.HiddenFor(model => model.RegularProjectDetails.IsNewCountriesAddedAfterSubmit, new { id = "IsNewCountriesAddedAfterSubmit" })
        @Html.HiddenFor(model => model.RegularProjectDetails.RequesterWorkgroupId, new { id = "hdnrequesterWorkgroupId" })
        @Html.Hidden("RegularValidationLevel", "")
        @Html.HiddenFor(model => model.RegularProjectDetails.ResubmitReasonComments, new {id = "hdnResubmitReasonComments"})  
         
        <h5 class="downArrow prjInfoRegHeader" style="overflow: visible; height: auto;">
            <ul class="upper_header">
                <li class="first">@ClearanceLayout.RegularProjectProjectInformationLabel</li>
                <li class="bar_header">|</li>
                <li class="createdByLabel">@ClearanceLayout.MasterProjectCreatedByLabel</li>
                <li class="createdBy">@Html.DisplayTextFor(model => model.RegularProjectDetails.CreatedByUser)</li>
                <li class="bar_header">|</li>
                <li class="projectRefrenceLabel">@ClearanceLayout.RegularProjectInfoProjectReferenceLabel</li>
                <li class="projectRefrenceVal" id="lblprojectreferencenumber"></li>
                <li class="bar_header">|</li>
                <li class="createdDate text-align-left">@ClearanceLayout.RegularProjectInfoCreatedDateLabel</li>
                <li class="createdVal text-align-left">@Html.DisplayFor(model => model.RegularProjectDetails.CreatedDate)</li>
                @if (Model.RegularProjectDetails.StatusType != 1)
                {
                    if (ViewBag.RoleGroup != RoleGroup.RCCAdmin)
                    {
                    <li class="createdDate text-align-left">@ClearanceLayout.lblRccHandler</li>
                        if (Model.RccHandler != null && Model.RegularProjectDetails.Rcc_User != null && Model.RegularProjectDetails.Rcc_User != "0")
                        {
                    <li class="text-align-left" style="width: auto !important;">
                        @getRCCHandler()
                    </li>
                        }
                    }
                }
            </ul>
        </h5>
    </div>

    <div class="contentDv">
        <!-- first row Start -->
        <div class="rpi-wrapper">
            <!-- Project Title Start Here -->
            <div class="rpi-column1 rpi-fl  ">
                <div class="rpi-label rpi-fl rpi-tar rpi-bold">
                    @ClearanceLayout.RegularProjectInfoProjectTitleLabel
                </div>
                <div class="rpi-field rpi-fr rpi-tal">
                    @Html.TextBoxFor(model => model.RegularProjectDetails.ProjectTitle, new { id = "txtProjectTitle", @maxlength = 275, @class = "width-large", onblur = "updateReleaseNewTitle(this);" })
                </div>
            </div>
            <!-- Project Title Ends Here -->
            <!-- Requesting Company Start Here -->
            <div class="rpi-column1 rpi-fl ">
                <div class="rpi-label-1 rpi-fl rpi-tar rpi-bold">
                    @ClearanceLayout.RegularProjectInfoRequestingCompanyLabel
                </div>
                <div class="rpi-field-2 rpi-fl rpi-tal pddlef">
                    @Html.DropDownListFor(model => model.RegularProjectDetails.RequesterCompanyId, new SelectList(Model.CompanyList, "Value", "Text"), new { id = "ddlRequestingComp", @class = "select-width-medium" })
                </div>
            </div>
            <!-- Requesting Company End Here -->
            <!-- Status Start Here -->
            <div class="rpi-column1 rpi-fr ">
                <div class="rpi-label rpi-fl rpi-tar rpi-bold">
                    @ClearanceLayout.RegularProjectInfoStatusLabel
                </div>
                <div class="rpi-field rpi-fr rpi-tal">
                    @Html.DisplayTextFor(model => model.RegularProjectDetails.StatusTypeDesc)
                    @Html.HiddenFor(model => model.RegularProjectDetails.StatusType, new { id = "hdnRegularProjectStatusId" })
                </div>
            </div>
            <!-- Status End Here -->
        </div>
        <!--first row  Ends -->
        <!-- second row Start -->
        <div class="rpi-wrapper">
            <!-- Local Refrence Start Here -->
            <div class="rpi-column1 rpi-fl  ">
                <div class="rpi-label rpi-fl rpi-tar rpi-bold">
                    @ClearanceLayout.RegularProjectInfoLocalReferenceLabel
                </div>
                <div class="rpi-field rpi-fr rpi-tal">
                    @Html.TextBoxFor(model => model.RegularProjectDetails.LocalReference, new { id = "txtLocRefNumber", maxlength = 20, @class = "width-large" })
                </div>
            </div>
            <!-- Local Refrence End Here -->
            <!-- Estimated Sales/Units Start Here -->
            <div class="rpi-column1 rpi-fl ">
                <div class="rpi-label-1 rpi-fl rpi-tar rpi-bold">
                    <span id="lblEstimatedSalesMandatory" class="madatoryField">@mandatory</span>@ClearanceLayout.RegularProjectInfoEstimatedSalesUnitsLabel
                </div>
                <div class="rpi-field-1 rpi-fr rpi-tal">
                    @Html.TextBoxFor(model => model.RegularProjectDetails.EstimatedSalesUnit, new { id = "txtEstimatedSalesUnit", maxlength = 8, @class = "width-small", onkeydown = "return OnlyNumeric(event, 'i');" })
                </div>
            </div>
            <!-- Estimated Sales/Units Ends Here -->
            <!-- Release Date Start Here -->
            <div class="rpi-column1 rpi-fr ">
                <div class="rpi-label rpi-fl rpi-tar rpi-bold">
                    @ClearanceLayout.RegularProjectInfoReleaseDateLabel
                </div>
                <div class="rpi-field rpi-fr rpi-tal">
                    @Html.TextBoxFor(model => model.RegularProjectDetails.ReleaseDate, new { id = "txtReleaseDate", maxlength = 20, @class = "width-medium" })
                </div>
            </div>
            <!-- Release Date Ends Here -->
        </div>
        <!--second row  Ends -->
        <!-- third row start -->
        <div class="rpi-wrapper">
            <!-- Details Start Here -->
            <div class="rpi-column1 rpi-fl  ">
                <div class="rpi-label rpi-fl rpi-tar rpi-bold">
                    @ClearanceLayout.RegularProjectInfoDetailsLabel
                </div>
                <div class="rpi-field rpi-fr rpi-tal">
                    @Html.TextAreaFor(model => model.RegularProjectDetails.Details, new { id = "txtDetails", @class = "txt-width-large" })
                </div>
            </div>
            <!-- Details Ends Here -->
            <!-- Third Party Repertoire Start Here -->
            <div class="rpi-column1 rpi-fl ">
                <div class="rpi-label-1 rpi-fl rpi-tar rpi-bold">
                    @ClearanceLayout.RegularProjectInfoThirdPartyRepertoireLabel
                </div>
                <div class="rpi-field-1 rpi-fr rpi-tal">
                    @Html.TextAreaFor(model => model.RegularProjectDetails.ThirdPartyRepertoire, new { id = "txtThirdPartyRepertoire", @class = "txt-width-small" })
                </div>
            </div>
            <!-- Third Party Repertoire Ends Here -->
            <!-- Upload Project Documents Start Here -->
            <div class="rpi-column1 rpi-fr ">
                <div class="rpi-label rpi-fl rpi-tar rpi-bold">
                    @ClearanceLayout.RegularProjectInfoUploadProjectDocumentsLabel
                    @Html.Hidden("hdnRemoveFile", "")
                </div>
                <div class="rpi-field rpi-fr rpi-tal">
                    <div id="fileInput0" style="display: inline;">
                        <input type="file" class="width-file" name="fileUpload" id="fileUpload_0" onclick=" BeforeUploadFileOnClient(); "
                            onchange=" UploadFileOnClient(this); " />
                    </div>

                    <div id="fileInput11" style="display: none;">
                    </div>

                    <div id="fileuploadloading">
                        <div class="file-upload-scroll">
                            <table id="tblFileUpload" style="border-collapse: collapse; display: none;" border="1">

                                @if (Model.RegularProjectDetails.listUploadDocument != null)
                                {
                                    if (Model.RegularProjectDetails.listUploadDocument.Any())
                                    {
                                        for (var i = 0; i < Model.RegularProjectDetails.listUploadDocument.Count; i++)
                                        {
                                    <tr>
                                        <td style="border: 1px solid #999; padding: 5px;">
                                            @Html.ActionLink(Model.RegularProjectDetails.listUploadDocument[i].Name, "ReadRegularFile/" + Model.RegularProjectDetails.listUploadDocument[i].Name + "~" + Model.RegularProjectDetails.listUploadDocument[i].Id + "~" + Model.RegularProjectDetails.ClrProjectId, "ClearanceProject")
                                        </td>
                                        <td style="border: 1px solid #999; padding: 5px;">
                                            @Html.ActionLink("Remove", "", null, new { onclick = "return RemoveFile('" + Model.RegularProjectDetails.listUploadDocument[i].Name + "~" + Model.RegularProjectDetails.listUploadDocument[i].Id + "~" + (i + 1) + "');", @Href = "#", @id = "hdnRemoveFromServer" + (i + 1), @class = "RemoveFile" })
                                        </td>
                                    </tr>
                                        }
                                    }
                                }
                            </table>
                        </div>
                        <button type="button" id="btnUpload" class="plbutton" style="display: none;"><span>upload</span></button>
                    </div>
                </div>
            </div>
            <!-- Upload Project Documents Ends Here -->
        </div>
        <!--third row ends -->
        <!-- fourth row start -->
        <div class="rpi-wrapper">
            <div class="rpi-column7 rpi-fl  ">
                &nbsp;
            </div>
            <div class="rpi-column6 rpi-fl ">
                <ul class="rpi-ul">
                    <li class="li-first">
                        @Html.CheckBoxFor(model => model.RegularProjectDetails.MultiArtist, new { id = "chkMultiArtist", @class = "multiArtist" })
                        @Html.Hidden("hdnMultiartist", "")
                        @ClearanceLayout.RegularProjectInfoMultiArtistChkbox
                    </li>
                    <li>
                        @Html.CheckBoxFor(model => model.RegularProjectDetails.Compilation, new { @class = "chkCompilation" })
                        @Html.HiddenFor(model => model.RegularProjectDetails.Compilation)
                        @ClearanceLayout.RegularProjectInfoCompilationLabel
                    </li>
                    <li>
                        @Html.CheckBoxFor(model => model.RegularProjectDetails.HighPriority, new { id = "chkHighPriority" })
                        @ClearanceLayout.RegularProjectInfoHighPriorityLabel
                    </li>
                    <li>
                        @Html.CheckBoxFor(model => model.RegularProjectDetails.SensitiveExplotation, new { id = "chkSensitiveExplotation" })
                        @ClearanceLayout.RegularProjectInfoSensitiveExploitationLabel
                    </li>
                    <li class="li-last">
                        @Html.CheckBoxFor(model => model.RegularProjectDetails.OneStop, new { id = "chkOneStop", @class = "onestop" })
                        @ClearanceLayout.RegularProjectInfoOneStopLabel
                    </li>
                </ul>
            </div>
        </div>
        <!--fourth row ends -->
        <!-- fifth row start -->
        <div class="rpi-wrapper">
            <!-- Release Territories: Start Here -->
            <div class="rpi-column1 rpi-fl  ">
                <div class="rpi-label rpi-fl rpi-tar rpi-bold">
                    <span class="madatoryField">@mandatory</span>@ClearenceResource.ReleaseCountrieslevel
                </div>
                <div class="rpi-field rpi-fr rpi-tal">
                    <ul class="manu-umg-pi1" style="padding-top: 2px;">
                        <li id="tdcountryList" class="rpi-bold">
                            @ClearenceResource.IncludedLabel
                        </li>
                        <li class="wrapText " id="wrap_2"><div id="selectedCountries_1"></div>@Html.Hidden("hdnIncludedTerritoriesProject", "", new { id = "hdnIncludedTerritoriesProject"}) @Html.Hidden("hdnExcludedTerritoriesProject", "", new { id = "hdnExcludedTerritoriesProject"})</li>
                        <li> <input id="btnManageTerritories" type="button" value="Manage Territories" class="plbutton" onclick=" ParentLoadTerritories('1'); "/></li>
                    </ul>
                </div>
            </div>
            <!-- Release Territories: End Here -->

            <div class="rpi-column1 rpi-fl ">
                <div class="rpi-label-1 rpi-fl rpi-tar rpi-bold">
                    &nbsp;
                </div>
                <div class="rpi-field-1 rpi-fr rpi-tal">
                    <span class="rpi-bold">@ClearenceResource.ExcludedLabel</span>
                    <div id="UnselectedCountries_1" class="wrapText"></div>
                </div>
            </div>
            <div class="rpi-column1 rpi-fr ">
                <div class="rpi-label rpi-fl rpi-tar rpi-bold">
                    <span id="lblChkStopMandatory" class="madatoryField" style="display: none;">@mandatory</span>
                </div>
                <div class="rpi-field rpi-fr rpi-tal">
                    @Html.HiddenFor(model => model.RegularProjectDetails.R2_Project_Id, new { id = "R2_Project_Id" })
                    @Html.HiddenFor(model => model.RegularProjectDetails.R2_Project_Code, new { id = "R2_Project_Code" })
                    @Html.HiddenFor(model => model.RegularProjectDetails.CreatedBy)
                    @Html.HiddenFor(model => model.RegularProjectDetails.CreatedByUser)
                    @Html.HiddenFor(model => model.RegularProjectDetails.CreatedDate)
                    @Html.HiddenFor(model => model.RegularProjectDetails.StatusTypeDesc)
                    @Html.HiddenFor(model => model.RegularProjectDetails.StatusType, new { id = "hdnStatusType" })
                    @Html.HiddenFor(model => model.RegularProjectDetails.ClrProjectId, new { id = "Clr_Project_Id" })
                    @Html.HiddenFor(model => model.RegularProjectDetails.Command, new { id = "hdncommand" })
                    @Html.HiddenFor(model => model.RegularProjectDetails.ProjectReferenceId, new { id = "ProjectRefId" })
                    @Html.HiddenFor(model => model.isInMaintainMode)
                    @{
                        var serializer1 = new JavaScriptSerializer();
                        var Modifieddate = serializer1.Serialize(Model.RegularProjectDetails.ProjectModifiedDate);
                    }
                    @Html.Hidden("hdnProjectModifiedDate", Modifieddate, new { Id = "hdnProjectModifiedDate" })
                    @Html.TextAreaFor(model => model.RegularProjectDetails.OneStopReason, new { id = "txtOneStopReason", @class = "txt-width-small" })
                </div>
            </div>
        </div>
        <!--fifth row ends -->
    </div>
</div>
@*  Upper panel: Ends*@
@*  Lower panel: Starts *@
<div class="contentPanel">
    <div class="headerDv1">
        <h5 class="downArrow prjInfoRegHeader" >@Html.Label(ClearanceLayout.RegularProjectInfoThirdPartyLabel)</h5></div>
    <div class="contentDv">
        <!-- first row  starts-->
        <!-- 3rd Party Start Here -->
        <div class="rpi-wrapper">
            <div class="rpi-column7 rpi-fl  ">
                &nbsp;
            </div>
            <div class="rpi-column6 rpi-fl ">
                <ul class="rpi-ul ">
                    <li class="li-first rpi-bold">
                        @Html.CheckBoxFor(model => model.RegularProjectDetails.ThirdParty, new { id = "chk3rdParty", @class = "multiArtist" }) @ClearanceLayout.RegularProjectInfoThirdPartyChxbox
                    </li>
                    @Html.HiddenFor(model => model.RegularProjectDetails.ThirdParty, new { id = "chk3rdPartyCompany" })
                </ul>
            </div>
        </div>
        <!-- 3rd Party End Here -->
        <!-- first row ends -->
        <!-- Second row  starts-->
        <div class="rpi-wrapper" id="Div3rdPartyDetails" style="display: none">
            <div class="rpi-column7 rpi-tar rpi-fl labelbold pddtop rpi-bold">
                <span id="3rdPartyCompanyMandatory" class="madatoryField">@mandatory</span>@ClearanceLayout.RegularProjectInfoThirdPartyCompanyLabel &nbsp;
            </div>
            <div class="rpi-column6 rpi-fl ">
                <div class="thrd-prty-col1">
                    <ul class="rpi-ul1">
                        <li class="thrd-prty-company">&nbsp;@Html.TextBoxFor(model => model.MasterProjectDetails.ThirdPartyCompanyName, new { data_autocomplete_source_manual = @Url.Action("AutoCompleteSearch", "ClearanceProject"), SearchFor = "ThirdParyCompanyName", id = "name1", @class = "width-medium" })</li>
                        <li class="thrd-prty-isrc">@Html.TextBox("isaccode1", null, new { @class = "width-medium" })</li>
                        <li class="thrd-prty-country">@Html.TextBoxFor(model => model.RegularProjectDetails.thirdPartyCompanyDetails.CountryName, new { data_autocomplete_source_manual = @Url.Action("AutoCompleteSearch", "ClearanceProject"), SearchFor = "ThirdParytcountry", id = "country1", @class = "width-medium" })</li>
                        <li class="thrd-prty-btnSearchCompany"><input id="btnSearchCompany" type="button" value="@ClearanceLayout.RegularProjectInfoSearch3rdPartyCompanyButton" class="primbutton" /></li>
                    </ul>
                </div>
                <div class="thrd-prty-col2" style="padding-top: 5px;">
                    <div class="thrd-prty-subcol1"><span id="licenseTermMandatory" class="madatoryField">@mandatory</span>@ClearanceLayout.RegularProjectInfoLicenseTermLabel </div>
                    <div class="thrd-prty-subcol2">@Html.TextBoxFor(model => model.RegularProjectDetails.LicenseTerm, new { id = "txtLicenseTerm", maxlength = 100, @class = "width-medium2" })</div>
                </div>
            </div>
        </div>
        <!-- Second row ends -->
        <!-- third row  starts-->
        <div class="rpi-wrapper" id="tblThirdParty">
            <div class="rpi-column7 rpi-tar rpi-fl labelbold pddtop">
                &nbsp;
            </div>
            <div class="rpi-column6 rpi-fl ">
                <div id="rowAddedCompanyResult" class="jtable-main-container" style="width: 700px;">
                    <table class="jtable" id="thirdPartyCompanyTable">
                        <thead>
                            <tr>
                                <th class="jtable-column-header" style="width: 40%;">
                                    <div class="jtable-column-header-container">
                                        <span class="jtable-column-header-text">Company</span>
                                        <div class="jtable-column-resize-handler"></div>
                                    </div>
                                </th>
                                <th class="jtable-column-header" style="width: 20%;">
                                    <div class="jtable-column-header-container">
                                        <span class="jtable-column-header-text">ISAC Company Code</span>
                                        <div class="jtable-column-resize-handler"></div>
                                    </div>
                                </th>
                                <th class="jtable-column-header" style="width: 30%;">
                                    <div class="jtable-column-header-container">
                                        <span class="jtable-column-header-text">Country</span>
                                    </div>
                                </th>
                                <th class="jtable-column-header" style="width: 10%;">
                                    <div class="jtable-column-header-container">
                                        <span class="jtable-column-header-text">Remove</span>
                                    </div>
                                    @Html.HiddenFor(model => model.CompanyDetails.Id, new { id = "hdnCompId", maxlength = 100 })
                                    @Html.HiddenFor(model => model.CompanyDetails.Name, new { id = "hdnCompName" })
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="jtable-row-even">
                                <td id="tdCompName">
                                    @if (Model.RegularProjectDetails.thirdPartyCompanyDetails == null)
                                    {
                                        <img src="@Url.Content("/GCS/images/project.png")" alt="Freehand" title="Project" />
                                    }
                                    @Html.DisplayFor(model => model.RegularProjectDetails.ThirdPartyCompanyName)</td>
                                <td id="tdIsacCode">@Html.DisplayFor(model => model.RegularProjectDetails.thirdPartyCompanyDetails.ISACCode)</td>
                                <td id="tdCountry">@Html.DisplayFor(model => model.RegularProjectDetails.thirdPartyCompanyDetails.CountryName)</td>
                                <td>
                                    @if (Model.RegularProjectDetails.StatusType == 4 || Model.RegularProjectDetails.StatusType == 3)
                                    {
                                        <a class="LockIt" href="javascript:void(0);">@ClearanceLayout.RegularProjectInfoRemoveLink </a>
                                    }
                                    else
                                    {
                                        <a class="LockIt" href="javascript:void(0);" onclick=" RemoveThirdPartyCompany(); " style="text-decoration: underline;">@ClearanceLayout.RegularProjectInfoRemoveLink </a>
                                    }
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    @Html.TextBoxFor(model => model.RegularProjectDetails.thirdPartyCompanyDetails.ISACCode, new { id = "txtThirdPartyCompISAC", style = "visibility:hidden;" })
                    @Html.TextBoxFor(model => model.RegularProjectDetails.thirdPartyCompanyDetails.CountryName, new { id = "txtThirdPartyCompCountry", style = "visibility:hidden;" })
                    @Html.HiddenFor(model => model.RegularProjectDetails.thirdPartyCompanyDetails.ISACCode, new { id = "hdnThirdPartyComapnyISAC" })
                    @Html.HiddenFor(model => model.RegularProjectDetails.thirdPartyCompanyDetails.CountryName, new { id = "hdnThirdPartyComapnyCountry" })
                    @Html.HiddenFor(model => model.RegularProjectDetails.IsExisting)
                    @Html.TextBoxFor(model => model.RegularProjectDetails.ThirdPartyCompanyName, new { id = "txtThirdPartyCompName", style = "visibility:hidden;" })
                    @Html.TextBoxFor(model => model.RegularProjectDetails.ThirdPartyCompanyID, new { id = "txtThirdPartyCompId", maxlength = 100, style = "visibility:hidden;" })
                    @Html.TextBoxFor(model => model.RegularProjectDetails.ProjectReferenceId, new { id = "txtProjectReferenceId", style = "visibility:hidden;" })
                </div>
            </div>
        </div>
        <!-- third row ends -->
    </div>
</div>