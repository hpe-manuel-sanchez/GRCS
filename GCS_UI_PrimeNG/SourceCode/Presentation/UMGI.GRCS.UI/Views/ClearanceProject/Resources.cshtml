@using UMGI.GRCS.Resx.Resource.Layout

@model UMGI.GRCS.UI.Models.ClearanceProjectModel
@{
    var mandatory = @UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.MandatorySymbol;
}

@functions
{

    private string substringVal(string inputVal, int length)
    {
        if (inputVal == null || string.IsNullOrEmpty(inputVal))
        {
            return string.Empty;
        }

        if (inputVal.Length > length)
        {
            inputVal = inputVal.Substring(0, length);
            inputVal += "...";
        }

        return inputVal;
    }

}

<script type="text/javascript">

    var atleastsearchcriteriaresource = '@UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.js_searchworkgroupInvalidMessage';
    var watermarkComments = '@UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.js_watermarkComments';
    var durationAndExcerptTimeMsg = '@UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.DurationAndExcerptTimeMsg';
    var moneyRange = '@UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.MoneyRange';
    var durationExcerptMessage = '@UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.DurationAndExcerptTimeMsg';
</script>
<script src="@Url.Content("/GCS/Scripts/Custom/MasterResources.js")" type="text/javascript"> </script>
<link href="@Url.Content("/GCS/Content/SubPages/resources.min.css")" rel="stylesheet" type="text/css" />

<div id="warningmessageDurationExcerpt" class="error-msg-margin">
</div>

<div id="SearchDialog" style="padding: 0;">
</div>
<div id="ExistingResources" style="display: none;">
</div>
<table style="width: 100%;">
    <tr id="trShowMessageResource" style="display: none;">
        <td align="left" colspan="4">
            <div class="error" style="margin-top: 5px;">
                <span id="spnIsrcResource"
                    style="font-weight: bold;"></span>...  @Html.Label(@ClearanceLayout.AdvResSearchResourcesAlreadyExistForISRCMsg)
            </div>
        </td>
    </tr>
</table>
<div id="ResourceDialog" style="display: none;">
    <table>
        <tr>
            <td>@Html.Hidden("resourceListFromSearchPopUp", "")
                @Html.Hidden("hdnselectedResourceID", "")
                <div style="display: none" id="hdnrowId"></div>
            </td>
        </tr>
    </table>
</div>

<!-- Search Box START HERE -->
<div id="release_expand_collapse" class="sbox-wrap sbox-height sbox_wrapper-margin">
    <div class="floatL sbox-colum1 text-align-left line-height padding-left3px rqt-bold headFont">@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesResourcesLabel </div>
    <div class="floatL sbox-colum3 text-align-right">&nbsp;</div>
    <div class="floatL sbox-colum2 text-align-right">@Html.Hidden("hdnClearanceResourceId", "")
        <ul class="sbox_ul">
            <li>@Html.ActionLink("Expand All", "", null, new { onclick = "return OnExpandAllClick('e');" })</li>
            <li>|</li>
            <li>@Html.ActionLink("Collapse All", "", null, new { onclick = "return OnExpandAllClick('c');" })</li>
        </ul>
    </div>
</div>

<div id="search_by" class="sbox-wrap sbox_grey-background sbox-height1 sbox_wrapper-margin gry-bdr">
    <div class="search_by-column1 floatL text-align-right line-height2 sbox-margin-top1  sbox-pdding-right">
        @UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesSearchLabel
    </div>
    <div class="search_by-column2 floatL text-align-right sbox-margin-top1 sbox-pdding-right">
        @Html.TextBox("txtISRC")
    </div>
    <div class="search_by-column3 floatL text-align-right sbox-margin-top1  ">
        @Html.TextBox("txtResuorceTitle", null, new { @class = "sbox-input2" })
    </div>
    <div class="search_by-column3 floatL text-align-right sbox-margin-top1 ">
        @Html.TextBox("txtArtistName", null, new { @class = "sbox-input2" })
    </div>
    <div class="search_by-column3 floatL text-align-right sbox-margin-top1 " style="*padding-right: 6px">
        @Html.TextBox("txtUPC", null, new { @class = "sbox-input2" })
    </div>
    <div class="search_by-column3 floatL text-align-right sbox-margin-top1 " style="*padding-right: 6px">
        @Html.TextBox("txtR2ProjectID", null, new { @class = "sbox-input2" })
    </div>
    <div class="search_by-column3 floatL text-align-right sbox-margin-top1 " style="display: none;">
        @Html.TextBox("txtReleaseTitle", null, new { @class = "sbox-input2" })
    </div>
    <div class="search_by-column4 floatL text-align-right sbox-margin-top1">
        <input id="btnSearch" class="plbutton" type="button" value="@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesSearchButton" />
    </div>
</div>
<!-- SEARCH BOX ENDS HERE -->

<div id="mainDivResource">
    <div id="NoResultsFound" style="display: none; text-align: center;">No Data available!</div>
    <div id="SearchResourceList">
    </div>

    <div id="tblResource">

        @if (Model.MasterProjectDetails.ClearanceResource == null || Model.MasterProjectDetails.ClearanceResource.Count == 0)
        {
            <p>
                &nbsp;
                @Html.HiddenFor(model => model.TotalRows, new { id = "hdnResourceListCount" })
            </p>
            ;
        }
        else
        {
            for (int i = 0; i < Model.MasterProjectDetails.ClearanceResource.Count; i++)
            {
            <div id="MasterProjectRow @i Hide @Model.MasterProjectDetails.ClearanceResource[i].ReplaceFreeHandFlag">
                <div id="resourceTab">

                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource.Count, new { id = "hdnResourceListCount" })
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].IsMobileResource)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].EarilerReleaseDate)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].GenreId)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].HasSideArtist)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].HasSample)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].PCompanyId)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].PLicensingExtension)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].PYear)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].LabelId)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].R2ResourceCompanyLinkId)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].RightsTypeCode)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].SampleCredit)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].SourceUpc)
                    @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].Rights_TypeId)

                    <div id = "@i"  class="contentPanel sbox_wrapper-margin" style="overflow: hidden; @(Model.MasterProjectDetails.ClearanceResource[i].Rights_TypeId == 3 || Model.MasterProjectDetails.ClearanceResource[i].Rights_TypeId == 5 || Model.MasterProjectDetails.ClearanceResource[i].RightsTypeCode == "NONUMG" || Model.MasterProjectDetails.ClearanceResource[i].RightsTypeCode == "NONEXC" || Model.MasterProjectDetails.ClearanceResource[i].RightsTypeCode == "Non-Exclusive License" || Model.MasterProjectDetails.ClearanceResource[i].RightsTypeCode == "Non-UMG" ? "Border-color:#FF0000; border-style:solid; border-width:1px;" : "")">
                        <div class="headerDv1" style="height: auto; width: 100%;">
                            <table style="margin-top: -4px; width: 99%;" id="headerResorucetable">
                                <tr>
                                    @if (Model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId == 0)
                                    {
                                        <td style="width: 10px; padding-top: 3px;" align="left">
                                            <img class="imgHide" src="@Url.Content("/GCS/Images/project.png")" alt="FreeHand" id ="imgFreeHand" title="Freehand Resource" />
                                        </td>
                                    }
                                    else
                                    {
                                            <td style="width: 16px; padding-top: 3px;" align="left" >
                                                &nbsp;
                                        </td>
                                    }
                                    <td style="width: 40px;">

                                        <h5 class="downArrow" id="Header@(i)">@Html.Label(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesArtistLabel)</h5>
                                    </td>
                                    <td id="Artist @i" style="width: 155px" align="left">
                                        <span>
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].FreeHandResourceStatus, new { id = "hdnR2ApprovedFreeHandResource" + i })
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ReplaceFreeHandFlag, new { id = "hdnreplacefreehandresc" + i })
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ArtistName)
                                            @*<span title ='@Model.MasterProjectDetails.ClearanceResource[i].ArtistName' id="divArtistName@(i)"> @Html.DisplayFor(model => model.MasterProjectDetails.ClearanceResource[i].ArtistName)</span>*@
                                            <span title ='@Model.MasterProjectDetails.ClearanceResource[i].ArtistName' id="divArtistName@(i)">
                                                @{ var ArtistNameSubstring = @substringVal(Model.MasterProjectDetails.ClearanceResource[i].ArtistName, 25); }
                                                @ArtistNameSubstring</span>
                                            @if (Model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId == 0)
                                            {
                                                <input class="plbutton " type="button"  value="Manage Artist" id="BtnManagerArtistFreeHand@(i)" onclick = " OpenArtistSearchPopup(this); " />
                                                <span style="display: none" id="spnartistId@(i)"></span>
                                            }
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ResourceIdToUpdate, new { id = "hdnReplacedResourceClearanceResourceId" + i })@*Added for UC-011A*@
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].IsNewlyAddedAfterSubmit, new { id = i + "hdnIsNewAdded" + Model.MasterProjectDetails.ClearanceResource[i].ClearanceResourceId })@*Added for UC-011A*@
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].IsRouted, new { id = i + "hdnIsRouted" + Model.MasterProjectDetails.ClearanceResource[i].ClearanceResourceId })@*Added for UC-011A*@
                                            <input type="hidden" id="hdnFreehandRowId" value="1" />
                                        </span>
                                    </td>
                                    <td style="display: none">
                                        <span>
                                            @if (Model.MasterProjectDetails.ClearanceResource[i].ArtistInfo != null)
                                            {
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ArtistInfo.Count, new { id = "hdnArtistCount" + i })
                                                for (int k = 0; k < Model.MasterProjectDetails.ClearanceResource[i].ArtistInfo.Count; k++)
                                                {
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ArtistInfo[k].Name, new { id = "hdnArtistName" + i + '_' + k })
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ArtistInfo[k].NameId, new { id = "hdnArtistId" + i + '_' + k })
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ArtistInfo[k].Id, new { id = "hdnArtistTalentId" + i + '_' + k })
                                                }
                                            }
                                            @Html.Hidden("hdnArtist" + @i)
                                            @Html.HiddenFor(model => Model.MasterProjectDetails.ClearanceResource[i].ResourceResubmitReasonComments, new { id = "hdnResourceResubmitReasonComments_" + Model.MasterProjectDetails.ClearanceResource[i].ResourceId })
                                        </span>
                                        <div style="display: none" id="hdnArtistId@(i)"></div>
                                    </td>
                                    <td class="rqt-bold headfontcolor titleLabel">|

                                            @Html.Label(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesTitleLabel)
                                    </td>
                                    <td align="left" id="Title @i" style="width: 160px;">
                                        <span>

                                            @if ((Model.MasterProjectDetails.StatusType == 2 || Model.MasterProjectDetails.StatusType == 5 || Model.MasterProjectDetails.StatusType == 6) && (Model.MasterProjectDetails.ClearanceResource[i].FreeHandResourceStatus == "Y") && (Model.MasterProjectDetails.ClearanceResource[i].ClearanceResourceId == 0))
                                            {
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].Title, new { id = "hdnResourceTitle" + i })
                                                <span title ='@Model.MasterProjectDetails.ClearanceResource[i].Title'>@Html.ActionLink(Model.MasterProjectDetails.ClearanceResource[i].Title, "", null, new { onclick = "return OpenAdvanceResourceSearchandUpdatePopup(" + i + ");", @Href = "#", @id = (Model.MasterProjectDetails.ClearanceResource[i].ResourceId + "titleval"), style = "text-decoration:underline" })   </span>
                                            }

                                            else if (Model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId != 0)
                                            {
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].Title, new { id = "hdnResourceTitle" + i })
                                                <span title ='@Model.MasterProjectDetails.ClearanceResource[i].Title'>@{ Model.MasterProjectDetails.ClearanceResource[i].Title = @substringVal(Model.MasterProjectDetails.ClearanceResource[i].Title, 25); }@Html.DisplayFor(model => model.MasterProjectDetails.ClearanceResource[i].Title)</span>
                                            }

                                            else
                                            {
                                                if ((Model.MasterProjectDetails.StatusType == 2 || Model.MasterProjectDetails.StatusType == 5 || Model.MasterProjectDetails.StatusType == 6) && (Model.MasterProjectDetails.ClearanceResource[i].FreeHandResourceStatus == "Y"))
                                                {
                                                    if ((Model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId == 0) && (Model.MasterProjectDetails.ClearanceResource[i].ClearanceResourceId != 0))
                                                    {
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].Title, new { id = "hdnResourceTitle" + i })
                                                <span title ='@Model.MasterProjectDetails.ClearanceResource[i].Title'>@Html.ActionLink(Model.MasterProjectDetails.ClearanceResource[i].Title, "", null, new { onclick = "return OpenAdvanceResourceSearchandUpdatePopup(" + i + ");", @Href = "#", @id = (Model.MasterProjectDetails.ClearanceResource[i].ResourceId + "titleval"), style = "text-decoration:underline" })</span>
                                                    }
                                                    else if ((Model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId != 0) && (Model.MasterProjectDetails.ClearanceResource[i].ClearanceResourceId == 0))
                                                    {
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].Title, new { id = "hdnResourceTitle" + i })
                                                <span title ='@Model.MasterProjectDetails.ClearanceResource[i].Title'>@Html.ActionLink(Model.MasterProjectDetails.ClearanceResource[i].Title, "", null, new { onclick = "return OpenAdvanceResourceSearchandUpdatePopup(" + i + ");", @Href = "#", @id = (Model.MasterProjectDetails.ClearanceResource[i].ResourceId + "titleval"), style = "text-decoration:underline" })</span>
                                                    }
                                                    else
                                                    {
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].Title, new { id = "hdnResourceTitle" + i })
                                                <span title ='@Model.MasterProjectDetails.ClearanceResource[i].Title'>@Html.TextBoxFor(model => model.MasterProjectDetails.ClearanceResource[i].Title, new { maxlength = 275, onblur = "return setTitleInHidden(" + i + ");" })</span>
                                                    }
                                                }
                                                else
                                                {
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].Title, new { id = "hdnResourceTitle" + i })
                                                <span title ='@Model.MasterProjectDetails.ClearanceResource[i].Title'>@Html.TextBoxFor(model => model.MasterProjectDetails.ClearanceResource[i].Title, new { maxlength = 275, onblur = "return setTitleInHidden(" + i + ");" })</span>
                                                }
                                            }
                                        </span>
                                    </td>
                                    <td class="rqt-bold headfontcolor versionTitleLabel">|

                                            @UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesVersionTitleLabel
                                    </td>
                                    <td align="left" id="VTitle @i" style="width: 160px;">
                                        <span>

                                            @if (Model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId != 0)
                                            {
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].VersionTitle, new { id = "hdnVersionTitle" + i })
                                                <span title ='@Model.MasterProjectDetails.ClearanceResource[i].VersionTitle'>@{ Model.MasterProjectDetails.ClearanceResource[i].VersionTitle = @substringVal(Model.MasterProjectDetails.ClearanceResource[i].VersionTitle, 25); }@Html.DisplayFor(model => model.MasterProjectDetails.ClearanceResource[i].VersionTitle)</span>
                                            }
                                            else
                                            {
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].VersionTitle, new { id = "hdnVersionTitle" + i })
                                                <span title ='@Model.MasterProjectDetails.ClearanceResource[i].VersionTitle'>@Html.TextBoxFor(model => model.MasterProjectDetails.ClearanceResource[i].VersionTitle, new { maxlength = 275, onblur = "return setVersionTitleInHidden(" + i + ");" })</span>
                                            }
                                        </span>
                                    </td>
                                    <td class="rqt-bold headfontcolor isrcLabel">|

                                            @UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesISRCLabel
                                    </td>
                                    <td align="left" id="ISRC @i">
                                        <span>
                                            @Html.DisplayFor(model => model.MasterProjectDetails.ClearanceResource[i].Isrc)
                                            &nbsp;
                                                @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].Isrc, new { id = "hdnIsrc" + i })
                                        </span>
                                    </td>
                                    @if (Model.MasterProjectDetails.StatusType == 1 ||
                                            (Model.MasterProjectDetails.ClearanceResource[i].IsRouted != true && Model.MasterProjectDetails.StatusType != 3 && Model.MasterProjectDetails.StatusType != 4))
                                        {
                                            <td style="text-decoration: underline;" class="rqt-bold headfontcolor" align="right">
                                                @Html.ActionLink(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.ResourceTabRemoveLinkButton, "", null, new { onclick = "return OnDeleteClick(" + i + ");" })
                                            </td>
                                        }
                                        else if (Model.MasterProjectDetails.ClearanceResource[i].ClearanceResourceId == 0 && Model.MasterProjectDetails.StatusType != 1 && Model.MasterProjectDetails.ClearanceResource[i].ResourceIdToUpdate == 0)
                                        {
                                            <td style="text-decoration: underline;">
                                                @Html.ActionLink(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.ResourceTabRemoveLinkButton, "", null, new { onclick = "return OnDeleteClick(" + i + ");" })
                                            </td>
                                        }
                                        else
                                        {
                                            <td style="text-decoration: underline;">
                                                @Html.ActionLink(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.ResourceTabRemoveLinkButton, "", null, new { disabled = "disabled", @class = "disabledRemovelnk" })          
                                            </td>
                                            <td style="text-decoration: underline; color: #fff !important;">
                                                @Html.ActionLink("History", "", null, new { onclick = "return triggerMasterResourceAuditHistory(" + i + ");" }) </td>
                                        }
                                    </tr>
                                </table>
                            </div>
                            <div class="contentDv" id="contentDv@(i)" style="display: block; @(Model.MasterProjectDetails.ClearanceResource[i].RightsType == "NONUMG" || Model.MasterProjectDetails.ClearanceResource[i].RightsType == "NONEXC" || Model.MasterProjectDetails.ClearanceResource[i].RightsType == "Non-Exclusive License" || Model.MasterProjectDetails.ClearanceResource[i].RightsType == "Non-UMG" ? "border-color:#FF0000" : "")">
                                <table class="tblChild" id ="tblChild @i">
                                    <tr class="master-resource-tabl-head">                                                                
                                        <td id="RecType @i">@Html.Label(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesRecordingTypeLabel)
                                        </td>
                                        <td id="ResType @i">@Html.Label(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesResourceTypeLabel)
                                        </td>
                                        <td id="MusType @i">@Html.Label(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesMusicType)
                                        </td>
                                        <td>@Html.Label(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesDurationLabel)
                                        </td>
                                        <td>@Html.Label(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjResourcesExcerptTime)
                                        </td>
                                        <td><span class="madatoryField">@mandatory</span>@Html.Label(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.ReleaseRegSuggestedFeeRadioButton)
                                        </td>
                                        <td>@Html.Label(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesSensitiveExploitationLabel)
                                        </td>
                                        <td>@Html.Label(@UMGI.GRCS.Resx.Resource.Layout.ClearanceLayout.MasterProjectResourcesCommentsLabel)
                                        </td>
                                    </tr>
                                    <tr>                                                                
                                        @if (Model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId == 0)
                                        {
                                            <td align="left" valign="top">@Html.DropDownListFor(model => Model.MasterProjectDetails.ClearanceResource[i].RecordingTypeDesc, new SelectList(Model.RecordingTypeResourceTab, "text", "text", Model.MasterProjectDetails.ClearanceResource[i].RecordingTypeDesc), new { id = "ddlRecordingTypeResourceTab_" + i, style = "width:75px;" })</td>
                                            <td align="left" valign="top">@Html.DropDownListFor(model => Model.MasterProjectDetails.ClearanceResource[i].ResourceTypeDesc, new SelectList(Model.ResourceTypeResourceTab, "text", "text", Model.MasterProjectDetails.ClearanceResource[i].ResourceTypeDesc), new { id = "ddlResourceTypeResourceTab_" + i, style = "width:75px;" })</td>
                                            <td align="left" valign="top">@Html.DropDownListFor(model => Model.MasterProjectDetails.ClearanceResource[i].MusicTypeDesc, new SelectList(Model.MusicTypeResourceTab, "text", "text", Model.MasterProjectDetails.ClearanceResource[i].MusicTypeDesc), new { id = "ddlMusicTypeResourceTab_" + i, style = "width:75px;" })</td>
                                            <td align="left" valign="top">@Html.TextBoxFor(model => model.MasterProjectDetails.ClearanceResource[i].MusicTime, new { style = "width:75px;", onblur = "return ValidateDurationAndExcerpt(this);", title = "Format: HH:MM:SS" })
                                            </td>
                                        }
                                        else
                                        {
                                            <td align="left" valign="top">@Html.DisplayFor(model => model.MasterProjectDetails.ClearanceResource[i].RecordingTypeDesc)@Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].RecordingTypeDesc)
                                            </td>
                                            <td align="left" valign="top">@Html.DisplayFor(model => model.MasterProjectDetails.ClearanceResource[i].ResourceTypeDesc)@Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ResourceTypeDesc)
                                            </td>
                                            <td align="left" valign="top">@Html.DisplayFor(model => model.MasterProjectDetails.ClearanceResource[i].MusicTypeDesc)@Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].MusicTypeDesc)
                                            </td>
                                            <td align="left" valign="top">@Html.DisplayFor(model => model.MasterProjectDetails.ClearanceResource[i].MusicTime)
                                            </td>
                                        }
                                        @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].MusicTime)                                                                
                                        <td align="left" valign="top">@Html.TextBoxFor(model => model.MasterProjectDetails.ClearanceResource[i].ExcerptTime, new { id = "txtExcerptTime" + i, @class = "sbox-input-very-small", onblur = "return ValidateDurationAndExcerpt(this);", title = "Format: HH:MM:SS" })@Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ExcerptTime)
                                        </td>
                                        <td align="left" valign="top">@Html.TextBoxFor(model => model.MasterProjectDetails.ClearanceResource[i].SuggestedFee, new { id = "txtSuggestedFee" + i, @class = "sbox-input-suggest-fee", onkeydown = "return OnlyNumericForSuggestedFee(event, this);", onblur = "return ValidateMoneyFormat(this);" })@Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].SuggestedFee)
                                        </td>
                                        <td align="left" valign="top">@Html.CheckBoxFor(model => model.MasterProjectDetails.ClearanceResource[i].SensitiveExplotation_ClearanceResource, new { id = "chksensivtive" + i, @class = "check" })@Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].SensitiveExplotation_ClearanceResource)
                                        </td>
                                        <td id="hdnFields @i"  valign="top">
                                            @Html.TextAreaFor(model => model.MasterProjectDetails.ClearanceResource[i].Comments, new { id = "txtMRComment" + i, @class = "sbox_txt-width-xsmall", onkeydown = " return TextAreaValidationForMax('#'+this.id);" })
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ArchiveFlag, new { id = "hdnArchiveFlag" + i })
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ClearanceResourceId, new { id = "hdnClearanceResourceId" + i })
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].ResourceId, new { id = "ResourceId" + i })
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId, new { id = "hdnR2ResourceId" + i })
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].HasUMGIConditionChanged , new { id = "HasUMGIConditionChanged" + Model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId })
                                            @Html.HiddenFor(model => model.MasterProjectDetails.ClearanceResource[i].AdminCompanyId)
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="9" >
                                            <div class="resourceleft" id="DVresourceleft@(i + 3)" >
                                                <div class="resource-country-label">
                                                    @if (Model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId == 0)
                                                    {
                                                        @UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.CountriesInclude
                                                    }
                                                    else
                                                    {
                                                        @UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.ReleaseCountriesInclude
                                                    }
                                                </div>
                                                <div id="selectedCountries_@(i + 3)" class="resource-country-val">  </div>
                                            </div>
                                            <div class="resourceright" id="DVresourceRight@(i + 3)" >
                                                <div class="resource-country-label">
                                                    @if (Model.MasterProjectDetails.ClearanceResource[i].R2_ResourceId == 0)
                                                    {
                                                        @UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.CountriesExclude
                                                    }
                                                    else
                                                    {
                                                        @UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.ReleaseCountriesExclude
                                                    }
                                                </div>
                                                <div id="UnselectedCountries_@(i + 3)" class="resource-country-val">   </div> 
                                            </div>
                                            <div class="clearBoth1">
                                                <input type="button" id="btnManageTerritories_@(i + 3)" class="plbutton" value="Manage Territories" onclick=" ParentLoadTerritories(@(i + 3)); " /> 
                                                <input id="hdnterritoryDetailsForSave_@(i + 3)"  type="hidden" class="hdnManageTerriCls"  name ="hdnterritoryDetailsForSave_@(i + 3)"  />
                                                <input id="hdnincludeTerritoryString_@(i + 3)" name="hdnincludeTerritoryString_@(i + 3)" type="hidden" value="" />
                                                <input id="hdnExcludeTerritoryString_@(i + 3)" name="hdnExcludeTerritoryString_@(i + 3)" type="hidden" value="" />
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@if (ViewBag.ProjectTerritories != null)
{
    foreach (int index in ViewBag.ProjectTerritories.Keys)
    {
    <script type="text/javascript">
        var territorycountryList = @Html.Raw(Json.Encode(ViewBag.ProjectTerritories[index]));

        if (territorycountryList != null) {
            if (document.getElementById('hdnterritoryDetailsForSave_' + @Html.Raw(Json.Encode(index))) != null) {
                document.getElementById('hdnterritoryDetailsForSave_' + @Html.Raw(Json.Encode(index))).value = JSON.stringify(@Html.Raw(Json.Encode(ViewBag.ProjectTerritories[index])));
            }
        }
    </script>
    }
}