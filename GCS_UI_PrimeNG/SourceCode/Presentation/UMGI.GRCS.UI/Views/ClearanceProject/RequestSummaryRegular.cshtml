@using UMGI.GRCS.Resx.Resource.Layout
@model UMGI.GRCS.UI.Models.ClearanceProjectModel
<script type="text/javascript">
    var _RequestCount = $('#hdnRequestSummaryListCount').val();
    var _projectStatus = "";
    var _PushToR2NewReleaseExist = "";
    var _RCCAdminAllocateUPC = "";
    var _btnUPCAllocate = "";
    var RequestSummaryNewGridPageSize = '@System.Configuration.ConfigurationManager.AppSettings["RequestSummaryGridPageSize"]';
    var RequestSummaryExistingGridPageSize = RequestSummaryNewGridPageSize;
    $(document).ready(function () {
        _PushToR2NewReleaseExist = '@ViewBag.PushToR2NewReleaseExist';
        _projectStatus = '@ViewBag.ProjectStatus';
        _RCCAdminAllocateUPC = '@ViewBag.RCCAllocateUpc';
        _btnUPCAllocate = false;
    });
</script>
<script src="@Url.Content("/GCS/Scripts/Custom/RequestSummaryRegular.js")" type="text/javascript"> </script>

<style type="text/css">
    .imgBorder {
        border: 0 0 0 0 !important;
        background-color: #ffffff !important;
        vertical-align: middle !important;
        margin-right: 0px !important;
        padding-right: 0px !important;
    }

    #newResourcesList input[type='button'] {
        width: 80px !important;
        margin-top: 5px;
        margin-bottom: 5px;
    }

    #existingResourcesList input[type='button'] {
        width: 80px !important;
        margin-top: 5px;
        margin-bottom: 5px;
    }
</style>

<table style="width: 100%">
    <tr>
        <td>
            <div id="loaderMsg" style="display: none; padding-left: 10px; padding-right: 10px; color: #222 !important; float: left;">
                <h3 style="margin-top: 2px !important;">@ClearanceLayout.ReqSummaryLoadingMsg</h3>
            </div>
            <div style="float: left;">
                <h3 id="errorMessageDiv" style="padding-left: 10px; padding-right: 10px; color: #222 !important; margin-top: 2px !important;"></h3>
            </div>
            <div style="padding-right: 10px;" id="refreshBtnDiv">
                <input type="button" class="plbutton" id="refreshBtn" value="Refresh" />
            </div>
            <div style="clear: both;"></div>
        </td>
    </tr>
</table>

<div id="divSearchRequestSummaryNewPaging" style="display: none; float: right; margin-right: 15px; margin-top: 5px;">
    <label>@UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.ShowDropDown&nbsp;</label>
    <select id='ddlSearchRequestSummaryNewPaging'>
        <option>25</option>
        <option>50</option>
        <option>100</option>
        <option>150</option>
    </select>&nbsp;&nbsp;
               <label>@UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.itemsperpage</label>
</div>
<div style="clear: both;"></div>
<div style="margin-left: 5px; margin-top: 5px; width: 98.5%; display: none; overflow-x: auto !important;" id="newResourcesList"></div>

<div id="divSearchRequestSummaryExistingPaging" style="display: none; margin-top: 5px;">

    <div style="float: left; margin-left: 10px;">
        <label style="font-size: small; font-family: Arial; line-height: 30px;"><b>Resources of Existing Release</b></label>
    </div>
    <div style="float: right; margin-right: 15px;">
        <label>@UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.ShowDropDown&nbsp;</label>
        <select id='ddlSearchRequestSummaryExistingPaging'>
            <option>25</option>
            <option>50</option>
            <option>100</option>
            <option>150</option>
        </select>&nbsp;&nbsp;
               <label>@UMGI.GRCS.Resx.Resource.UIResources.ClearenceResource.itemsperpage</label>
    </div>
</div>
<div style="clear: both;"></div>

<div style="margin-left: 5px; width: 98.5%; display: none; overflow-x: auto !important;" id="existingResourcesList"></div>

<div>
    <table id="tblRequestInfoSummary" width="100%">
        @Html.Hidden("hdnProjWithNoResources")
        @if (Model.RegularProjectDetails.RequestInfoList == null)
        {
            <tr>
                <td>&nbsp;
                </td>
            </tr>
        }
        else
        {
            @Html.Hidden("hdnActionRequestId")
            @Html.HiddenFor(model => model.RegularProjectDetails.RequestInfoList.Count, new { id = "hdnRequestSummaryListCount" })
            @Html.HiddenFor(model => model.RegularProjectDetails.RequestInfoList.Where(stat => stat.ApprovalStatusId == 5 || stat.ApprovalStatusId == 7 || stat.ApprovalStatusId == 10).ToList().Count, new { id = "hdnRSCancelledRejectedResourceCount" })
        }

        <tr>
            <td></td>
        </tr>
        <tr>
            <td></td>
        </tr>
    </table>
</div>

<script type="text/javascript">

    //Routing message variables start
    var RoutingMessageWhenNotReachedRouting = '@ClearanceLayout.RoutingMessageWhenNotReachedRouting';
    var RoutingMessageWhenReachedRouting = '@ClearanceLayout.RoutingMessageWhenReachedRouting';
    var RoutingMessageWhenRoutingIsInProgress = '@ClearanceLayout.RoutingMessageWhenRoutingIsInProgress';
    var RoutingMessageWhenErrorIsInRouting = '@ClearanceLayout.RoutingMessageWhenErrorIsInRouting';
    var RoutingMessageWhenReleaseWithoutTracksSubmitted = 'No resources submitted';

    if (LoadTemplate != "1") {
        if ($('#FlagReleaseNewOrExisting').val() == "New") {
            LoadReleaseNewTabSynchronously();
            LoadResourceRegularTabSynchronously();
        } else if ($('#FlagReleaseNewOrExisting').val() == "Exist") {
            LoadExistingReleaseTabSynchronously();
        }
    }
    if ($("#FlagReleaseNewOrExisting").val() == 'New' && $('#hdnRegularProjectStatusId').val() != 1) { // case for new release
        newResources();
    }
    if ($('#hdnRegularProjectStatusId').val() != 1) {
        loadExisting();
    }
</script>

@if (Model.ReadOnlyMode == 1)
{
    <script type="text/javascript">
        var isDisable = "Y";
    </script>
}
else
{
    <script type="text/javascript">

        //Routing message variables end

        var RCCAdminAllocateUPC = '@ViewBag.RCCAllocateUpc';

        if (RCCAdminAllocateUPC != null && RCCAdminAllocateUPC == 'True') {
            var isDisable = "Y";
        } else {
            var isDisable = "N";
        }
    </script>
}