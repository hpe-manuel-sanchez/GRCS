@model UMGI.GRCS.UI.Models.Report.ActiveRosterModel
@using UMGI.GRCS.Resx.Resource.UIResources;
@using UMGI.GRCS.BusinessEntities.Entities.ReportEntities;
@using UMGI.GRCS.UI.Extensions
@using Syncfusion.Core;
@{
    ViewBag.Title = @ReportResource.ActiveRoster;  
}
@section scripts{
    <link href="@Url.Content("/GCS/Scripts/jtable/themes/standard/blue/jtable_blue.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("/GCS/Content/SubPages/ActiveRosterReport.css")"  rel="stylesheet" type="text/css" />
    <link href="@Url.Content("/GCS/Content/themes/base/jquery-ui-1.8.21.custom.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("/GCS/Scripts/ColumnFilter/jquery.columnfilters.js")" type="text/javascript"></script>
    <script src="@Url.Content("/GCS/Scripts/Custom/ActiveRosterReport.js")" type="text/javascript"></script>    
}

@using (Html.BeginForm("ActiveRoster", "Report", FormMethod.Post, new { Id = "ActiveRoster" }))
{  
  
    <div class="backgroundForHeader"> 
        <div id="search" > 
            <div class="report_parameter_header">
                <a href="#" class="down">@ReportResource.ReportParameters</a>
            </div>
        </div>
        <div class="report_parameter_panel_Without_b_padding">
            <div class="floatL">
                <div class="floatL countryCont">
                    <span id="countryLabel">@ReportResource.ClearanceAdmin<br />@ReportResource.Company</span>
                </div>
                <div class="floatL">
                    <div id="AdminCompanyNames"></div>
                    @Html.HiddenFor(model => model.ClearanceCompanyId, new { @id = "AdminCompany" })
                    @Html.HiddenFor(model => model.ClearanceCompanyName, new { @id = "CompanyNames" })
                    @Html.HiddenFor(model => model.ExportType, new { @id = "ExportType" })
                </div>
                <div class="clear">
                </div>
                <div class="editSelectIconParent">
                    <div class="editSelectIcon">&nbsp;</div>
                    <a href="" id="SelectRemoveCompany" class="alignRight hyperlink">
                    @ReportResource.SelectRemoveCompany</a> 
                    
                </div>
            </div>
            <div class="btnHolder">
                <div class="primbutton_left">
                </div>
                <input type="button" id="btnGenerateReport" name="btnGenerateReport" value="Generate Report"
                    class="primbutton floatL" />@Html.Hidden("generateReport")
                <div class="primbutton_right">
                </div>
                <div class="secbutton_left">
                </div>
                <input type="reset" id="btnreset" value="Reset" class="secbutton floatL" />
                <div class="secbutton_right">
                </div>
                @*@Html.HiddenFor(model => model.recordCount, new { id = "recordCount" })*@
                @Html.HiddenFor(model => model.SortField, new { id = "SortField" })
                @Html.HiddenFor(model => model.IsAscending, new { id = "IsAscending" })
            </div>
            <div class="clear">
            </div>
        </div>
    </div>
    <div class="ReportTemplates">
        <div id="activeRosterTableHeader">
            <div class="floatR">
                <a class="pdfExport" onclick="ExportPDF()"><span class="expPdfTxt">@ReportResource.ExportReport</span></a>
                <a class="excelExport" onclick="ExportExcel()">@ReportResource.ExportReport</a>
            </div>
                <div class="clear">
            </div> 
        </div>
        <!-- Active Roster Report Header ends -->
         <div class="clear">
        </div>
        <div class="roasterTab">
            @(Html.Syncfusion().Grid<ActiveRoster>("TblActiveRoster")
        .Caption("Active Roster")
        .PageSettings(page =>
        {
            page.PageSize(25);
            page.PageCount(5);
            page.PagerPosition(Position.TopRight);
            page.PagerStyle(PagerStyle.DefaultAndAdvanced);
        })
        .EnableSorting()
        .AllowResizing(true)
        .AllowDragAndDrop(true)
        .EnableScrolling()
        .EnablePaging()
        .EnableAlternateRowStyling()
        .EnableRowHover(true)
        .ActionMode(ActionMode.JSON)
//.TotalRecordCount(Convert.ToInt32(ViewData["totaldata"]))
        .CustomCss("Syncfusion-Grid-Greenish")
        .AllowAutoWrap(true)
        .EnableOnDemand(true)
        .ClientSideEvents(evt => evt.OnLoad("GridLoad"))
        .ClientSideEvents(evt => evt.OnActionBegin("GridBegin"))
        .ClientSideEvents(evt => evt.OnActionSuccess("ActionSuccess"))
        .ClientSideEvents(events => events.QueryCellInfo("ImageForLinkedRepertoire"))
        .Column(cols =>
        {
            cols.Add(c => c.Artist).HeaderText(@ReportResource.Artist);
            cols.Add(c => c.ContractingParties).HeaderText(@ReportResource.ContractingParties);
            cols.Add(c => c.CLEARANCECO).HeaderText(@ReportResource.ClearanceCo);
            cols.Add(c => c.UMGSigningCompany).HeaderText(@ReportResource.UMGSigningCo);
            cols.Add(c => c.CommencementDate).Width(150).HeaderText(@ReportResource.ContractCommenceDate).Format(Html.GetRequestDateFormat());
            cols.Add(c => c.TerritorialRight).HeaderText(@ReportResource.TerritorialRights);
            cols.Add(c => c.LinkedRepertoire).Width(80).HeaderText(@ReportResource.LinkedRepertoire).TextAlign(TextAlignment.Center);
        })

 )      
        </div>
    </div>
      
}
