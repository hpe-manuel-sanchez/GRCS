//Initialized Variable for Messages from Resource file
var sortType = "";
var sortColumn = "";
var secondaryExploitationTabMessages, modelData, trCount, columnId;
var rowISRC, rowArtist, rowTitle, rowVersion,rowIdToAppendData;
var secondarygridId = $('#hdnGridId').val();
var rowId;


$(document).ready(function () {
    $('.sf-toolbar').hide();
    secondaryExploitationTabMessages = window.rightsReviewWorkQueueMessages;
    $(window).resize(function () {
        secondaryGridScroll();
    });
    resizeAccordion();

    $('.RefreshPager').click(function () {
        $("#secondarychkAll").removeAttr('checked');
        HideWarningSuccess();
    });

});

/*On Secondary exploitation cell Edit */
function onSecondaryExplotationCellEdit(sender, args) {
    if ($("#divSecondaryPopupReview").is(':visible')) {
        args.cancel = true;
    }
    else {
        columnId = args.colObj.Name;
        if (args.colObj.Name == "IsMACRestrictedLnr" || args.colObj.Name == "IsSyncronizationRestrictedLnr" || args.colObj.Name == "IsMidPriceRestrictedLnr" || args.colObj.Name == "IsBudgetRestrictedLnr" || args.colObj.Name == "IsPremiumRestrictedLnr" || args.colObj.Name == "IsSampleRestrictedLnr" || args.colObj.Name == "IsRoyaltyBreakRestrictedLnr"
    || args.colObj.Name == "IsClubOrderRestrictedLnr" || args.colObj.Name == "IsRemixestrictedLnr" || args.colObj.Name == "IsGreatestHitsRestrictedLnr" || args.colObj.Name == "IsKioskRestrictedLnr") {
            var data = $find(sender._gridID).jsonModeMgr.get_dataSource();
            rowId = "";
            rowId = sender._currentDataItem.RowId;
            rowIdToAppendData = parseInt(rowId);
            // Added for showing this in the popup tab
            rowISRC = sender._currentDataItem.ISRCId;
            rowArtist = sender._currentDataItem.Artist;
            rowTitle = sender._currentDataItem.Title;
            rowVersion = sender._currentDataItem.VersionTitle;
            var dataWithOutDate = removeDateTime(data[rowId].Exploitations);
            getSecondaryPopupData(dataWithOutDate);
        }

        if (args.colObj.Name == "UPCId") {
            var upcId = args.value;
            if (upcId != "" && upcId != null) {
                $('#loadingDiv').show();
                setTimeout(function () {
                    createCustomReleaseTab("1,,,,,,,,,,,," + upcId + ",true,true");
                }, 10);
            }
            $('#' + $('#hdnGridId').val()).mousedown();
        }

        if (args.colObj.Name == "ISRCId") {
            var isrcId = args.value;
            if (isrcId != "" && isrcId != null) {
                $('#loadingDiv').show();
                setTimeout(function () {
                    createCustomReleaseTab("1,,,,,,,,,,," + isrcId + ",,true,true");
                }, 10);
            }
            $('#' + $('#hdnGridId').val()).mousedown();
        }

        if (args.colObj.Name == "ReviewStatusLnr") {
            $(sender._editTD).removeClass('reviewFlagBlue');
            $(sender._editTD).removeClass('reviewFlagOrange');
            $(sender._editTD).removeClass('reviewFlagGreen');
            $(sender._editTD).removeClass('reviewFlagBlueUpdated');
            $(sender._editTD).removeClass('reviewFlagOrangeUpdated');
            $(sender._editTD).removeClass('reviewFlagGreenUpdated');

            var num = sender._gridID.replace(/[^0-9]/g, '');
            if (window.location.search != "") {
                num = '10';
            }
            var cellValue = $(sender._editTD).parent().find('td.flagStatus').html(); //$(sender._editTD).parent().find('td')[47].innerHTML;
            if (cellValue == "1") {
                $("#ReviewStatusLnr option[value='FinalForReview']").remove();
                $("#ReviewStatusLnr option[value='NewForReview']").text("New For Review");
            }
            else if (cellValue == "2") {
                $("#ReviewStatusLnr option[value='NewForReview']").remove();
                $("#ReviewStatusLnr option[value='FinalForReview']").text("Final For Review");
            }
            else if (cellValue == "3") {
                if (num == '' || num == undefined) {
                    $("#ReviewStatusLnr option[value='NewForReview']").remove();
                    $("#ReviewStatusLnr option[value='FinalForReview']").remove();
                }
                else {
                    $("#ReviewStatusLnr option[value='NewForReview']").remove();
                    $("#ReviewStatusLnr option[value='FinalForReview']").text("Final For Review");
                }
            }
        }
    }
}

function removeDateTime(data) {
    for (var i = 0; i < data.length; i++) {
        delete data[i].RequestDateTime;
        if (i == data.length - 1) {
            return data;
        }
    }
}

function onSecondaryExploitationGridSaveError(sender, args) {
    var totCount = sender.get_TotalRecordsCount();
    if (args.XMLHttpRequest.responseText != null) {
        var errorVal = args.XMLHttpRequest.responseText.split("<title>")[1].split("</title>")[0];
        //ShowWarning(errorVal);
        displayDialog("Error", "&nbsp;&nbsp;&nbsp;Error Retreiving WorkQueue Data");
    }
    secondaryGridScroll();
    $("#" + sender._ID).find(".MsgBar").html("<div class='alignLeft' style='margin: 3px 15px 0 -2px;'>Search Results (" + totCount + ")</div><div class='bulkEditBtnContainer'><div class='primbutton_left'></div><input id='btnSecondaryBulkEdit' type='button' style='float: left;' value='Bulk Edit' onClick = 'callSecondaryBulkEditButton()' class='primbutton'><div class='primbutton_right'></div></div>");
    $('#loaderPanel').hide();
    $('#loadingDiv').hide();

}

function onSecondaryExploitationCellSave(sender, args) {

    if ($("#divSecondaryPopupReview").is(':visible')) {
        args.cancel = true;
    }
    else {
        if (args.colObj.Name == "IsMACRestrictedLnr" || args.colObj.Name == "IsSyncronizationRestrictedLnr" || args.colObj.Name == "IsMidPriceRestrictedLnr" || args.colObj.Name == "IsBudgetRestrictedLnr" || args.colObj.Name == "IsPremiumRestrictedLnr" || args.colObj.Name == "IsSampleRestrictedLnr" || args.colObj.Name == "IsRoyaltyBreakRestrictedLnr"
    || args.colObj.Name == "IsClubOrderRestrictedLnr" || args.colObj.Name == "IsRemixestrictedLnr" || args.colObj.Name == "IsGreatestHitsRestrictedLnr" || args.colObj.Name == "IsKioskRestrictedLnr") {

            if (multi_Artist_Compilations != "No Change Required" && synchronisation != "No Change Required" && midPrice != "No Change Required" && budget != "No Change Required" && premiums != "No Change Required" &&
             sampleUse != "No Change Required" && advertRoyaltyBreaks != "No Change Required" && clubMailOrder != "No Change Required" && remixEdit != "No Change Required" && greatestHits != "No Change Required") {
            args.value = setValueOfSenderCell(args.colObj.Name);

            sender._currentDataItem.IsMACRestrictedLnr = multi_Artist_Compilations;
            sender._currentDataItem.IsSyncronizationRestrictedLnr = synchronisation;
            sender._currentDataItem.IsMidPriceRestrictedLnr = midPrice;
            sender._currentDataItem.IsBudgetRestrictedLnr = budget;
            sender._currentDataItem.IsPremiumRestrictedLnr = premiums;
            sender._currentDataItem.IsSampleRestrictedLnr = sampleUse;
            sender._currentDataItem.IsRoyaltyBreakRestrictedLnr = advertRoyaltyBreaks;
            sender._currentDataItem.IsClubOrderRestrictedLnr = clubMailOrder;
            sender._currentDataItem.IsRemixestrictedLnr = remixEdit;
            sender._currentDataItem.IsGreatestHitsRestrictedLnr = greatestHits;
            sender._currentDataItem.IsKioskRestrictedLnr = kiosk;
            sender._currentDataItem.JsonStringDatas = jsonObject;
            setTimeout(function () { resetAllData(); }, 1000);
            }
        }
    }
    if (args.value == undefined || args.value == "") {
        args.value = args.oldValue;
    }

    if (args.colObj.Name == "UPCId") {
        args.value = args.oldValue;
    }

    if (args.colObj.Name == "ISRCId") {
        args.value = args.oldValue;
    }

    if (args.colObj.Name == "ReviewStatusLnr") {
        if (args.value != args.oldValue) {
            if (args.value == "Final") {
                sender._editTD = setTooltipWithImage(sender._editTD);
                $(sender._editTD).html("");
                var index = $(sender._editTD).index();
                var parentTr = $(sender._editTD).parent();
                setTimeout(function () {
                    $($(parentTr).find('td')[index]).html('');
                    $($(parentTr).find('td')[index]).addClass('reviewFlagGreenUpdated');
                }, 100);
            }
            else if (args.value == "NewForReview") {
                sender._editTD = setTooltipWithImage(sender._editTD);
                $(sender._editTD).html("");
                var index = $(sender._editTD).index();
                var parentTr = $(sender._editTD).parent();
                setTimeout(function () {
                    $($(parentTr).find('td')[index]).html('');
                    $($(parentTr).find('td')[index]).addClass('reviewFlagBlueUpdated');
                }, 100);
            }
            else if (args.value == "FinalForReview") {
                sender._editTD = setTooltipWithImage(sender._editTD);
                $(sender._editTD).html("");
                var index = $(sender._editTD).index();
                var parentTr = $(sender._editTD).parent();
                setTimeout(function () {
                    $($(parentTr).find('td')[index]).html('');
                    $($(parentTr).find('td')[index]).addClass('reviewFlagOrangeUpdated');
                }, 100);
            }
        }
        else {
            if (args.value == "NewForReview") {
                sender._editTD = setTooltipWithImage(sender._editTD);
                $(sender._editTD).html("");
                var index = $(sender._editTD).index();
                var parentTr = $(sender._editTD).parent();
                setTimeout(function () {
                    $($(parentTr).find('td')[index]).html('');
                    $($(parentTr).find('td')[index]).addClass('reviewFlagBlue');
                }, 100);
            }
            else if (args.value == "FinalForReview") {
                sender._editTD = setTooltipWithImage(sender._editTD);
                $(sender._editTD).html("");
                var index = $(sender._editTD).index();
                var parentTr = $(sender._editTD).parent();
                setTimeout(function () {
                    $($(parentTr).find('td')[index]).html('');
                    $($(parentTr).find('td')[index]).addClass('reviewFlagOrange');
                }, 100);
            }
            else if (args.value == "Final") {
                sender._editTD = setTooltipWithImage(sender._editTD);
                $(sender._editTD).html("");
                var index = $(sender._editTD).index();
                var parentTr = $(sender._editTD).parent();
                setTimeout(function () {
                    $($(parentTr).find('td')[index]).html('');
                    $($(parentTr).find('td')[index]).addClass('reviewFlagGreen');
                }, 100);
            }
        }
    }
}

/*Resets all data once saved*/
function resetAllData() {
    window.multi_Artist_Compilations = "";
    window.synchronisation = "";
    window.midPrice = "";
    window.budget = "";
    window.premiums = "";
    window.sampleUse = "";
    window.advertRoyaltyBreaks = "";
    window.clubMailOrder = "";
    window.remixEdit = "";
    window.greatestHits = "";
    window.kiosk = "";
    window.rightsMulti_Artist_Compilations = "";
    window.rightsSynchronisation = "";
    window.rightsMidPrice = "";
    window.rightsAdvert_Royalty_Breaks = "";
    window.rightsBudget = "";
    window.rightsPremiums = "";
    window.rightssample_Use = "";
    window.rightsClub_Mail_Order = "";
    window.rightsRemix_Edit = "";
    window.rightsGreatest_Hits = "";
}

/*Set the sender cell value on save*/
function setValueOfSenderCell(colName) {
    switch (colName) {
        case "IsMACRestrictedLnr":
            return multi_Artist_Compilations;
        case "IsSyncronizationRestrictedLnr":
            return synchronisation;
        case "IsMidPriceRestrictedLnr":
            return midPrice;
        case "IsBudgetRestrictedLnr":
            return budget;
        case "IsPremiumRestrictedLnr":
            return premiums;
        case "IsSampleRestrictedLnr":
            return sampleUse;
        case "IsRoyaltyBreakRestrictedLnr":
            return advertRoyaltyBreaks;
        case "IsClubOrderRestrictedLnr":
            return clubMailOrder;
        case "IsRemixestrictedLnr":
            return remixEdit;
        case "IsGreatestHitsRestrictedLnr":
            return greatestHits;
        case "IsKioskRestrictedLnr":
            return kiosk;
    }
}



/*Secondary grid action begin*/
function onSecondaryExploitationActionBegin(events, args) {
   // $('#loadingDiv').hide();
    //var num = events._ID.slice(-1);
    $("[id*='waiting_WaitingPopup']").hide();
    var num = events._ID.replace(/[^0-9]/g, '');
    var tabIndex = $("#" + "hiddenCusomTabIndex" + num).val();
    $('#hdnGridId').val(events._ID);
    $("#" + events._ID + " .MsgBar").empty();
    $("#" + events._ID + " .MsgBar").text("Search Results ( )");

    if (num == '' || num == undefined) {
        args.data["filterParams"] = JSON.stringify(filterParams);
        if (args.getRequestType() == "sorting") {
            if (args.data["SortDescriptors[0].ColumnName"] == "ISRCId" || args.data["SortDescriptors[0].ColumnName"] == "UPCId") {
                sortColumn = args.data["SortDescriptors[0].ColumnName"];
                if (args.data["SortDescriptors[0].SortDirection"] == "Ascending") {
                    args.data["SortDescriptors[0].SortDirection"] = "Descending";
                    sortType = "DESC";
                } else if (args.data["SortDescriptors[0].SortDirection"] == "Descending") {
                    args.data["SortDescriptors[0].SortDirection"] = "Ascending";
                    sortType = "ASC";
                }
            } else {
                sortType = "Normal";
                sortColumn = "Normal";
            }
        }
    } else {
        args.data["filterParams"] = JSON.stringify(window.tabCustomParams[num - 2]);
        args.data["tabIndex"] = tabIndex;

    }
}
/* On secondary exploitation Load */
function onSecondaryExploitationLoad(sender, args) {
    $('#' + sender._ID + '_toolbar').hide();
    $("#" + sender._ID + " .manualPagerLabel:eq(1)").empty();
    $("#" + sender._ID + " .manualPagerLabel:eq(1)").text("Show item per page");
    // var totCount = sender.get_TotalRecordsCount();
    // $("#secondaryExp .MsgBar").text("Search Results (" + totCount + ")");
    var chk = $("#" + sender._ID + " .GridHeader").find("th.HeaderCell .HeaderCellDiv")[1];
    $(chk).append("<input type=\"Checkbox\" id=\"secondarychkAll\" onclick=\"secondaryCheckBoxAllClick(event)\"> All");
    $find(sender._ID).get_LocalizedStrings().bulkeditalert = "You have unsaved changes pending. If you refresh the workqueue you will lose these changes. Are you sure you want to proceed?";
    secondaryStrip(sender._ID);
}

/*On Grid Success(Action Success Of syncFusion)*/
function onSecondaryExploitationGridSuccess(sender, args) {
    $('[id*=chkAll]').removeAttr('checked');
    $('[id*=chkAll]').removeAttr("indeterminate");
    syncGridPagerSearchWQ(sender._ID);
    if (args.RequestType == "Save") {
        ShowSuccess(secondaryExploitationTabMessages.saveSuccess);
        //displayDialog("Success", "&nbsp;&nbsp;&nbsp;" + window.secondaryExploitationTabMessages.saveSuccess);
        secondaryGridScroll();
        customMenu();
    }
    var totCount = sender.get_TotalRecordsCount();
    //  $("#secondaryExp .MsgBar").text("Search Results (" + totCount + ")");
    $("#" + sender._ID).find(".MsgBar").html("<div class='alignLeft' style='margin: 3px 15px 0 -2px;'>Search Results (" + totCount + ")</div><div class='bulkEditBtnContainer'><div class='primbutton_left'></div><input id='btnSecondaryBulkEdit' type='button' onClick =' callSecondaryBulkEditButton()' style='float: left;' value='Bulk Edit' class='primbutton'><div class='primbutton_right'></div></div>");
    if (args.RequestType == "sorting") {
        if (sortType == "DESC") {
            if (sortColumn == "ISRCId") {
                sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[5].childNodes[0].innerHTML = "ISRC<div class='resourceInfoHeader' id='" + sender._ID + "_IsrcTooltip' title='Click on ISRC to create a release WQ for all UPCs containing that ISRC'></div><span class='Ascending'></span>";
                sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[6].childNodes[0].innerHTML = "UPC<div class='resourceInfoHeader' id='" + sender._ID + "_UpcTooltip'  title='Click on UPC to create a release WQ for that UPC.'></div>";
            } else if (sortColumn == "UPCId") {
                sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[6].childNodes[0].innerHTML = "UPC<div class='resourceInfoHeader' id='" + sender._ID + "_UpcTooltip' title='Click on UPC to create a release WQ for that UPC.'></div><span class='Ascending'></span>";
                sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[5].childNodes[0].innerHTML = "ISRC<div class='resourceInfoHeader' id='" + sender._ID + "_IsrcTooltip' title='Click on ISRC to create a release WQ for all UPCs containing that ISRC'></div>";
            }
        }
        else if (sortType == "ASC") {
            if (sortColumn == "ISRCId") {
                sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[5].childNodes[0].innerHTML = "ISRC<div class='resourceInfoHeader' id='" + sender._ID + "_IsrcTooltip' title='Click on ISRC to create a release WQ for all UPCs containing that ISRC'></div><span class='Descending'></span>";
                sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[6].childNodes[0].innerHTML = "UPC<div class='resourceInfoHeader' id='" + sender._ID + "_UpcTooltip' title='Click on UPC to create a release WQ for that UPC.'></div>";
            }
            else if (sortColumn == "UPCId") {
                sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[5].childNodes[0].innerHTML = "ISRC<div class='resourceInfoHeader' id='" + sender._ID + "_IsrcTooltip' title='Click on ISRC to create a release WQ for all UPCs containing that ISRC'></div>";
                sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[6].childNodes[0].innerHTML = "UPC<div class='resourceInfoHeader' id='" + sender._ID + "_UpcTooltip' title='Click on UPC to create a release WQ for that UPC.'></div><span class='Descending'></span>";
            }
        }
        else {
            sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[6].childNodes[0].innerHTML = "UPC<div class='resourceInfoHeader' id='" + sender._ID + "_UpcTooltip' title='Click on UPC to create a release WQ for that UPC.'></div>";
            sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[5].childNodes[0].innerHTML = "ISRC<div class='resourceInfoHeader' id='" + sender._ID + "_IsrcTooltip' title='Click on ISRC to create a release WQ for all UPCs containing that ISRC'></div>";
        }
    }
    else {
        sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[6].childNodes[0].innerHTML = "UPC<div class='resourceInfoHeader' id='" + sender._ID + "_UpcTooltip' title='Click on UPC to create a release WQ for that UPC.'></div>";
        sender.get_HeaderTable().childNodes[1].childNodes[0].childNodes[5].childNodes[0].innerHTML = "ISRC<div class='resourceInfoHeader' id='" + sender._ID + "_IsrcTooltip' title='Click on ISRC to create a release WQ for all UPCs containing that ISRC'></div>";
    }

    setSyncGridToolTip("#" + secondarygridId + "_Table");
    secondaryGridScroll();
    secondaryCheckList();
    $("#" + sender._ID + "_UpcTooltip").tooltip();
    $("#" + sender._ID + "_IsrcTooltip").tooltip();
    ScrollBarMovement(sender._ID);
    var num = sender._ID.replace(/[^0-9]/g, '');
    if (num != '' && num != undefined) {
        $find(sender._ID)._MvcTable.get_parentTable().hideColumnByIndex(16); // UC 19 - Column hiding  
    }

    setImageForSecondaryExploitation($('#' + sender._ID + "_Table").find('tr')); 
}

/*To Get Secondar Popup Data*/
function getSecondaryPopupData(data) {
    $.post("/GCS/RightsReviewWorkQueue/SecondaryExploitationPopup", { resourceSecondaryRights: JSON.stringify(data) }, function (content) {
        openSecondarPopup(content);
    });
}

/* On Grid Image load */
    //sets the image and validation in action succes of the grid
function setImageForSecondaryExploitation(gridRows) {
    if ($(gridRows[0]).find('td.EmptyCell').length == 0) {
        for (var row = 0; row < gridRows.length; row++) {

            var htmlTextReviewStatusLnr = null;

            var tdUpcId = $(gridRows[row]).find('td.tdUPCId');
            var tdIsrcId = $(gridRows[row]).find('td.tdISRCId');
            if ($(tdUpcId).html() == null || $(tdUpcId).html() == "") {
                $(tdUpcId).html("");
                disableEditingWithOutClass(tdUpcId);
            }
            if ($(tdIsrcId).html() == null || $(tdIsrcId).html() == "") {
                $(tdIsrcId).html("");
                disableEditingWithOutClass(tdIsrcId);
            }

            var resourceTypeEmnt = $(gridRows[row]).find('td.tdResourceType');
            var errorElmt = $(gridRows[row]).find('td.tdError');
            var reviewStatusElmt = $(gridRows[row]).find('td.tdReviewStatusLnr');
            var linkedContractElmt = $(gridRows[row]).find('td.tdLinkedContract');
            var territorialDataElmt = $(gridRows[row]).find('td.tdTerritoryRightsLnr');
            var sampleDescriptionElmt = $(gridRows[row]).find('td.tdSampleDescription');
            var rightsTypeLnrElmt = $(gridRows[row]).find('td.tdRightsTypeLnr');
            var sampleExistsLnrElmt = $(gridRows[row]).find('td.tdSampleExistsLnr');
            var lostRightsLinear = $(gridRows[row]).find('td.tdLostRightsLnr').text();
            var reviewStatusPermission = $(gridRows[row]).find('td.tdReviewStatusPermitted').text();
            var tdIsLostRightsLnr = $(gridRows[row]).find('td.tdIsLostRights').text();
            var rightsEditPermission = $(gridRows[row]).find('td.tdRightsEditPermitted').text();
            var linkedTooltip = $(gridRows[row]).find('td.tdLinkedTooltip').text();
            var rightsTypeLnr = rightsTypeLnrElmt.text();
            var resourceType = resourceTypeEmnt.text();
            var error = errorElmt.text();
            var reviewStatus = reviewStatusElmt.text();
            var linkedContract = linkedContractElmt.text();
            var territorialData = territorialDataElmt.text();
            var sampleDescription = sampleDescriptionElmt.text();



            if (reviewStatusPermission == "N") {
                disableEditing(reviewStatusElmt);
            }

            if (rightsEditPermission == "N") {
                disableEditing($(gridRows[row]).find('td.tdIsMACRestrictedLnr'));
                disableEditing($(gridRows[row]).find('td.tdIsSyncronizationRestrictedLnr'));
                disableEditing($(gridRows[row]).find('td.tdIsMidPriceRestrictedLnr'));
                disableEditing($(gridRows[row]).find('td.tdIsBudgetRestrictedLnr'));
                disableEditing($(gridRows[row]).find('td.tdIsPremiumRestrictedLnr'));
                disableEditing($(gridRows[row]).find('td.tdIsSampleRestrictedLnr'));
                disableEditing($(gridRows[row]).find('td.tdIsRoyaltyBreakRestrictedLnr'));
                disableEditing($(gridRows[row]).find('td.tdIsClubOrderRestrictedLnr'));
                disableEditing($(gridRows[row]).find('td.tdIsRemixestrictedLnr'));
                disableEditing($(gridRows[row]).find('td.tdIsGreatestHitsRestrictedLnr'));
            }


            var image = "";
            var tooltipText = "";
            switch (resourceType.trim()) {
                case "1":
                    image = '<div class=\'resourceAudio\'></div>';
                    tooltipText = 'Audio';
                    break;
                case "2":
                    image = '<div class=\'resourceVideo\'></div>';
                    tooltipText = 'Video';
                    break;
                case "3":
                    image = '<div class=\'resourceImage\'></div>';
                    tooltipText = 'Image';
                    break;
                case "4":
                    image = '<div class=\'resourceMerchandise\'></div>';
                    tooltipText = 'Merchandise';
                    break;
                case "5":
                    image = '<div class=\'resourceText\'></div>';
                    tooltipText = 'Text';
                    break;
                case "6":
                    image = '<div class=\'resourceOthers\'></div>';
                    tooltipText = 'Other';
                    break;
            }
            resourceTypeEmnt.html(image);
            if (tooltipText != "") {
                resourceTypeEmnt.attr("title", '~' + tooltipText);
                resourceTypeEmnt.tooltip({ showBody: "~" });
            }

            if (error != "" && error != null) {
                errorElmt.html('<div class=\'errorImageRights\'></div>');
                errorElmt.attr("title", '~' + error);
                errorElmt.tooltip({ showBody: "~" });
            }

            if (linkedContract != "" && linkedContract != null) {
                var htmlText = '';
                image = '';
                switch (linkedContract.trim()) {
                    case "1":
                        image = '<div class=\'rightslinkedContract\'></div>'; //tdLinkedTooltip
                        htmlText = linkedTooltip;
                        break;
                    case "2":
                        image = '<div class=\'rightsSplit\'></div>';
                        htmlText = linkedTooltip;
                        break;
                    case "3":
                        image = '<div class=\'rightsMAC\'></div>';
                        htmlText = "Multi Artist Compilation";
                        break;
                    case "4":
                        image = '<div class=\'rightsSAC\'></div>';
                        htmlText = "Single Artist Release";
                        break;
                }
                linkedContractElmt.html(image);
                if (htmlText != null && image != '') {
                    linkedContractElmt.attr("title", '~' + htmlText);
                    linkedContractElmt.tooltip({ showBody: "~" });
                }
            }
            image = '';
            switch (reviewStatus.trim()) {
                case "NewForReview":
                    htmlTextReviewStatusLnr = "New For Review";
                    if (reviewStatusPermission == "N") {
                        image = '<div class=\'flagBlue\'></div>';
                        reviewStatusElmt.html(image);
                    } else {
                        reviewStatusElmt.html("");
                        reviewStatusElmt.addClass("reviewFlagBlue");
                    }
                    break;
                case "FinalForReview":
                    htmlTextReviewStatusLnr = "Final For Review";
                    if (reviewStatusPermission == "N") {
                        image = '<div class=\'flagOrange\'></div>';
                        reviewStatusElmt.html(image);
                    } else {
                        reviewStatusElmt.html("");
                        reviewStatusElmt.addClass("reviewFlagOrange");
                    }
                    break;
                case "Final":
                    htmlTextReviewStatusLnr = "Final";
                    if (reviewStatusPermission == "N") {
                        image = '<div class=\'flagGreen\'></div>';
                        reviewStatusElmt.html(image);
                    } else {
                        reviewStatusElmt.html("");
                        reviewStatusElmt.addClass("reviewFlagGreen");
                    }
                    break;
            }

            if (htmlTextReviewStatusLnr != null) {
                reviewStatusElmt.attr("title", '~' + htmlTextReviewStatusLnr);
                reviewStatusElmt.tooltip({ showBody: "~" });
            }

            if (territorialData == null || territorialData.trim() == "") {
                territorialDataElmt.addClass("tdglobePlus");
            }
            if (sampleExistsLnrElmt.text() == "Y") {
                if (sampleDescription != "" && sampleDescription != null) {
                    sampleExistsLnrElmt.attr("title", '~' + sampleDescription);
                    sampleExistsLnrElmt.tooltip({ showBody: "~" });
                }
            }
            if (tdIsLostRightsLnr == "True") {
                rightsTypeLnrElmt[0].style.backgroundColor = "#FFBFBF";  // Light Color When Error Show append "FFE9E8";
                // $(args.Element)[0].style.fontWeight = "bold";
            }
        }
    }
}

/*Opens Secondary Exploitation Popup*/
function openSecondarPopup(data) {
    var objReviewSecondaryExploitationPopupDialog = $('<div id="divSecondaryPopupReview"> </div>')
   .html('<p>' + messageCommon.onLoading + '</p>')
    .dialog({
        autoOpen: false,
        modal: true,
        title: 'Edit - Secondary Exploitation',
        show: 'clip',
        hide: 'clip',
        width: 800,
        height: 500,
        //width: getPopupWidth(80, 800),
        // height: getPopupHeight(80, 470, 60),
        // minHeight: 300,
        // minWidth: 750,
        // position: [getXPosition(70, 0), getYPosition(80, 60)],
        resizable: false,
        close: function () {
            $(this).remove();
            $('#' + secondarygridId).mousedown();     // ensures any form variables are reset.
        }
    });
    $('#divSecondaryPopupReview').css('overflow', 'hidden');
    //  Load partial view
    objReviewSecondaryExploitationPopupDialog.html(data);
    objReviewSecondaryExploitationPopupDialog.dialog('open');
}



function getBulkEditSecondaryPopupData() {
    $.post("/GCS/RightsReviewWorkQueue/SecondaryExploitationBulkEdit", function (content) {
        var objBulkEditSecondaryDialog = $('<div class="divobjBulkEditSecondaryPopUp"></div>')
        .html('<p>' + messageCommon.onLoading + '</p>')
        .dialog({
            autoOpen: false,
            modal: true,
            title: 'Bulk Edit - Secondary Exploitation',
            show: 'clip',
            hide: 'clip',
            width: 850,
            height: 500,
            resizable: false,
            close: function () {
                $(this).remove();
                $("#" + secondarygridId).mousedown();
            }
        });
        objBulkEditSecondaryDialog.html(content);
        objBulkEditSecondaryDialog.dialog('open');
    });
}

function callSecondaryBulkEditButton() {
    //Bulk Edit Popup open
    //$('#btnSecondaryBulkEdit').click(function () {
    secondarygridId = $('#hdnGridId').val();
    var bulkEditlength = $find(secondarygridId).get_SelectedRecords().length;
    if (bulkEditlength >= 1) {
        $("#" + secondarygridId + "waiting_WaitingPopup").css({ "display": "block", "top": ($('#' + secondarygridId).height() / 2), "height": $(window).height() });
        getBulkEditSecondaryPopupData();
    } else {
        ShowWarning('Please select Repertoire');
        secondaryGridScroll();
    }
    // });
}


/*Sync Fusion GRid scroll functionality*/
function secondaryGridScroll() {
    secondarygridId = $('#hdnGridId').val();
    if ($('#' + secondarygridId).length > 0) {
        var pagerHgt = $("#" + secondarygridId + " .GridPager").height();
        var headerHgt = $("#" + secondarygridId + " .GridHeader").height();
        var browsHgt;
        if ($.browser.msie)
            browsHgt = 16;
        else
            browsHgt = 25;
        var reduceHgt = pagerHgt + headerHgt + browsHgt;

        var jtableTop = $("#" + secondarygridId).offset().top;
        var topfootPos = $(".footer").offset().top;
        var totRecHeight = $("#" + secondarygridId + "_Table").height() + reduceHgt;
        var tableHeight = topfootPos - jtableTop;
        var gridObj = $find(secondarygridId);
        if (gridObj != null) {
            if (totRecHeight >= tableHeight)
                setSecondaryGridScrollSyncfusionGridHeight(gridObj, tableHeight - reduceHgt);
            else
                setSecondaryGridScrollSyncfusionGridHeight(gridObj, totRecHeight - reduceHgt + 20);
        }
    }
}

function setSecondaryGridScrollSyncfusionGridHeight(gridObj, height) {
    gridObj.set_GridHeight(height);
    if (gridObj.scroller !== null) {
        gridObj.scroller.sfScrollBar('GetObject').Model.TargetHeight = height;
    }
    gridObj.refreshScroller();
}

function secondaryCheckList() {
    secondarygridId = $('#hdnGridId').val();
    setTimeout(function () {
        var gridObjSec = $find(secondarygridId);
        gridObjSec.set_AllowSelection(true);
        gridObjSec.set_AllowSelection(false);
    }, 0);
    $("#" + secondarygridId + "_Table").unbind("click");
    $("#" + secondarygridId + "_Table").bind("click", function (event) {
        event.stopImmediatePropagation();
        HideWarningSuccess();
        var selectedTr = event.target.parentElement;
        var className = event.target.className;
        if (className == "secondarychkChildClass")
            event.target = event.target.parentNode;
        if (event.target.tagName == "TD") {
            if (className != "secondarychkChildClass") {
                var checkbox = $(selectedTr).find("#secondarychkChild")[0];
                $(checkbox).attr("checked", !checkbox.checked);
            }
            synGridCheckBoxSelectionSecondary(event);
        }
    });
}


function secondaryCheckBoxAllClick(args) {
    secondarygridId = $('#hdnGridId').val();
    var obj = $("#" + secondarygridId).find(".GridHeader #secondarychkAll");
    if (obj.attr("checked") == "checked") {
        $("#" + secondarygridId + " .GridContent").find('#secondarychkChild').attr("checked", "checked");
    }
    else {
        $("#" + secondarygridId + " .GridContent").find('#secondarychkChild').removeAttr("checked");
    }
    synGridCheckBoxSelectionSecondary(args);
}

function synGridCheckBoxSelectionSecondary(events) {
    var curRow, curindex, ckFlag, tagValidchk;
    secondarygridId = $('#hdnGridId').val();
    var tablePositiontop = $("#" + secondarygridId + " .GridContent").children("div:first").css("top");
    var tablePositionLeft = $("#" + secondarygridId + " .GridContent").children("div:first").css("left");
    var vscrollposition = $("#" + secondarygridId + " .sf-sp-Vhandle").css("top");
    var hscrollposition = $("#" + secondarygridId + " .sf-sp-Hhandle").css("left");
    var hscrollHeader = $("#" + secondarygridId + " .GridHeader .Table").css("left");
    var gridObjsecondary = $find(secondarygridId);
    var checkboxes = $("#" + secondarygridId).find(".GridContent #secondarychkChild");
    if ($.browser.msie) {
        tagValidchk = events.srcElement.outerHTML;
        tagValidchk = $(tagValidchk).attr("id");
    } else
        tagValidchk = events.target.id;

    if (tagValidchk != "secondarychkAll") {
        curRow = events.target.parentNode;
        curindex = $(curRow).index();
    }
    ckFlag = false;
    $.each(checkboxes, function (index, checkbox) {
        if (checkbox.checked) {
            if (curindex == index)
                ckFlag = true;
            var row = gridObjsecondary.get_ContentTable().getElementsByTagName("tr")[index];
            if (ckFlag == false) {
                if (($.inArray(index, gridObjsecondary.get_SelectionManager().selectedRowsCollection)) == -1) {
                    var eve = { target: $(row).children('td.RowCell')[1], ctrlKey: true };
                    gridObjsecondary.get_SelectionManager()._mDownHandler(eve);
                }
            }
            if (ckFlag == true) {
                if (($.inArray(index, gridObjsecondary.get_SelectionManager().selectedRowsCollection)) == -1) {
                    var curTarget = { target: events.target, ctrlKey: true };
                    gridObjsecondary.get_SelectionManager()._mDownHandler(curTarget);
                }
            }
            ckFlag = false;
        }
        else
            gridObjsecondary.get_SelectionManager().deselectRow(index);
    });
    var result = gridObjsecondary.get_SelectedRecords();
    selectedGridItems = [];

    $.each(result, function (k, value) {
        selectedGridItems.push(
        {
            KeyId: getValue(getKeyValue(value.RepertoireId)),
            R2KeyId: getR2KeyValue(value.R2ResourceId),
            ContractId: getValue(value.ContractIdLnr),
            LinkType: getValue(linkType),
            RightSetId: getValue(value.RightSetId)
        });
    });

    $("#" + secondarygridId + " .GridContent").children("div:first").css("top", tablePositiontop);
    $("#" + secondarygridId + " .GridContent").children("div:first").css("left", tablePositionLeft);
    $("#" + secondarygridId + " .sf-sp-Vhandle").css("top", vscrollposition);
    $("#" + secondarygridId + " .sf-sp-Hhandle").css("left", hscrollposition);
    $("#" + secondarygridId + " .GridHeader .Table").css("left", hscrollHeader);
}


function secondaryStrip(gridID) {
    $("#" + gridID + " .HeaderBar th:lt(19)").attr('style', 'background-color: #B8D0E9 !important');
    $("#" + gridID + " .HeaderBar th:gt(19)").attr('style', 'background-color: #d1eabf !important');
}
function customMenu() {

    if ($('#success').css("display") == 'none' && $('#warning').css("display") == 'none') {

        if (!$.support.leadingWhitespace) {

            $('.customMenu .helpNavMenu ul#subnavlist').removeClass("customAlignWarning");
        }

        else if (($.browser.webkit)) {
            $('.customMenu .helpNavMenu ul#subnavlist').removeClass("customAlignWarningChrome");

        }
    }
    else
        if (!$.support.leadingWhitespace) {

            $('.customMenu .helpNavMenu ul#subnavlist').addClass("customAlignWarning");
        }
        else if (($.browser.webkit)) {
            $('.customMenu .helpNavMenu ul#subnavlist').addClass("customAlignWarningChrome");

        }


}