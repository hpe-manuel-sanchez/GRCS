/// <reference path="/GCS/Scripts/Custom/RightsReviewWorkqueue/SecondaryExploitationTab.js" />
var multi_Artist_Compilations, synchronisation, midPrice, budget, premiums, sampleUse, advertRoyaltyBreaks, clubMailOrder, remixEdit, greatestHits, kiosk, jsonObject, secondaryPopupMessages;
var rightsMulti_Artist_Compilations, rightsSynchronisation, rightsMidPrice, rightsBudget, rightsPremiums, rightssample_Use, rightsAdvert_Royalty_Breaks, rightsClub_Mail_Order,
        rightsRemix_Edit, rightsGreatest_Hits, rightsKiosk;
var restrictedList = new Array();
var restrictionList = new Array();
var consentPeriodList = new Array();
var holdBackPeriodList = new Array();
var notesList = new Array();
var secondaryGridName = $('#hdnGridId').val();
$(document).ready(function () {
    secondaryPopupMessages = secondaryExploitationMessages;

    //Fills the inital load values in a list
    fillSecondaryDataForBackUp();

    //Popup Title - Row information
    $('#secISRC')[0].innerHTML = rowISRC;
    $('#secArtist')[0].innerHTML = rowArtist;
    $('#secTitle')[0].innerHTML = rowTitle;
    $('#secVersion')[0].innerHTML = rowVersion;
    setTool("#secArtist");
    setTool('#secTitle');
    setTool('#secVersion');

    //TODO Testing and Save Functionality validation
    /* Secondary exploitation drop down validations (UC002) Starts */
    $("table.sample tr:even").css("background-color", "#fff");
    $("table.sample tr:odd").css("background-color", "#f5f5f5");

    /* Apply all Click function */


    $('#applyRestriction').click(function (e) {

        e.preventDefault();
        $("select.restrictionList").each(function () {
            var temp = $($("select.restrictedList")[$("select.restrictionList").index(this) + 1]).val();
            if (temp == 1) {
                $($("select.restrictionList")[$("select.restrictionList").index(this) + 1]).val($($("select.restrictionList")[$("select.restrictionList").index(0)]).val());

                $('select.restrictionList').each(function () {
                    var tempVal = $(this).val();
                    if (tempVal == 1 || tempVal == 3 || tempVal == 4 || tempVal == 0) {

                        $($("select.consentList")[$("select.restrictionList").index(this)]).val(0);
                        $($("select.consentList")[$("select.restrictionList").index(this)]).attr("disabled", true);
                        $($("input.HoldBack")[$("select.restrictionList").index(this)]).val("");
                        $($("input.HoldBack")[$("select.restrictionList").index(this)]).attr("disabled", true);
                        $($("input.Notes")[$("select.restrictionList").index(this)]).val("");
                        //$($("input.Notes")[$("select.restrictionList").index(this)]).attr("disabled", true);


                    } else {
                        $($("select.consentList")[$("select.restrictionList").index(this)]).attr("disabled", false);
                        $($("input.HoldBack")[$("select.restrictionList").index(this)]).attr("disabled", false);
                        $($("input.Notes")[$("select.restrictionList").index(this)]).attr("disabled", false);
                    }
                });
            }
        });
    });


    $('#applyRestricted').click(function (e) {
        e.preventDefault();

        $("select.restrictedList").each(function () {

            $($("select.restrictedList")[$("select.restrictedList").index(this) + 1]).val($(this).val());
            var temp = $($("select.restrictedList")[$("select.restrictedList").index(this)]).val();
            if (temp == 2) {
                //$($("select.restrictionList")[$("select.restrictedList").index(this)]).val(4);
                $($("select.restrictionList")[$("select.restrictedList").index(this)]).val(0);
                $($("select.restrictionList")[$("select.restrictedList").index(this)]).attr("disabled", true);
                $($("select.consentList")[$("select.restrictedList").index(this)]).val(0);
                $($("select.consentList")[$("select.restrictedList").index(this)]).attr("disabled", true);
                $($("input.HoldBack")[$("select.restrictedList").index(this)]).val("");
                $($("input.HoldBack")[$("select.restrictedList").index(this)]).attr("disabled", true);
            }
            else {
                var temp1 = $($("select.restrictionList")[$("select.restrictedList").index(this)]).val();
                if (temp1 == 1 || temp1 == 3) {
                    $($("select.consentList")[$("select.restrictedList").index(this)]).attr("disabled", true);
                    $($("input.HoldBack")[$("select.restrictedList").index(this)]).attr("disabled", true);
                }
                else {
                    $($("select.restrictionList")[$("select.restrictedList").index(this)]).removeAttr("disabled");
                    $($("select.consentList")[$("select.restrictedList").index(this)]).removeAttr("disabled");
                    $($("input.HoldBack")[$("select.restrictedList").index(this)]).removeAttr("disabled");
                }

            }
        });
    });


    $('#applyConsent').click(function (e) {
        e.preventDefault();


        $("select.consentList").each(function () {

            var temp = $($("select.restrictedList")[$("select.consentList").index(this) + 1]).val();
            var tempvalid = $($("select.restrictionList")[$("select.consentList").index(this) + 1]).val();
            if (temp == 1 && (tempvalid == 5 || tempvalid == 2 || tempvalid == 0)) {

                $($("select.consentList")[$("select.consentList").index(this) + 1]).val($($("select.consentList")[$("select.consentList").index(0)]).val());

            }


        });

    });


    $('#applyHoldBack').click(function (e) {
        e.preventDefault();
        $("input.HoldBack").each(function () {
            var temp = $($("select.restrictedList")[$("input.HoldBack").index(this) + 1]).val();
            if (temp == 1 && !$($("select.consentList")[$("input.HoldBack").index(this) + 1]).is(':disabled'))
                $($("input.HoldBack")[$("input.HoldBack").index(this) + 1]).val($($("input.HoldBack")[$("input.HoldBack").index(0)]).val());
        });
    });


    $('#applyNotes').click(function (e) {
        e.preventDefault();
        $("input.Notes").each(function () {
            $($("input.Notes")[$("input.Notes").index(this) + 1]).val($(this).val());
        });
    });


    /* Apply all Click function ends*/


    /*Restriction list dropdown validation functionality starts*/

    $('select.restrictionList').change(function () {
        var temp = $(this).val();

        if (temp == 1 || temp == 3 || temp == 4) {
            $($("select.consentList")[$("select.restrictionList").index(this)]).val(0);
            $($("select.consentList")[$("select.restrictionList").index(this)]).attr("disabled", true);
            $($("input.HoldBack")[$("select.restrictionList").index(this)]).val("");
            $($("input.HoldBack")[$("select.restrictionList").index(this)]).attr("disabled", true);
        }
        else {
            $($("select.consentList")[$("select.restrictionList").index(this)]).attr("disabled", false);
            $($("input.HoldBack")[$("select.restrictionList").index(this)]).attr("disabled", false);
        }
    });

    $('select.restrictedList').change(function () {
        var temp = $(this).val();

        if (temp == 2) {
            //$($("select.restrictionList")[$("select.restrictedList").index(this)]).val('');
            $($("select.restrictionList")[$("select.restrictedList").index(this)]).val(0);
            $($("select.restrictionList")[$("select.restrictedList").index(this)]).attr("disabled", true);
            $($("select.consentList")[$("select.restrictedList").index(this)]).val(0);
            $($("select.consentList")[$("select.restrictedList").index(this)]).attr("disabled", true);
            $($("input.HoldBack")[$("select.restrictedList").index(this)]).val("");
            $($("input.HoldBack")[$("select.restrictedList").index(this)]).attr("disabled", true);
        }
        else {
            $($("select.restrictionList")[$("select.restrictedList").index(this)]).removeAttr("disabled");
            $($("select.consentList")[$("select.restrictedList").index(this)]).removeAttr("disabled");
            $($("input.HoldBack")[$("select.restrictedList").index(this)]).removeAttr("disabled");
        }
    });

    /*Restriction list dropdown validation functionality Ends*/
    var restrictionIndex = 0;
    $('select.restrictionList').each(function () {
        var temp = $(this).val();
        var restricted = $($('select.restrictedList')[$(this).index()]).val();
        if (restricted == 2) {//No
            $($('select.restrictionList')[restrictionIndex]).attr("disabled", true);
            $($('input.HoldBack')[restrictionIndex]).attr("disabled", true);
        } else {//yes
            $($('select.restrictionList')[index]).attr("disabled", false);
            $($('input.HoldBack')[restrictionIndex]).attr("disabled", false);
        }
        if (temp == 1 || temp == 3 || temp == 4 || temp == 0) {
            $($("select.consentList")[$("select.restrictionList").index(this)]).attr("disabled", true);
        } else {
            $($("select.consentList")[$("select.restrictionList").index(this)]).attr("disabled", false);
        }
        restrictionIndex++;
    });

    restrictionValidationOnReset();



    //To Apply the selected changes

    $('#divSecondaryPopupReview').mousedown(function (e) {
        e.stopImmediatePropagation();
    });

    var closeBtn = $("#divSecondaryPopupReview").parent().find("a");
    $(closeBtn).mousedown(function (e) {
        e.stopImmediatePropagation();
    });

    $('#btnApplySecondaryExplChanges').click(function () {
        
        if (validateSecondaryExploitationPopup()) {
            saveNoRightsData();
            var secondaryFormValues = $('#secExploitationPopup').serialize();
            $('.accSecondaryBody select[disabled]').each(function () {
                secondaryFormValues = secondaryFormValues + '&' + $(this).attr('name') + '=' + encodeURIComponent($(this).val());
            });

            $('.accSecondaryBody input[disabled]').each(function () {
                secondaryFormValues = secondaryFormValues + '&' + $(this).attr('name') + '=' + encodeURIComponent($(this).val());
            });
            var jsonData = getSecondaryExploitationData();
            jsonObject = JSON.stringify(jsonData);
           
            getSelectedValues();
            setTimeout(function () { appendData(); }, 250);
            setTimeout(function () { $('#divSecondaryPopupReview').dialog('close'); }, 200);

           
            var gridObjSecondary = $find($('#hdnGridId').val());
            var secondaryGridDatas = gridObjSecondary._edit._data[rowId];
            if (secondaryGridDatas == undefined) {
                var secondary_Data = gridObjSecondary._edit._data;
                var records = gridObjSecondary._edit._updatedRecords;
                for (var index = 0; index < records.length; index++) {
                    if (records[index].RightSetId == secondary_Data.RightSetId) {
                        records[index] = secondary_Data;
                    }
                }
            } else {
                UpdateSyncGridData(secondaryGridDatas);
            }

            gridObjSecondary._edit._isEdit = true;
        }
    });

    //To Cancel the changes Made
    $('#btnCancelSecondaryExplChanges').click(function () {
        $('#divSecondaryPopupReview').dialog('close');
    });

    //TO Reset the Changes Done
    $('#btnResetSecondaryExplChanges').click(function () {
        $('#divWarning').hide();
        $('select.restrictedList').each(function () {
            $(this).val("2"); //No value to be selected
        });

        $('select.restrictionList').each(function () {
            $(this).val("0"); //Select value has to be selected 
        });

        $('select.consentList').each(function () {
            $(this).val("0"); //Select value has to be selected 
        });

        $('.accSecondaryBody input:text').each(function () {
            $(this).val(""); //Clear the text boxes.
        });

        resetToInitialValues();
        setTimeout(function () { restrictionValidationOnReset(); }, 150);
    });


});

/*Appends Data to Table*/
function appendData() {
    var tr = $('#' + secondaryGridName + '_Table').find('tr')[rowIdToAppendData];
    var appendtd = $(tr).find('td.tdIsMACRestrictedLnr'); // children()[20];
    var appendtd0 = $(tr).find('td.tdIsSyncronizationRestrictedLnr'); // $(tr).children()[21];
    var appendtd1 = $(tr).find('td.tdIsMidPriceRestrictedLnr'); // $(tr).children()[22];
    var appendtd2 = $(tr).find('td.tdIsBudgetRestrictedLnr'); // $(tr).children()[23];
    var appendtd3 = $(tr).find('td.tdIsPremiumRestrictedLnr'); // $(tr).children()[24];
    var appendtd4 = $(tr).find('td.tdIsSampleRestrictedLnr'); // $(tr).children()[25];
    var appendtd5 = $(tr).find('td.tdIsRoyaltyBreakRestrictedLnr'); // $(tr).children()[26];
    var appendtd6 = $(tr).find('td.tdIsClubOrderRestrictedLnr'); // $(tr).children()[27];
    var appendtd7 = $(tr).find('td.tdIsRemixestrictedLnr'); // $(tr).children()[28];
    var appendtd8 = $(tr).find('td.tdIsGreatestHitsRestrictedLnr'); // $(tr).children()[29];
  //  var appendtd9 = $(tr).find('td.tdIsGreatestHitsRestrictedLnr'); // $(tr).children()[29];
    var appendtd10 = $(tr).children()[32];

    $(appendtd).html(multi_Artist_Compilations);
    $(appendtd).addClass("updatedCell");

    $(appendtd0).html(synchronisation);
    $(appendtd0).addClass("updatedCell");

    $(appendtd1).html(midPrice);
    $(appendtd1).addClass("updatedCell");

    $(appendtd2).html(budget);
    $(appendtd2).addClass("updatedCell");

    $(appendtd3).html(premiums);
    $(appendtd3).addClass("updatedCell");

    $(appendtd4).html(sampleUse);
    $(appendtd4).addClass("updatedCell");

    $(appendtd5).html(advertRoyaltyBreaks);
    $(appendtd5).addClass("updatedCell");

    $(appendtd6).html(clubMailOrder);
    $(appendtd6).addClass("updatedCell");

    $(appendtd7).html(remixEdit);
    $(appendtd7).addClass("updatedCell");

    $(appendtd8).html(greatestHits);
    $(appendtd8).addClass("updatedCell");

//    $(appendtd9).html(kiosk);
//    $(appendtd9).addClass("updatedCell");

    $(appendtd10).html(jsonObject);
}


/*Get Selected Values to append*/
function getSelectedValues() {
    var count = 0;
    var restrictionList = $('.restrictedList');
    var length = restrictionList.length;
  //  $('.restrictedList').each(function () {
    for (var listIndex = 0; listIndex < length; listIndex++) {
    
        switch (count) {
            case 0:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {
                    if (window.rightsMulti_Artist_Compilations == "true") {
                        multi_Artist_Compilations = "No Rights";
                    } else {
                        multi_Artist_Compilations = "Y";
                    }

                } else {
                    multi_Artist_Compilations = "N";
                }
                break;
            case 1:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {

                    if (window.rightsSynchronisation == "true") {
                        synchronisation = "No Rights";
                    } else {
                        synchronisation = "Y";
                    }
                } else {
                    synchronisation = "N";
                }
                break;
            case 2:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {
                    if (window.rightsMidPrice == "true") {
                        midPrice = "No Rights";
                    } else {
                        midPrice = "Y";
                    }
                }
                else {
                    midPrice = "N";
                }
                break;
            case 3:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {
                    if (window.rightsBudget == "true") {
                        budget = "No Rights";
                    } else {
                        budget = "Y";
                    }
                }
                else {
                    budget = "N";
                }
                break;
            case 4:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {
                    if (window.rightsPremiums == "true") {
                        premiums = "No Rights";
                    } else {
                        premiums = "Y";
                    }
                }
                else {
                    premiums = "N";
                }
                break;
            case 5:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {
                    if (window.rightssample_Use == "true") {
                        sampleUse = "No Rights";
                    } else {
                        sampleUse = "Y";
                    }
                }
                else {
                    sampleUse = "N";
                }
                break;
            case 6:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {
                    if (window.rightsAdvert_Royalty_Breaks == "true") {
                        advertRoyaltyBreaks = "No Rights";
                    } else {
                        advertRoyaltyBreaks = "Y";
                    }
                }
                else {
                    advertRoyaltyBreaks = "N";
                }
                break;
            case 7:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {
                    if (window.rightsClub_Mail_Order == "true") {
                        clubMailOrder = "No Rights";
                    } else {
                        clubMailOrder = "Y";
                    }
                }
                else {
                    clubMailOrder = "N";
                }
                break;
            case 8:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {
                    if (window.rightsRemix_Edit == "true") {
                        remixEdit = "No Rights";
                    } else {
                        remixEdit = "Y";
                    }
                }
                else {
                    remixEdit = "N";
                }
                break;
            case 9:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {
                    if (window.rightsGreatest_Hits == "true") {
                        greatestHits = "No Rights";
                    } else {
                        greatestHits = "Y";
                    }
                }
                else {
                    greatestHits = "N";
                }
                break;
            case 10:
                if ($(restrictionList[listIndex]).find(':selected').text() == "Yes") {
                    if (window.rightsKiosk == "true") {
                        kiosk = "No Rights";
                    } else {
                        kiosk = "Y";
                    }
                }
                else {
                    kiosk = "N";
                }
                break;
            default:
        }
        count++;
    }
}


function getSecondaryExploitationData() {
    var secondaryTableData = $('.accSecondaryBody').find('tr');
    var arraySecondaryData = new Array();
    var count = 0;
    $(secondaryTableData).each(function () {
        if (count > 0) {
            var jsonData = getJsonData(this);
            arraySecondaryData.push(jsonData);
        }
        count++;
    });
    return arraySecondaryData;
}


function getJsonData(data) {
    var isRestricted = false, restrictionListId, consentListId, holdBack, notes, exploitationTypeId;
    var secondaryRowData = data;
    var count = 1;
    $(secondaryRowData).find('select').each(function () {
        switch (count) {
            case 1: //RestrictionId (YES,NO)
                isRestricted = $(this).val();
                if (isRestricted.toLocaleLowerCase() == 1) {
                    isRestricted = true;
                } else {
                    isRestricted = false;
                }
                break;
            case 2: //RestrictionOption
                restrictionListId = $(this).val();
                break;
            case 3: //ConsentPeriod
                consentListId = $(this).val();
                break;
        }
        count++;
    });
    var textCount = 1;
    $(secondaryRowData).find(':text').each(function () {
        switch (textCount) {
            case 1:
                holdBack = $(this).val();
                break;
            case 2:
                notes = $(this).val();
                break;
            default:
        }
        textCount++;
    });
    $(secondaryRowData).find('input:hidden').each(function () {
        exploitationTypeId = $(this).val();
    });
    return { ExploitationTypeId: exploitationTypeId, IsRestriction: isRestricted, RestrictionTypeId: restrictionListId, ConsentPeriodTypeId: consentListId, HoldBackPeriod: holdBack, Notes: notes };
}


//Fills the list with initial datas.
function fillSecondaryDataForBackUp() {
    $("select.restrictedList").each(function () {
        restrictedList.push($(this).val());
    });
    $("select.restrictionList").each(function () {
        restrictionList.push($(this).val());
    });
    $("select.consentList").each(function () {
        consentPeriodList.push($(this).val());
    });
    $("input.HoldBack").each(function () {
        holdBackPeriodList.push($(this).val());
    });
    $("input.Notes").each(function () {
        notesList.push($(this).val());
    });
}

function resetToInitialValues() {
    for (var restrictedListindex = 0; restrictedListindex < restrictedList.length; restrictedListindex++) {
        $($("select.restrictedList")[restrictedListindex]).val(restrictedList[restrictedListindex]);
    }
    for (var restrictionListindex = 0; restrictionListindex < restrictionList.length; restrictionListindex++) {
        $($("select.restrictionList")[restrictionListindex]).val(restrictionList[restrictionListindex]);
    }
    for (var consentListindex = 0; consentListindex < consentPeriodList.length; consentListindex++) {
        $($("select.consentList")[consentListindex]).val(consentPeriodList[consentListindex]);
    }
    for (var HoldBackindex = 0; HoldBackindex < holdBackPeriodList.length; HoldBackindex++) {
        $($("input.HoldBack")[HoldBackindex]).val(holdBackPeriodList[HoldBackindex]);
    }
    for (var Notesindex = 0; Notesindex < notesList.length; Notesindex++) {
        $($("input.Notes")[Notesindex]).val(notesList[Notesindex]);
    }
}

//Validate disable and enable on Reset
function restrictionValidationOnReset() {
    var restrictionList = $('select.restrictionList');
    for (var index = 0; index < restrictionList.length; index++) {
        var temp = $(restrictionList[index]).val();
        var restricted = $($('select.restrictedList')[index]).val();
        if (restricted == 2) { //No
            $($('select.restrictionList')[index]).attr("disabled", true);
            $($('input.HoldBack')[index]).attr("disabled", true);
        } else { //yes
            $($('select.restrictionList')[index]).attr("disabled", false);
            $($('input.HoldBack')[index]).attr("disabled", false);
        }
        if (temp == 1 || temp == 3 || temp == 4 || temp == 0) {
            $($("select.consentList")[$("select.restrictionList").index(this)]).attr("disabled", true);
        } else {
            $($("select.consentList")[$("select.restrictionList").index(this)]).attr("disabled", false);
        }
    }
}

/*Save Validation Check*/
function validateSecondaryExploitationPopup() {
    var result = true;
    var restrictedList = $("select.restrictedList");
    for (var i = 0; i < $(restrictedList).length; i++) {
        var tempRestricted = $($(restrictedList)[i]).val();
        if (tempRestricted == 1) {
            var restriction = $($('select.restrictionList')[i]).val();
            if (restriction == 0) {
                $('#divWarning').show();
                $('.divWarningContainer').show();
                $('#divSecondaryError').html("Please select a valid Restrictions value where Restricted is set to “Yes” ");
                result = false;
                return false;
            }
        }
        //return true;
    }



    $("select.restrictionList").each(function () {
        var temp = $(this).val();
        if (temp == 2 || temp == 5) {
            var item = $($("select.consentList")[$("select.restrictionList").index(this)]);
            if (item.val() == 0) {
                $('#divWarning').show();
                $('.divWarningContainer').show();
                $('#divSecondaryError').html(secondaryPopupMessages.exploitPeriod);
                result = false;
                return false;
            }
        }
        return true;
    });

    if (result == true) {

        $("select.consentList").each(function () {
            var temp = $(this).val();
            if (temp == 1) {
                var item = $($("input.HoldBack")[$("select.consentList").index(this)]);
                if (item.val() == "") {
                    $('#divWarning').show();
                    $('.divWarningContainer').show();
                    $('#divSecondaryError').html(secondaryPopupMessages.exploitHoldPeriod);
                    result = false;
                    return false;
                }
            }
            return true;
        });


    }

    return result;
}



/*To save the NoRights Info*/
function saveNoRightsData() {
    var exploitationcount = 0;
    $("select.restrictionList").each(function () {
        exploitationcount++;
        var temp = $(this).val();
        if (temp == 1) {//No Rights
            fillExploitationNorightsData(exploitationcount);
        }
    });
}
/*Sets True if No Rights*/
function fillExploitationNorightsData(index) {
    switch (index) {
        case 1:
            rightsMulti_Artist_Compilations = "true";
            break;
        case 2:
            rightsSynchronisation = "true";
            break;
        case 3:
            rightsMidPrice = "true";
            break;
        case 4:
            rightsBudget = "true";
            break;
        case 5:
            rightsPremiums = "true";
            break;
        case 6:
            rightssample_Use = "true";
            break;
        case 7:
            rightsAdvert_Royalty_Breaks = "true";
            break;
        case 8:
            rightsClub_Mail_Order = "true";
            break;
        case 9:
            rightsRemix_Edit = "true";
            break;
        case 10:
            rightsGreatest_Hits = "true";
            break;
        case 11:
            rightsKiosk = "true";
            break;
    }
}


function isDataChanged() {
    for (var restrictedListindex = 0; restrictedListindex < restrictedList.length; restrictedListindex++) {
        if ($($("select.restrictedList")[restrictedListindex]).val() != restrictedList[restrictedListindex])
            return true;
    }
    for (var restrictionListindex = 0; restrictionListindex < restrictionList.length; restrictionListindex++) {
        if ($($("select.restrictionList")[restrictionListindex]).val() != restrictionList[restrictionListindex])
            return true;
    }
    for (var consentListindex = 0; consentListindex < consentPeriodList.length; consentListindex++) {
        if ($($("select.consentList")[consentListindex]).val() != consentPeriodList[consentListindex])
            return true;
    }
    for (var HoldBackindex = 0; HoldBackindex < holdBackPeriodList.length; HoldBackindex++) {
        if ($($("input.HoldBack")[HoldBackindex]).val() != holdBackPeriodList[HoldBackindex])
            return true;
    }
    for (var Notesindex = 0; Notesindex < notesList.length; Notesindex++) {
        if ($($("input.Notes")[Notesindex]).val() != notesList[Notesindex])
            return true;
    }
    return false;
}

function UpdateSyncGridData(secondaryDatas) {
    var gridObjSecondary = $find($('#hdnGridId').val());
    var isAlreadyUpdated = false;
    var records = gridObjSecondary._edit._updatedRecords;
    secondaryDatas.IsMACRestrictedLnr = multi_Artist_Compilations;
    secondaryDatas.IsSyncronizationRestrictedLnr = synchronisation;
    secondaryDatas.IsMidPriceRestrictedLnr = midPrice;
    secondaryDatas.IsBudgetRestrictedLnr = budget;
    secondaryDatas.IsPremiumRestrictedLnr = premiums;
    secondaryDatas.IsSampleRestrictedLnr = sampleUse;
    secondaryDatas.IsRoyaltyBreakRestrictedLnr = advertRoyaltyBreaks;
    secondaryDatas.IsClubOrderRestrictedLnr = clubMailOrder;
    secondaryDatas.IsRemixestrictedLnr = remixEdit;
    secondaryDatas.IsGreatestHitsRestrictedLnr = greatestHits;
    secondaryDatas.IsKioskRestrictedLnr = kiosk;
    secondaryDatas.JsonStringDatas = jsonObject;
    for (var index = 0; index < records.length; index++) {
        if (secondaryDatas[index] != undefined && records[index].RightSetId == secondaryDatas[index].RightSetId) {
            isAlreadyUpdated = true;
            gridObjSecondary._edit._updatedRecords[index] = secondaryDatas;
        }
    }
    if (!isAlreadyUpdated) {
        gridObjSecondary._edit._updatedRecords.push(secondaryDatas);
    }
    gridObjSecondary._edit._data = secondaryDatas;
}
