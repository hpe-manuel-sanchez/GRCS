//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UMGI.GRCS.UI.Proxies.WorkgroupService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WorkgroupService.IWorkgroup")]
    public interface IWorkgroup {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetCompaniesOfWorkgroup", ReplyAction="http://tempuri.org/IWorkgroup/GetCompaniesOfWorkgroupResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.CompanyInfo> GetCompaniesOfWorkgroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.CompanySearchCriteria companySearchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/SearchWorgroup", ReplyAction="http://tempuri.org/IWorkgroup/SearchWorgroupResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult> SearchWorgroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchCriteria workgroupSearchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/DeactivateWorkGroup", ReplyAction="http://tempuri.org/IWorkgroup/DeactivateWorkGroupResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Request> DeactivateWorkGroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.RequestSearch requestSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetCompanies", ReplyAction="http://tempuri.org/IWorkgroup/GetCompaniesResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.CompanyInfo> GetCompanies(string companyIds, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/AddWorkGroup", ReplyAction="http://tempuri.org/IWorkgroup/AddWorkGroupResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult))]
        string AddWorkGroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup workgroupDetails, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetRoles", ReplyAction="http://tempuri.org/IWorkgroup/GetRolesResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup> GetRoles(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/RequestReassignToWorkgroup", ReplyAction="http://tempuri.org/IWorkgroup/RequestReassignToWorkgroupResponse")]
        bool RequestReassignToWorkgroup(long expectWorkgroupId, long assignedWorkgroupId, string requestIds, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetWorkgroupByChild", ReplyAction="http://tempuri.org/IWorkgroup/GetWorkgroupByChildResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult> GetWorkgroupByChild(long parentId, long workgroupId, UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchCriteria workgroupSearchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetUsersList", ReplyAction="http://tempuri.org/IWorkgroup/GetUsersListResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkGroupUser> GetUsersList(string userIds, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/SearchSingleWorgroup", ReplyAction="http://tempuri.org/IWorkgroup/SearchSingleWorgroupResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult))]
        UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup SearchSingleWorgroup(long workGroupId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/SearchSingleChildWorgroup", ReplyAction="http://tempuri.org/IWorkgroup/SearchSingleChildWorgroupResponse")]
        UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.ChildWorkgroup SearchSingleChildWorgroup(long workGroupId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetTerritories", ReplyAction="http://tempuri.org/IWorkgroup/GetTerritoriesResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.TerritorialDisplay> GetTerritories(long workGroupId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/DeleteWorkgroup", ReplyAction="http://tempuri.org/IWorkgroup/DeleteWorkgroupResponse")]
        bool DeleteWorkgroup(long workgroupId, string userName, System.DateTime modifiedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/UpdateWorkGroup", ReplyAction="http://tempuri.org/IWorkgroup/UpdateWorkGroupResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult))]
        bool UpdateWorkGroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup workgroupDetails, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/SearchWorgroupForContract", ReplyAction="http://tempuri.org/IWorkgroup/SearchWorgroupForContractResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult> SearchWorgroupForContract(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchCriteria workgroupSearchCriteria, string contractIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/LinkArtistContractToWorkgroup", ReplyAction="http://tempuri.org/IWorkgroup/LinkArtistContractToWorkgroupResponse")]
        System.Collections.Generic.List<long> LinkArtistContractToWorkgroup(string contractIds, string workgroupIds, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/LinkResourceContractToWorkgroup", ReplyAction="http://tempuri.org/IWorkgroup/LinkResourceContractToWorkgroupResponse")]
        System.Collections.Generic.List<long> LinkResourceContractToWorkgroup(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.DeviationResourceContract> contractAndResourceIds, string workgroupIds, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/AddChildWorkGroup", ReplyAction="http://tempuri.org/IWorkgroup/AddChildWorkGroupResponse")]
        string AddChildWorkGroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.ChildWorkgroup childWorkgroupDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetRequestType", ReplyAction="http://tempuri.org/IWorkgroup/GetRequestTypeResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup> GetRequestType(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetResourceType", ReplyAction="http://tempuri.org/IWorkgroup/GetResourceTypeResponse")]
        System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<int, string>> GetResourceType(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/UpdateChildWorkGroup", ReplyAction="http://tempuri.org/IWorkgroup/UpdateChildWorkGroupResponse")]
        bool UpdateChildWorkGroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.ChildWorkgroup childWorkgroupDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetWorkgroupNamesForAutoComplete", ReplyAction="http://tempuri.org/IWorkgroup/GetWorkgroupNamesForAutoCompleteResponse")]
        System.Collections.Generic.List<string> GetWorkgroupNamesForAutoComplete(string workGroupName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetUsersForAutoComplete", ReplyAction="http://tempuri.org/IWorkgroup/GetUsersForAutoCompleteResponse")]
        System.Collections.Generic.List<string> GetUsersForAutoComplete(string user, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/SearchWorkgroupForRemoveUsers", ReplyAction="http://tempuri.org/IWorkgroup/SearchWorkgroupForRemoveUsersResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult> SearchWorkgroupForRemoveUsers(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchCriteria workGroupSearchCriteria, string loginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/SearchWorkgroupToAddUsers", ReplyAction="http://tempuri.org/IWorkgroup/SearchWorkgroupToAddUsersResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult> SearchWorkgroupToAddUsers(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchCriteria workGroupSearchCriteria, string userLoginName, string searchLoginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/RemoveUserFromMultipleWorkgroup", ReplyAction="http://tempuri.org/IWorkgroup/RemoveUserFromMultipleWorkgroupResponse")]
        System.Collections.Generic.List<string> RemoveUserFromMultipleWorkgroup(string userToRemove, string workgroupIdList, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/AddUserInMultipleWorkgroup", ReplyAction="http://tempuri.org/IWorkgroup/AddUserInMultipleWorkgroupResponse")]
        bool AddUserInMultipleWorkgroup(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup> workgroupDetails, UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkGroupUser userData, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetEmailPreferences", ReplyAction="http://tempuri.org/IWorkgroup/GetEmailPreferencesResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Preferences> GetEmailPreferences(string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetUserPreferences", ReplyAction="http://tempuri.org/IWorkgroup/GetUserPreferencesResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.UserPreference> GetUserPreferences(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/InsertUserPreferences", ReplyAction="http://tempuri.org/IWorkgroup/InsertUserPreferencesResponse")]
        bool InsertUserPreferences(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.UserPreference> userPreferenceList, long userId, string loginUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkgroup/GetWorkgroups", ReplyAction="http://tempuri.org/IWorkgroup/GetWorkgroupsResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupBase> GetWorkgroups(long userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkgroupChannel : UMGI.GRCS.UI.Proxies.WorkgroupService.IWorkgroup, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkgroupClient : System.ServiceModel.ClientBase<UMGI.GRCS.UI.Proxies.WorkgroupService.IWorkgroup>, UMGI.GRCS.UI.Proxies.WorkgroupService.IWorkgroup {
        
        public WorkgroupClient() {
        }
        
        public WorkgroupClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkgroupClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkgroupClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkgroupClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.CompanyInfo> GetCompaniesOfWorkgroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.CompanySearchCriteria companySearchCriteria) {
            return base.Channel.GetCompaniesOfWorkgroup(companySearchCriteria);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult> SearchWorgroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchCriteria workgroupSearchCriteria) {
            return base.Channel.SearchWorgroup(workgroupSearchCriteria);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Request> DeactivateWorkGroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.RequestSearch requestSearch) {
            return base.Channel.DeactivateWorkGroup(requestSearch);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.CompanyInfo> GetCompanies(string companyIds, string userLoginName) {
            return base.Channel.GetCompanies(companyIds, userLoginName);
        }
        
        public string AddWorkGroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup workgroupDetails, string userLoginName) {
            return base.Channel.AddWorkGroup(workgroupDetails, userLoginName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup> GetRoles(string userName) {
            return base.Channel.GetRoles(userName);
        }
        
        public bool RequestReassignToWorkgroup(long expectWorkgroupId, long assignedWorkgroupId, string requestIds, string userName) {
            return base.Channel.RequestReassignToWorkgroup(expectWorkgroupId, assignedWorkgroupId, requestIds, userName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult> GetWorkgroupByChild(long parentId, long workgroupId, UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchCriteria workgroupSearchCriteria) {
            return base.Channel.GetWorkgroupByChild(parentId, workgroupId, workgroupSearchCriteria);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkGroupUser> GetUsersList(string userIds, string userName) {
            return base.Channel.GetUsersList(userIds, userName);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup SearchSingleWorgroup(long workGroupId, string userName) {
            return base.Channel.SearchSingleWorgroup(workGroupId, userName);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.ChildWorkgroup SearchSingleChildWorgroup(long workGroupId, string userName) {
            return base.Channel.SearchSingleChildWorgroup(workGroupId, userName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.TerritorialDisplay> GetTerritories(long workGroupId, string userName) {
            return base.Channel.GetTerritories(workGroupId, userName);
        }
        
        public bool DeleteWorkgroup(long workgroupId, string userName, System.DateTime modifiedDate) {
            return base.Channel.DeleteWorkgroup(workgroupId, userName, modifiedDate);
        }
        
        public bool UpdateWorkGroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup workgroupDetails, string userLoginName) {
            return base.Channel.UpdateWorkGroup(workgroupDetails, userLoginName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult> SearchWorgroupForContract(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchCriteria workgroupSearchCriteria, string contractIds) {
            return base.Channel.SearchWorgroupForContract(workgroupSearchCriteria, contractIds);
        }
        
        public System.Collections.Generic.List<long> LinkArtistContractToWorkgroup(string contractIds, string workgroupIds, string userLoginName) {
            return base.Channel.LinkArtistContractToWorkgroup(contractIds, workgroupIds, userLoginName);
        }
        
        public System.Collections.Generic.List<long> LinkResourceContractToWorkgroup(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.DeviationResourceContract> contractAndResourceIds, string workgroupIds, string userLoginName) {
            return base.Channel.LinkResourceContractToWorkgroup(contractAndResourceIds, workgroupIds, userLoginName);
        }
        
        public string AddChildWorkGroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.ChildWorkgroup childWorkgroupDetails) {
            return base.Channel.AddChildWorkGroup(childWorkgroupDetails);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup> GetRequestType(string userName) {
            return base.Channel.GetRequestType(userName);
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<int, string>> GetResourceType(string userName) {
            return base.Channel.GetResourceType(userName);
        }
        
        public bool UpdateChildWorkGroup(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.ChildWorkgroup childWorkgroupDetails) {
            return base.Channel.UpdateChildWorkGroup(childWorkgroupDetails);
        }
        
        public System.Collections.Generic.List<string> GetWorkgroupNamesForAutoComplete(string workGroupName, string userName) {
            return base.Channel.GetWorkgroupNamesForAutoComplete(workGroupName, userName);
        }
        
        public System.Collections.Generic.List<string> GetUsersForAutoComplete(string user, string userName) {
            return base.Channel.GetUsersForAutoComplete(user, userName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult> SearchWorkgroupForRemoveUsers(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchCriteria workGroupSearchCriteria, string loginName) {
            return base.Channel.SearchWorkgroupForRemoveUsers(workGroupSearchCriteria, loginName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchResult> SearchWorkgroupToAddUsers(UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupSearchCriteria workGroupSearchCriteria, string userLoginName, string searchLoginId) {
            return base.Channel.SearchWorkgroupToAddUsers(workGroupSearchCriteria, userLoginName, searchLoginId);
        }
        
        public System.Collections.Generic.List<string> RemoveUserFromMultipleWorkgroup(string userToRemove, string workgroupIdList, string userLoginName) {
            return base.Channel.RemoveUserFromMultipleWorkgroup(userToRemove, workgroupIdList, userLoginName);
        }
        
        public bool AddUserInMultipleWorkgroup(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Workgroup> workgroupDetails, UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkGroupUser userData, string userLoginName) {
            return base.Channel.AddUserInMultipleWorkgroup(workgroupDetails, userData, userLoginName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.Preferences> GetEmailPreferences(string userLoginName) {
            return base.Channel.GetEmailPreferences(userLoginName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.UserPreference> GetUserPreferences(long userId) {
            return base.Channel.GetUserPreferences(userId);
        }
        
        public bool InsertUserPreferences(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.UserPreference> userPreferenceList, long userId, string loginUserName) {
            return base.Channel.InsertUserPreferences(userPreferenceList, userId, loginUserName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkgroupEntities.WorkgroupBase> GetWorkgroups(long userId) {
            return base.Channel.GetWorkgroups(userId);
        }
    }
}
