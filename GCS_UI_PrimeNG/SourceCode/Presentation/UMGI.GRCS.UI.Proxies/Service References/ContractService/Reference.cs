//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UMGI.GRCS.UI.Proxies.ContractService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContractService.IContract")]
    public interface IContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/SearchContractbyArtist", ReplyAction="http://tempuri.org/IContract/SearchContractbyArtistResponse")]
        UMGI.GRCS.BusinessEntities.Entities.ArtistEntities.ArtistContractSearchResult SearchContractbyArtist(UMGI.GRCS.BusinessEntities.Entities.ArtistEntities.ArtistSearchCriteria artistSearchCriteria, bool isPaging, UMGI.GRCS.BusinessEntities.Entities.BaseEntities.UserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/SearchContractbyResource", ReplyAction="http://tempuri.org/IContract/SearchContractbyResourceResponse")]
        UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.ResourceContractSearchResult SearchContractbyResource(UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.ResourceSearchCriteria resourceSearchCriteria, bool isPaging, UMGI.GRCS.BusinessEntities.Entities.BaseEntities.UserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetResourceContractByContractIdList", ReplyAction="http://tempuri.org/IContract/GetResourceContractByContractIdListResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.ResourceContract> GetResourceContractByContractIdList(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.DeviationResourceContract> contractIdList, UMGI.GRCS.BusinessEntities.Entities.BaseEntities.UserInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetContractsByResource", ReplyAction="http://tempuri.org/IContract/GetContractsByResourceResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.LeanContractInfo> GetContractsByResource(long resourceId, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetArtistByContract", ReplyAction="http://tempuri.org/IContract/GetArtistByContractResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ArtistEntities.ArtistContract> GetArtistByContract(System.Collections.Generic.List<long> contractids, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetContractsByArtist", ReplyAction="http://tempuri.org/IContract/GetContractsByArtistResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.LeanContractInfo> GetContractsByArtist(long artistId, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetLeanContract", ReplyAction="http://tempuri.org/IContract/GetLeanContractResponse")]
        UMGI.GRCS.BusinessEntities.Entities.ContractEntities.LeanContractInfo GetLeanContract(long contractId, string userLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/SaveAutoLinkCdlContract", ReplyAction="http://tempuri.org/IContract/SaveAutoLinkCdlContractResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractMappingDetails))]
        bool SaveAutoLinkCdlContract(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractMapping autoLinkCdlContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/DeleteCdlContracts", ReplyAction="http://tempuri.org/IContract/DeleteCdlContractsResponse")]
        void DeleteCdlContracts(System.Collections.Generic.Dictionary<long, System.DateTime> dictIdTime, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetLinkedCompanies", ReplyAction="http://tempuri.org/IContract/GetLinkedCompaniesResponse")]
        UMGI.GRCS.BusinessEntities.Responses.DataResponseInfo GetLinkedCompanies(string companyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetLinkedDivisions", ReplyAction="http://tempuri.org/IContract/GetLinkedDivisionsResponse")]
        UMGI.GRCS.BusinessEntities.Responses.DataResponseInfo GetLinkedDivisions(string divisionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetLinkedLabels", ReplyAction="http://tempuri.org/IContract/GetLinkedLabelsResponse")]
        UMGI.GRCS.BusinessEntities.Responses.DataResponseInfo GetLinkedLabels(string labelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/FilterCdlMappings", ReplyAction="http://tempuri.org/IContract/FilterCdlMappingsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractMapping))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractMappingDetails))]
        UMGI.GRCS.BusinessEntities.Entities.AdminEntities.MappingFilterResults FilterCdlMappings(UMGI.GRCS.BusinessEntities.Entities.AdminEntities.MappingFilterCriteria mappingFilterCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetDefaultDataSecondaryExploitations", ReplyAction="http://tempuri.org/IContract/GetDefaultDataSecondaryExploitationsResponse")]
        UMGI.GRCS.BusinessEntities.Entities.Templates.SecondaryExploitationDefaults GetDefaultDataSecondaryExploitations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetTerritoryData", ReplyAction="http://tempuri.org/IContract/GetTerritoryDataResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.Templates.SecondaryExploitationTemplate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.Templates.ContractTemplate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.Templates.DigitalRestrictionTemplate))]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.TerritorialDisplay> GetTerritoryData(UMGI.GRCS.BusinessEntities.Entities.BaseEntities.TemplateDetails templateInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetContractTerritoryDetails", ReplyAction="http://tempuri.org/IContract/GetContractTerritoryDetailsResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.TerritorialDisplay> GetContractTerritoryDetails(long contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/SaveContract", ReplyAction="http://tempuri.org/IContract/SaveContractResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.DeviationResourceContract))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.BaseEntities.ClearanceAdminCompany))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.BaseEntities.UmgSigningCompany))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails))]
        UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo SaveContract(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails contractDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/SaveContractTemplate", ReplyAction="http://tempuri.org/IContract/SaveContractTemplateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.DeviationResourceContract))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.BaseEntities.ClearanceAdminCompany))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.BaseEntities.UmgSigningCompany))]
        string SaveContractTemplate(UMGI.GRCS.BusinessEntities.Entities.Templates.ContractTemplate contractDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetContractTemplates", ReplyAction="http://tempuri.org/IContract/GetContractTemplatesResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.BaseEntities.TemplateDetails> GetContractTemplates(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetContractTemplate", ReplyAction="http://tempuri.org/IContract/GetContractTemplateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.DeviationResourceContract))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.BaseEntities.ClearanceAdminCompany))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.BaseEntities.UmgSigningCompany))]
        UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails GetContractTemplate(long templateId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetMasterDataForContract", ReplyAction="http://tempuri.org/IContract/GetMasterDataForContractResponse")]
        UMGI.GRCS.BusinessEntities.Responses.MasterData GetMasterDataForContract(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetSearchContractMasterData", ReplyAction="http://tempuri.org/IContract/GetSearchContractMasterDataResponse")]
        UMGI.GRCS.BusinessEntities.Responses.SearchContractMasterData GetSearchContractMasterData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/SearchContract", ReplyAction="http://tempuri.org/IContract/SearchContractResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails))]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> SearchContract(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo contractSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetContractMaintenanceWorkQueue", ReplyAction="http://tempuri.org/IContract/GetContractMaintenanceWorkQueueResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails))]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> GetContractMaintenanceWorkQueue(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo contractSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/SearchParentContracts", ReplyAction="http://tempuri.org/IContract/SearchParentContractsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails))]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> SearchParentContracts(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo contractSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetContract", ReplyAction="http://tempuri.org/IContract/GetContractResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.DeviationResourceContract))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.BaseEntities.ClearanceAdminCompany))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.BaseEntities.UmgSigningCompany))]
        UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails GetContract(long contractId, string userName, UMGI.GRCS.BusinessEntities.Entities.AnaEntities.GrsTasks tasks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/DeleteContract", ReplyAction="http://tempuri.org/IContract/DeleteContractResponse")]
        void DeleteContract(long contractId, string userName, System.DateTime requestDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetDefaultDataRightsAndRestriction", ReplyAction="http://tempuri.org/IContract/GetDefaultDataRightsAndRestrictionResponse")]
        UMGI.GRCS.BusinessEntities.Responses.RightsAndRestrictions GetDefaultDataRightsAndRestriction();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetDefaultDataDigitalRestriction", ReplyAction="http://tempuri.org/IContract/GetDefaultDataDigitalRestrictionResponse")]
        UMGI.GRCS.BusinessEntities.Responses.DigitalRestrictions GetDefaultDataDigitalRestriction();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/SaveDigitalRestrictionTemplate", ReplyAction="http://tempuri.org/IContract/SaveDigitalRestrictionTemplateResponse")]
        UMGI.GRCS.BusinessEntities.Responses.DigitalRestrictionTemplateResults SaveDigitalRestrictionTemplate(UMGI.GRCS.BusinessEntities.Entities.Templates.DigitalRestrictionTemplate digitalRestrictionTemplateDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/LoadContractTemplates", ReplyAction="http://tempuri.org/IContract/LoadContractTemplatesResponse")]
        UMGI.GRCS.BusinessEntities.Responses.ContractTemplatesResult LoadContractTemplates(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.FilterFields filterFields);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetDigitalTemplates", ReplyAction="http://tempuri.org/IContract/GetDigitalTemplatesResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.BaseEntities.TemplateDetails> GetDigitalTemplates(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetDigitalTemplate", ReplyAction="http://tempuri.org/IContract/GetDigitalTemplateResponse")]
        UMGI.GRCS.BusinessEntities.Entities.Templates.DigitalRestrictionTemplate GetDigitalTemplate(long digitalRestrictionTemplateId, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/DeleteTemplates", ReplyAction="http://tempuri.org/IContract/DeleteTemplatesResponse")]
        string DeleteTemplates(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.BaseEntities.TemplateDetails> templateDetail, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetSplitDealContracts", ReplyAction="http://tempuri.org/IContract/GetSplitDealContractsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails))]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> GetSplitDealContracts(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo contractInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/LinkProjectToContract", ReplyAction="http://tempuri.org/IContract/LinkProjectToContractResponse")]
        void LinkProjectToContract(UMGI.GRCS.BusinessEntities.Entities.ProjectEntities.ProjectInfo linkProjectInfo, long contractId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/IsAlreadyLinkedContract", ReplyAction="http://tempuri.org/IContract/IsAlreadyLinkedContractResponse")]
        System.Collections.Generic.List<long> IsAlreadyLinkedContract(System.Collections.Generic.List<long> ids, long contractId, string repertoireType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetEmailGroups", ReplyAction="http://tempuri.org/IContract/GetEmailGroupsResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.GlobalAddressEntities.EmailGroupDetails> GetEmailGroups(UMGI.GRCS.BusinessEntities.Entities.GlobalAddressEntities.EmailGroupDetails emailGroupDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/SaveEmailGroup", ReplyAction="http://tempuri.org/IContract/SaveEmailGroupResponse")]
        void SaveEmailGroup(UMGI.GRCS.BusinessEntities.Entities.GlobalAddressEntities.EmailGroupDetails emailGroupDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/DeleteEmailGroups", ReplyAction="http://tempuri.org/IContract/DeleteEmailGroupsResponse")]
        void DeleteEmailGroups(System.Collections.Generic.List<long> emailGroupIds, string userName, System.DateTime modifiedDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetLinkedProjectDetails", ReplyAction="http://tempuri.org/IContract/GetLinkedProjectDetailsResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ProjectEntities.LinkedProjectInfo> GetLinkedProjectDetails(long contractId, UMGI.GRCS.BusinessEntities.Entities.ContractEntities.FilterFields filterCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetLinkedReleaseDetails", ReplyAction="http://tempuri.org/IContract/GetLinkedReleaseDetailsResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ReleaseEntities.LinkedReleaseInfo> GetLinkedReleaseDetails(long contractId, UMGI.GRCS.BusinessEntities.Entities.ContractEntities.FilterFields filterCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetLinkedResourceDetails", ReplyAction="http://tempuri.org/IContract/GetLinkedResourceDetailsResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.LinkedResourceInfo> GetLinkedResourceDetails(long contractId, UMGI.GRCS.BusinessEntities.Entities.ContractEntities.FilterFields filterCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/UnlinkRepertoire", ReplyAction="http://tempuri.org/IContract/UnlinkRepertoireResponse")]
        void UnlinkRepertoire(long contractId, System.Collections.Generic.List<long> projectIdList, System.Collections.Generic.List<long> releaseIdList, System.Collections.Generic.List<long> resourceIdList, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/UnlinkRepertoireFromWorkQueue", ReplyAction="http://tempuri.org/IContract/UnlinkRepertoireFromWorkQueueResponse")]
        void UnlinkRepertoireFromWorkQueue(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkQueueEntities.WorkQueue> workQueueItems, string userName, bool ChangeLink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetContractsForSplitDeal", ReplyAction="http://tempuri.org/IContract/GetContractsForSplitDealResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails))]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> GetContractsForSplitDeal(long contractId, UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo contractFilter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetChildContracts", ReplyAction="http://tempuri.org/IContract/GetChildContractsResponse")]
        System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> GetChildContracts(UMGI.GRCS.BusinessEntities.Requests.ChildContractsRequest childContractsRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/UnlinkRepertoireFromReleaseResource", ReplyAction="http://tempuri.org/IContract/UnlinkRepertoireFromReleaseResourceResponse")]
        void UnlinkRepertoireFromReleaseResource(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.RepertoireEntities.ChangeLinkInfo> workQueueItems, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/IsAlreadyUnlinked", ReplyAction="http://tempuri.org/IContract/IsAlreadyUnlinkedResponse")]
        UMGI.GRCS.BusinessEntities.Entities.RepertoireEntities.RepertoireFilterResults IsAlreadyUnlinked(long contractId, System.Collections.Generic.List<long> projectIdList, System.Collections.Generic.List<long> releaseIdList, System.Collections.Generic.List<long> resourceIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/IsAlreadyUnlinkFromWorkQueue", ReplyAction="http://tempuri.org/IContract/IsAlreadyUnlinkFromWorkQueueResponse")]
        UMGI.GRCS.BusinessEntities.Entities.RepertoireEntities.RepertoireFilterResults IsAlreadyUnlinkFromWorkQueue(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkQueueEntities.WorkQueue> workQueueItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetLinkedRightSets", ReplyAction="http://tempuri.org/IContract/GetLinkedRightSetsResponse")]
        System.Collections.Generic.List<long> GetLinkedRightSets(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.RepertoireEntities.ChangeLinkInfo> changeLinkInfos);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContractChannel : UMGI.GRCS.UI.Proxies.ContractService.IContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractClient : System.ServiceModel.ClientBase<UMGI.GRCS.UI.Proxies.ContractService.IContract>, UMGI.GRCS.UI.Proxies.ContractService.IContract {
        
        public ContractClient() {
        }
        
        public ContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.ArtistEntities.ArtistContractSearchResult SearchContractbyArtist(UMGI.GRCS.BusinessEntities.Entities.ArtistEntities.ArtistSearchCriteria artistSearchCriteria, bool isPaging, UMGI.GRCS.BusinessEntities.Entities.BaseEntities.UserInfo userInfo) {
            return base.Channel.SearchContractbyArtist(artistSearchCriteria, isPaging, userInfo);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.ResourceContractSearchResult SearchContractbyResource(UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.ResourceSearchCriteria resourceSearchCriteria, bool isPaging, UMGI.GRCS.BusinessEntities.Entities.BaseEntities.UserInfo userInfo) {
            return base.Channel.SearchContractbyResource(resourceSearchCriteria, isPaging, userInfo);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.ResourceContract> GetResourceContractByContractIdList(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.DeviationResourceContract> contractIdList, UMGI.GRCS.BusinessEntities.Entities.BaseEntities.UserInfo userInfo) {
            return base.Channel.GetResourceContractByContractIdList(contractIdList, userInfo);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.LeanContractInfo> GetContractsByResource(long resourceId, string userLoginName) {
            return base.Channel.GetContractsByResource(resourceId, userLoginName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ArtistEntities.ArtistContract> GetArtistByContract(System.Collections.Generic.List<long> contractids, string userLoginName) {
            return base.Channel.GetArtistByContract(contractids, userLoginName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.LeanContractInfo> GetContractsByArtist(long artistId, string userLoginName) {
            return base.Channel.GetContractsByArtist(artistId, userLoginName);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.ContractEntities.LeanContractInfo GetLeanContract(long contractId, string userLoginName) {
            return base.Channel.GetLeanContract(contractId, userLoginName);
        }
        
        public bool SaveAutoLinkCdlContract(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractMapping autoLinkCdlContract) {
            return base.Channel.SaveAutoLinkCdlContract(autoLinkCdlContract);
        }
        
        public void DeleteCdlContracts(System.Collections.Generic.Dictionary<long, System.DateTime> dictIdTime, string userName) {
            base.Channel.DeleteCdlContracts(dictIdTime, userName);
        }
        
        public UMGI.GRCS.BusinessEntities.Responses.DataResponseInfo GetLinkedCompanies(string companyName) {
            return base.Channel.GetLinkedCompanies(companyName);
        }
        
        public UMGI.GRCS.BusinessEntities.Responses.DataResponseInfo GetLinkedDivisions(string divisionName) {
            return base.Channel.GetLinkedDivisions(divisionName);
        }
        
        public UMGI.GRCS.BusinessEntities.Responses.DataResponseInfo GetLinkedLabels(string labelName) {
            return base.Channel.GetLinkedLabels(labelName);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.AdminEntities.MappingFilterResults FilterCdlMappings(UMGI.GRCS.BusinessEntities.Entities.AdminEntities.MappingFilterCriteria mappingFilterCriteria) {
            return base.Channel.FilterCdlMappings(mappingFilterCriteria);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.Templates.SecondaryExploitationDefaults GetDefaultDataSecondaryExploitations() {
            return base.Channel.GetDefaultDataSecondaryExploitations();
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.TerritorialDisplay> GetTerritoryData(UMGI.GRCS.BusinessEntities.Entities.BaseEntities.TemplateDetails templateInfo) {
            return base.Channel.GetTerritoryData(templateInfo);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.TerritorialDisplay> GetContractTerritoryDetails(long contractId) {
            return base.Channel.GetContractTerritoryDetails(contractId);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo SaveContract(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails contractDetails) {
            return base.Channel.SaveContract(contractDetails);
        }
        
        public string SaveContractTemplate(UMGI.GRCS.BusinessEntities.Entities.Templates.ContractTemplate contractDetails) {
            return base.Channel.SaveContractTemplate(contractDetails);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.BaseEntities.TemplateDetails> GetContractTemplates(string userName) {
            return base.Channel.GetContractTemplates(userName);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails GetContractTemplate(long templateId, string userName) {
            return base.Channel.GetContractTemplate(templateId, userName);
        }
        
        public UMGI.GRCS.BusinessEntities.Responses.MasterData GetMasterDataForContract(string userName) {
            return base.Channel.GetMasterDataForContract(userName);
        }
        
        public UMGI.GRCS.BusinessEntities.Responses.SearchContractMasterData GetSearchContractMasterData() {
            return base.Channel.GetSearchContractMasterData();
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> SearchContract(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo contractSearch) {
            return base.Channel.SearchContract(contractSearch);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> GetContractMaintenanceWorkQueue(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo contractSearch) {
            return base.Channel.GetContractMaintenanceWorkQueue(contractSearch);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> SearchParentContracts(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo contractSearch) {
            return base.Channel.SearchParentContracts(contractSearch);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractDetails GetContract(long contractId, string userName, UMGI.GRCS.BusinessEntities.Entities.AnaEntities.GrsTasks tasks) {
            return base.Channel.GetContract(contractId, userName, tasks);
        }
        
        public void DeleteContract(long contractId, string userName, System.DateTime requestDateTime) {
            base.Channel.DeleteContract(contractId, userName, requestDateTime);
        }
        
        public UMGI.GRCS.BusinessEntities.Responses.RightsAndRestrictions GetDefaultDataRightsAndRestriction() {
            return base.Channel.GetDefaultDataRightsAndRestriction();
        }
        
        public UMGI.GRCS.BusinessEntities.Responses.DigitalRestrictions GetDefaultDataDigitalRestriction() {
            return base.Channel.GetDefaultDataDigitalRestriction();
        }
        
        public UMGI.GRCS.BusinessEntities.Responses.DigitalRestrictionTemplateResults SaveDigitalRestrictionTemplate(UMGI.GRCS.BusinessEntities.Entities.Templates.DigitalRestrictionTemplate digitalRestrictionTemplateDetails) {
            return base.Channel.SaveDigitalRestrictionTemplate(digitalRestrictionTemplateDetails);
        }
        
        public UMGI.GRCS.BusinessEntities.Responses.ContractTemplatesResult LoadContractTemplates(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.FilterFields filterFields) {
            return base.Channel.LoadContractTemplates(filterFields);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.BaseEntities.TemplateDetails> GetDigitalTemplates(string userName) {
            return base.Channel.GetDigitalTemplates(userName);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.Templates.DigitalRestrictionTemplate GetDigitalTemplate(long digitalRestrictionTemplateId, string userName) {
            return base.Channel.GetDigitalTemplate(digitalRestrictionTemplateId, userName);
        }
        
        public string DeleteTemplates(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.BaseEntities.TemplateDetails> templateDetail, string userName) {
            return base.Channel.DeleteTemplates(templateDetail, userName);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> GetSplitDealContracts(UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo contractInfo) {
            return base.Channel.GetSplitDealContracts(contractInfo);
        }
        
        public void LinkProjectToContract(UMGI.GRCS.BusinessEntities.Entities.ProjectEntities.ProjectInfo linkProjectInfo, long contractId) {
            base.Channel.LinkProjectToContract(linkProjectInfo, contractId);
        }
        
        public System.Collections.Generic.List<long> IsAlreadyLinkedContract(System.Collections.Generic.List<long> ids, long contractId, string repertoireType) {
            return base.Channel.IsAlreadyLinkedContract(ids, contractId, repertoireType);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.GlobalAddressEntities.EmailGroupDetails> GetEmailGroups(UMGI.GRCS.BusinessEntities.Entities.GlobalAddressEntities.EmailGroupDetails emailGroupDetails) {
            return base.Channel.GetEmailGroups(emailGroupDetails);
        }
        
        public void SaveEmailGroup(UMGI.GRCS.BusinessEntities.Entities.GlobalAddressEntities.EmailGroupDetails emailGroupDetails) {
            base.Channel.SaveEmailGroup(emailGroupDetails);
        }
        
        public void DeleteEmailGroups(System.Collections.Generic.List<long> emailGroupIds, string userName, System.DateTime modifiedDateTime) {
            base.Channel.DeleteEmailGroups(emailGroupIds, userName, modifiedDateTime);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ProjectEntities.LinkedProjectInfo> GetLinkedProjectDetails(long contractId, UMGI.GRCS.BusinessEntities.Entities.ContractEntities.FilterFields filterCriteria) {
            return base.Channel.GetLinkedProjectDetails(contractId, filterCriteria);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ReleaseEntities.LinkedReleaseInfo> GetLinkedReleaseDetails(long contractId, UMGI.GRCS.BusinessEntities.Entities.ContractEntities.FilterFields filterCriteria) {
            return base.Channel.GetLinkedReleaseDetails(contractId, filterCriteria);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ResourceEntities.LinkedResourceInfo> GetLinkedResourceDetails(long contractId, UMGI.GRCS.BusinessEntities.Entities.ContractEntities.FilterFields filterCriteria) {
            return base.Channel.GetLinkedResourceDetails(contractId, filterCriteria);
        }
        
        public void UnlinkRepertoire(long contractId, System.Collections.Generic.List<long> projectIdList, System.Collections.Generic.List<long> releaseIdList, System.Collections.Generic.List<long> resourceIdList, string userName) {
            base.Channel.UnlinkRepertoire(contractId, projectIdList, releaseIdList, resourceIdList, userName);
        }
        
        public void UnlinkRepertoireFromWorkQueue(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkQueueEntities.WorkQueue> workQueueItems, string userName, bool ChangeLink) {
            base.Channel.UnlinkRepertoireFromWorkQueue(workQueueItems, userName, ChangeLink);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> GetContractsForSplitDeal(long contractId, UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo contractFilter) {
            return base.Channel.GetContractsForSplitDeal(contractId, contractFilter);
        }
        
        public System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.ContractEntities.ContractInfo> GetChildContracts(UMGI.GRCS.BusinessEntities.Requests.ChildContractsRequest childContractsRequest) {
            return base.Channel.GetChildContracts(childContractsRequest);
        }
        
        public void UnlinkRepertoireFromReleaseResource(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.RepertoireEntities.ChangeLinkInfo> workQueueItems, string userName) {
            base.Channel.UnlinkRepertoireFromReleaseResource(workQueueItems, userName);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.RepertoireEntities.RepertoireFilterResults IsAlreadyUnlinked(long contractId, System.Collections.Generic.List<long> projectIdList, System.Collections.Generic.List<long> releaseIdList, System.Collections.Generic.List<long> resourceIdList) {
            return base.Channel.IsAlreadyUnlinked(contractId, projectIdList, releaseIdList, resourceIdList);
        }
        
        public UMGI.GRCS.BusinessEntities.Entities.RepertoireEntities.RepertoireFilterResults IsAlreadyUnlinkFromWorkQueue(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.WorkQueueEntities.WorkQueue> workQueueItems) {
            return base.Channel.IsAlreadyUnlinkFromWorkQueue(workQueueItems);
        }
        
        public System.Collections.Generic.List<long> GetLinkedRightSets(System.Collections.Generic.List<UMGI.GRCS.BusinessEntities.Entities.RepertoireEntities.ChangeLinkInfo> changeLinkInfos) {
            return base.Channel.GetLinkedRightSets(changeLinkInfos);
        }
    }
}
